{"version":3,"sources":["webpack:///./node_modules/jschardet/src/euckrfreq.js","webpack:///./node_modules/jschardet/src/constants.js","webpack:///./src/base/mm-progress/mm-progress.vue?6b28","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/jschardet/src/latin1prober.js","webpack:///./src/pages/music.vue?f765","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/jschardet/src/escprober.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/jschardet/src/langbulgarianmodel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/jschardet/src/eucjpprober.js","webpack:///./node_modules/jschardet/src/logger.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/jschardet/src/hebrewprober.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/jschardet/src/langhungarianmodel.js","webpack:///./node_modules/papaparse/papaparse.min.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/jschardet/src/langthaimodel.js","webpack:///./node_modules/jschardet/src/euckrprober.js","webpack:///./node_modules/jschardet/src/jisfreq.js","webpack:///./node_modules/jschardet/src/mbcharsetprober.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/jschardet/src/mbcssm/euckr.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/jschardet/src/escsm.js","webpack:///./node_modules/jschardet/src/mbcssm/big5.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/jschardet/src/euctwfreq.js","webpack:///./node_modules/jschardet/src/big5freq.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/jschardet/src/langhebrewmodel.js","webpack:///./node_modules/jschardet/src/euctwprober.js","webpack:///./node_modules/jschardet/src/mbcssm/utf8.js","webpack:///./node_modules/jschardet/src/mbcssm/gb2312.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/jschardet/src/charsetgroupprober.js","webpack:///./src/components/volume/volume.vue?9d22","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/jschardet/src/mbcssm/euctw.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/jschardet/src/gb2312freq.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/jschardet/src/utf8prober.js","webpack:///./node_modules/jschardet/src/codingstatemachine.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/jschardet/src/langgreekmodel.js","webpack:///./node_modules/jschardet/src/index.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/jschardet/src/chardistribution.js","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./src/pages/music.vue?0784","webpack:///./src/utils/axios.js","webpack:///./src/api/index.js","webpack:///./src/pages/mmPlayer.js","webpack:///./src/base/mm-progress/mm-progress.vue?b919","webpack:///src/base/mm-progress/mm-progress.vue","webpack:///./src/base/mm-progress/mm-progress.vue?7993","webpack:///./src/base/mm-progress/mm-progress.vue","webpack:///./src/components/music-btn/music-btn.vue?c65d","webpack:///src/components/music-btn/music-btn.vue","webpack:///./src/components/music-btn/music-btn.vue?b3d9","webpack:///./src/components/music-btn/music-btn.vue","webpack:///./src/components/volume/volume.vue?b989","webpack:///src/components/volume/volume.vue","webpack:///./src/components/volume/volume.vue?0d14","webpack:///./src/components/volume/volume.vue","webpack:///src/pages/music.vue","webpack:///./src/pages/music.vue?28a5","webpack:///./src/pages/music.vue","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/jschardet/src/big5prober.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/jschardet/src/sjisprober.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/jschardet/src/jpcntx.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/jschardet/src/mbcssm/sjis.js","webpack:///./src/utils/util.js","webpack:///./node_modules/jschardet/src/universaldetector.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/jschardet/src/charsetprober.js","webpack:///./src/components/music-btn/music-btn.vue?acc4","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/jschardet/src/mbcssm/eucjp.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/jschardet/src/sbcharsetprober.js","webpack:///./node_modules/jschardet/index.js","webpack:///./node_modules/jschardet/src/mbcsgroupprober.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/jschardet/src/gb2312prober.js","webpack:///./node_modules/jschardet/src/langcyrillicmodel.js","webpack:///./node_modules/jschardet/src/sbcsgroupprober.js"],"names":["exports","EUCKR_TYPICAL_DISTRIBUTION_RATIO","EUCKR_TABLE_SIZE","EUCKRCharToFreqOrder","module","detecting","foundIt","notMe","start","error","itsMe","SHORTCUT_THRESHOLD","utils","buildURL","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","this","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","getUri","params","paramsSerializer","replace","merge","data","uncurryThis","toObject","floor","Math","charAt","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","matched","str","position","captures","namedCaptures","replacement","tailPos","m","symbols","match","ch","capture","n","f","callback","arr","apply","global","toIntegerOrInfinity","toString","requireObjectCoercible","RangeError","count","result","Infinity","call","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","speciesConstructor","advanceStringIndex","toLength","getMethod","arraySlice","callRegExpExec","regexpExec","stickyHelpers","fails","UNSUPPORTED_Y","MAX_UINT32","min","$push","exec","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","re","originalExec","split","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","lim","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","RegExp","source","index","O","splitter","rx","S","res","done","value","C","unicodeMatching","p","q","A","e","z","i","isCallable","classof","TypeError","R","CharSetProber","Constants","UDF","OTH","ASC","ASS","ACV","ACO","ASV","ASO","Latin1_CharToClass","Latin1ClassModel","Latin1Prober","FREQ_CAT_NUM","CLASS_NUM","self","init","reset","_mLastCharClass","_mFreqCounter","getCharsetName","feed","aBuf","filterWithEnglishLetters","c","charCodeAt","charClass","freq","_mState","getState","getConfidence","confidence","total","fn","thisArg","args","Array","CodingStateMachine","escsm","constants","EscCharSetProber","_mCodingSM","HZSMModel","ISO2022CNSMModel","ISO2022JPSMModel","ISO2022KRSMModel","codingSM","active","_mActiveSM","_mDetectedCharset","j","codingState","nextState","getCodingStateMachine","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","len","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","num","encodeChunk","uint8","end","join","extraBytes","parts","maxChunkLength","len2","Latin5_BulgarianCharToOrderMap","win1251BulgarianCharToOrderMap","BulgarianLangModel","Latin5BulgarianModel","Win1251BulgarianModel","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","process","Object","transformRequest","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","PROPER_FUNCTION_NAME","PROPER","redefine","isPrototypeOf","$toString","regExpFlags","TO_STRING","RegExpPrototype","n$ToString","getFlags","NOT_GENERIC","INCORRECT_NAME","name","rf","unsafe","MultiByteCharSetProber","EUCJPDistributionAnalysis","EUCJPContextAnalysis","EUCJPSMModel","logger","EUCJPProber","_mDistributionAnalyzer","_mContextAnalyzer","aLen","log","charLen","getCurrentCharLen","_mLastChar","gotEnoughData","contxtCf","distribCf","max","setLogger","loggerFunction","enabled","enhanceError","message","__CANCEL__","HebrewProber","FINAL_KAF","NORMAL_KAF","FINAL_MEM","NORMAL_MEM","FINAL_NUN","NORMAL_NUN","FINAL_PE","NORMAL_PE","FINAL_TSADI","MIN_FINAL_CHAR_DISTANCE","MIN_MODEL_DISTANCE","VISUAL_HEBREW_NAME","LOGICAL_HEBREW_NAME","_mLogicalProber","_mVisualProber","_mFinalCharLogicalScore","_mFinalCharVisualScore","_mPrev","_mBeforePrev","setModelProbers","logicalProber","visualProber","isFinal","isNonFinal","filterHighBitOnly","cur","finalsub","modelsub","elt","from","Number","ceil","encode","val","encodeURIComponent","serializedParams","key","isArray","v","isDate","toISOString","hashmarkIndex","Latin2_HungarianCharToOrderMap","win1250HungarianCharToOrderMap","HungarianLangModel","Latin2HungarianModel","Win1250HungarianModel","t","s","window","document","postMessage","o","test","location","protocol","a","h","b","dynamicTyping","M","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","r","URL","webkitURL","BLOB_URL","createObjectURL","Blob","type","Worker","onmessage","_","id","userStep","step","userChunk","chunk","userComplete","complete","userError","input","workerId","NODE_STREAM_INPUT","download","l","readable","read","on","g","File","stream","unparse","y","delimiter","BAD_DELIMITERS","filter","quotes","skipEmptyLines","newline","quoteChar","header","columns","escapeChar","escapeFormulae","u","keys","fields","meta","trim","d","constructor","Date","RECORD_SEP","String","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","E","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","each","prop","toUpperCase","attr","FileReader","files","file","inputElem","extend","before","action","reason","splice","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","w","chunkSize","parseInt","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","substring","preview","results","WORKER_ID","finished","concat","_sendError","_readChunk","_chunkLoaded","withCredentials","onload","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","readyState","responseText","getResponseHeader","lastIndexOf","statusText","webkitSlice","mozSlice","FileReaderSync","size","readAsText","encoding","target","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","pow","abort","k","transformHeader","map","parseFloat","row","comments","abs","successful","bestDelimiter","delimitersToGuess","getCharIndex","setTimeout","x","I","T","D","fastMode","L","F","linebreak","truncated","terminate","create","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","isStandardBrowserEnv","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","requestURL","parsed","isString","TIS620CharToOrderMap","ThaiLangModel","TIS620ThaiModel","EUCKRDistributionAnalysis","EUCKRSMModel","EUCKRProber","JIS_TYPICAL_DISTRIBUTION_RATIO","JIS_TABLE_SIZE","JISCharToFreqOrder","nextTick","platform","arch","execPath","title","pid","browser","env","argv","binding","path","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","consts","EUCKR_cls","EUCKR_st","EUCKRCharLenTable","wellKnownSymbol","MATCH","it","createError","reject","HZ_cls","HZ_st","HZCharLenTable","ISO2022CN_cls","ISO2022CN_st","ISO2022CNCharLenTable","ISO2022JP_cls","ISO2022JP_st","ISO2022JPCharLenTable","ISO2022KR_cls","ISO2022KR_st","ISO2022KRCharLenTable","BIG5_cls","BIG5_st","Big5CharLenTable","$","$trim","forcedStringTrimMethod","proto","forced","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","deepMerge","axiosKeys","otherKeys","EUCTW_TYPICAL_DISTRIBUTION_RATIO","EUCTW_TABLE_SIZE","EUCTWCharToFreqOrder","BIG5_TYPICAL_DISTRIBUTION_RATIO","BIG5_TABLE_SIZE","Big5CharToFreqOrder","transformData","isCancel","throwIfCancellationRequested","cancelToken","throwIfRequested","getSubstitution","regExpExec","REPLACE","stringIndexOf","maybeToString","REPLACE_KEEPS_$0","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","groups","nativeReplace","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","functionalReplace","fullUnicode","matchStr","accumulatedResult","nextSourcePosition","replacerArgs","win1255_CharToOrderMap","HebrewLangModel","Win1255HebrewModel","EUCTWDistributionAnalysis","EUCTWSMModel","EUCTWProber","UTF8_cls","UTF8_st","UTF8CharLenTable","GB2312_cls","GB2312_st","GB2312CharLenTable","Cancel","write","expires","domain","secure","cookie","isNumber","toGMTString","decodeURIComponent","remove","now","CharSetGroupProber","_mActiveNum","_mProbers","_mBestGuessProber","prober","st","bestConf","cf","isAbsoluteURL","combineURLs","baseURL","requestedURL","EUCTW_cls","EUCTW_st","EUCTWCharLenTable","CancelToken","executor","resolvePromise","token","cancel","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","isNaN","LN2","GB2312_TYPICAL_DISTRIBUTION_RATIO","GB2312_TABLE_SIZE","GB2312CharToFreqOrder","lengthOfArrayLike","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","SPECIES_SUPPORT","isConcatSpreadable","spreadable","FORCED","arg","UTF8SMModel","UTF8Prober","ONE_CHAR_PROB","_mNumOfMBChar","_mMBCharLen","_mFullLen","_mBasicAsciiLen","unlike","mbCharRatio","nonBasciAsciiLen","sm","_mModel","_mCurrentBytePos","_mCurrentCharLen","_mCurrentState","byteCls","classTable","charLenTable","stateTable","classFactor","IndexedObject","toIndexedObject","arrayMethodIsStrict","un$Join","ES3_STRINGS","STRICT_METHOD","Latin7_CharToOrderMap","win1253_CharToOrderMap","GreekLangModel","Latin7GreekModel","Win1253GreekModel","UniversalDetector","runUniversalDetector","options","Buffer","close","detect","detectAll","enableDebug","console","bind","settle","buildFullPath","parseHeaders","isURLSameOrigin","requestData","requestHeaders","auth","username","password","Authorization","btoa","fullPath","onreadystatechange","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","onabort","ontimeout","timeoutErrorMessage","cookies","xsrfValue","onDownloadProgress","addEventListener","onUploadProgress","upload","base64","ieee754","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","isEncoding","actual","fromArrayLike","byteOffset","obj","copy","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","src","dst","jisfreq","euctwfreq","euckrfreq","gb2312freq","big5freq","CharDistributionAnalysis","ENOUGH_DATA_THRESHOLD","SURE_YES","SURE_NO","MINIMUM_DATA_THRESHOLD","_mCharToFreqOrder","_mTableSize","_mTypicalDistributionRatio","_mDone","_mTotalChars","_mFreqChars","aStr","aCharLen","order","getOrder","GB2312DistributionAnalysis","Big5DistributionAnalysis","SJISDistributionAnalysis","thisNumberValue","$repeat","repeat","un$ToFixed","toFixed","acc","x2","multiply","c2","divide","dataToString","fractionDigits","fractDigits","sign","render","_vm","_h","$createElement","_c","_self","staticClass","handleOpenLyric","$route","_e","keepAlive","class","disable","musicReady","currentMusic","attrs","prev","play","playing","next","_v","_s","singer","duration","_f","currentTime","percentMusic","currentProgress","progressMusic","progressMusicEnd","getModeIconType","getModeIconTitle","modeChange","volume","volumeChange","style","backgroundImage","picUrl","staticRenderFns","axios","use","Vue","$mmToast","getLyric","get","retry","mmPlayerMusic","initAudio","ele","audioEle","onprogress","buffered","onplay","timer","clearTimeout","ontimeupdate","onended","mode","playMode","loop","toastText","playlist","load","onstalled","setPlaying","oncanplay","historyList","setHistory","onpause","ref","barClick","barDown","$event","preventDefault","props","percent","default","percentProgress","move","startX","left","watch","newPercent","moveSilde","offsetWidth","$refs","mmPercentProgress","width","mounted","$nextTick","beforeDestroy","unbindEvents","methods","bindEvents","barMove","barUp","removeEventListener","commitPercent","clientX","touches","pageX","mmProgressInner","clientWidth","$emit","isEnd","component","uploadFile","checkEncoding","reads","readAsDataURL","pop","_this","setPlaylist","getVolumeIconType","handleToggleVolume","volumeProgress","handleVolumeChange","components","MmProgress","required","computed","isMute","newMute","lastVolume","MusicBtn","Volume","filters","format","lyricVisible","lyric","nolyric","lyricIndex","image","newMusic","oldMusic","newPlaying","newTime","time","mmPlayer","initKeyDown","onkeydown","ctrlKey","keyCode","plus","reduce","setCurrentIndex","setPlayMode","orderList","resetCurrentIndex","item","openComment","$router","handleCloseLyric","_getLyric","Big5SMModel","Big5Prober","ignoreDuplicateOf","line","fns","SJISSMModel","SJISContextAnalysis","SJISProber","FormData","isFunction","pipe","URLSearchParams","product","hasOwnProperty","assignValue","JapaneseContextAnalysis","NUM_OF_CATEGORY","DONT_KNOW","ENOUGH_REL_THRESHOLD","MAX_REL_THRESHOLD","_mTotalRel","_mRelSample","_mNeedToSkipCharNum","_mLastCharOrder","rets","jp2CharContext","normalizedName","whitespaces","non","METHOD_NAME","SJIS_cls","SJIS_st","SJISCharLenTable","copyArray","randomSortArray","rand","random","addZero","timeExp","parseLyric","lrc","lines","text","minute","second","isPromise","silencePromise","toHttps","MBCSGroupProber","SBCSGroupProber","minimumThreshold","_state","pureAscii","escAscii","highbyte","_highBitDetector","_escDetector","_mEscCharsetProber","_mCharsetProbers","_mStart","_mGotData","_mInputState","_mBOM","sort","topResult","createInstance","defaultConfig","context","instance","all","promises","spread","filterWithoutEnglishLetters","inTag","curr","isAlpha","isASCII","createNonEnumerableProperty","SPECIES","KEY","SHAM","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","uncurriedNativeRegExpMethod","nativeMethod","regexp","arg2","forceStringMethod","uncurriedNativeMethod","$exec","normalizeArray","allowAboveRoot","up","last","basename","matchedSlash","xs","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","paths","relative","to","fromParts","toParts","samePartsLength","outputParts","sep","dirname","hasRoot","extname","startDot","startPart","preDotState","EUCJP_cls","EUCJP_st","EUCJPCharLenTable","relativeURL","SingleByteCharSetProber","model","reversed","nameProber","SAMPLE_SIZE","SB_ENOUGH_REL_THRESHOLD","POSITIVE_SHORTCUT_THRESHOLD","NEGATIVE_SHORTCUT_THRESHOLD","SYMBOL_CAT_ORDER","NUMBER_OF_SEQ_CAT","POSITIVE_CAT","_mReversed","_mNameProber","_mLastOrder","_mSeqCounters","_mTotalSeqs","_mTotalChar","_mFreqChar","charsetName","keepEnglishLetter","charToOrderMap","precedenceMatrix","mTypicalPositiveRatio","GB2312Prober","handlers","eject","GB2312SMModel","KOI8R_CharToOrderMap","win1251_CharToOrderMap","latin5_CharToOrderMap","macCyrillic_CharToOrderMap","IBM855_CharToOrderMap","IBM866_CharToOrderMap","RussianLangModel","Koi8rModel","Win1251CyrillicModel","Latin5CyrillicModel","MacCyrillicModel","Ibm866Model","Ibm855Model","cyrillicModels","greekModels","hungarianModels","bulgarianModels","hebrewProber","logicalHebrewProber","visualHebrewProber"],"mappings":"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AAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,K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K,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,IAAM,IAAI,KAAM,IAAI,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAM,IAAI,KAAM,IAAK,IAAI,KAAM,IAAI,KAAK,KAAK,KAAO,GAAG,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAC1E,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAAK,IAAI,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAK,IAAI,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAI,KAAM,IAAI,KAC1E,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAK,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAC3E,IAAI,KAAM,IAAK,IAAK,IAAK,IAAI,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAK,IAAK,IAAI,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAK,IAAI,KAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAI,KAAM,IAAI,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAM,IAAK,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAM,IAAK,IAAK,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAM,IAAI,KAC3E,KAAM,IAAI,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAK,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAC3E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK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KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAO,GAAG,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAM,IAAK,IAAK,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAM,IAAK,IAAK,IAAK,IAAI,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAO,GAAG,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAO,GAAG,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAM,GAAG,KAC3E,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAM,GAAG,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAM,IAAK,IAAI,KAAM,IAAI,KAAK,KAAK,KAAO,GAAG,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAAK,IAC3E,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC1E,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAK,IAAK,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAO,GAAG,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAM,IAAI,KAC3E,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAO,GAAG,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,IAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAC1E,IAAI,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAE3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KA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K,KAAK,KAAK,KAAK,KAAK,KAAK,KACzxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MACtF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACvF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MACxF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,KACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,KACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,KACzF,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MACxF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACzF,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KACzF,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,KAAK,MAAM,MACvF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MACxF,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MACvF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,KAAM,MAAM,MAAM,MACxF,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACxF,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KACvF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,IAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MACxF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,KACzF,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAC1F,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACzF,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MACz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E,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE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wkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAU,EAAM,EAAM,EAAEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAC7EwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAU,EAAM,EAAM,EAAM,EAAEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MACtEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAU,EAAM,EAAEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MACpFwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAU,EAAM,EAAM,EAAM,EAAEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MACtEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAU,EAAM,EAAEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MACpFwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAS,GAAM,GAAM,GAAM,GAAGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MACtEwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAS,GAAGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAC3FwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAS,GAAM,GAAM,GAAGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAC7EwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOzkB,MAAMykB,EAAOzkB,MAAMykB,EAAOzkB,MAAMykB,EAAOzkB,MAAMykB,EAAOxkB,MAAMwkB,EAAOxkB,MAClGwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,MAAMwkB,EAAOxkB,OAGlGopB,EAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAErEzpB,EAAOJ,QAAU,CACb,WAAkB2pB,EAClB,YAAkB,GAClB,WAAkBC,EAClB,aAAkBC,EAClB,KAAkB,U,uBCzEtB,IAAI5E,EAAS,EAAQ,QAEjB6E,EAAa,CACb,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,E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,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAK,IAC5E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAO,GAAG,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAC3E,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAM,IAAI,KAAK,KAC3E,KAAO,GAAG,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAC1E,IAAK,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAC1E,IAAI,KAAK,KAAK,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAO,GAAG,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAC5E,KAAK,KAAM,IAAI,KAAK,KAAK,KAAK,KAAO,GAAG,KAAK,KAAM,IAAI,KAAK,KAAM,IAAK,IAAI,KAC1E,IAAI,KAAK,KAAM,IAAI,KAAM,IAAK,IAAI,KAAM,IAAI,KAAM,IAAI,KAAK,KAAO,GAAG,KAAM,IAC5E,KAAK,KAAM,IAAK,IAAI,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAAK,KAAK,KAAM,IAAI,KAC3E,KAAK,KAAK,KAAM,IAAI,KAAM,IAAI,KAAM,IAAK,IAAI,KAAK,KAAM,IAAI,KAAM,IAAI,KAAK,KAC3E,KAAK,KAAK,KAAK,KAAK,KAAO,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAC3E,KAAM,IAAI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AE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACrK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAkGrKnB,EAAoBhnC,UAAY,IAAIynC,EAEpCjpC,EAAQwoC,oBAAsBA,EA0B9B72B,EAAqBnQ,UAAY,IAAIynC,EAErCjpC,EAAQ2R,qBAAuBA,G,kCC/O/B,IAAI/Q,EAAQ,EAAQ,QAEpBR,EAAOJ,QAAU,SAA6B6O,EAAS+6B,GACrDhpC,EAAMuB,QAAQ0M,GAAS,SAAuBxG,EAAOiJ,GAC/CA,IAASs4B,GAAkBt4B,EAAKgK,gBAAkBsuB,EAAetuB,gBACnEzM,EAAQ+6B,GAAkBvhC,SACnBwG,EAAQyC,S,qBCRrB,IAAIZ,EAAuB,EAAQ,QAA8BC,OAC7D3K,EAAQ,EAAQ,QAChB6jC,EAAc,EAAQ,QAEtBC,EAAM,MAIV1pC,EAAOJ,QAAU,SAAU+pC,GACzB,OAAO/jC,GAAM,WACX,QAAS6jC,EAAYE,MAChBD,EAAIC,OAAmBD,GACtBp5B,GAAwBm5B,EAAYE,GAAaz4B,OAASy4B,O,qBCZpE,IAAI9kB,EAAS,EAAQ,QAEjB+kB,EAAW,CACX,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAGd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAA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,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACd,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAGdC,EAAW,CACN,EAA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","file":"js/chunk-4a9c1cbc.42c75a02.js","sourcesContent":["/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// Sampling from about 20M text materials include literature and computer technology\n\n// 128  --> 0.79\n// 256  --> 0.92\n// 512  --> 0.986\n// 1024 --> 0.99944\n// 2048 --> 0.99999\n//\n// Idea Distribution Ratio = 0.98653 / (1-0.98653) = 73.24\n// Random Distribution Ration = 512 / (2350-512) = 0.279.\n//\n// Typical Distribution Ratio\n\nexports.EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0;\n\nexports.EUCKR_TABLE_SIZE = 2352;\n\n// Char to FreqOrder table ,\nexports.EUCKRCharToFreqOrder = [\n  13, 130, 120,1396, 481,1719,1720, 328, 609, 212,1721, 707, 400, 299,1722,  87,\n1397,1723, 104, 536,1117,1203,1724,1267, 685,1268, 508,1725,1726,1727,1728,1398,\n1399,1729,1730,1731, 141, 621, 326,1057, 368,1732, 267, 488,  20,1733,1269,1734,\n 945,1400,1735,  47, 904,1270,1736,1737, 773, 248,1738, 409, 313, 786, 429,1739,\n 116, 987, 813,1401, 683,  75,1204, 145,1740,1741,1742,1743,  16, 847, 667, 622,\n 708,1744,1745,1746, 966, 787, 304, 129,1747,  60, 820, 123, 676,1748,1749,1750,\n1751, 617,1752, 626,1753,1754,1755,1756, 653,1757,1758,1759,1760,1761,1762, 856,\n 344,1763,1764,1765,1766,  89, 401, 418, 806, 905, 848,1767,1768,1769, 946,1205,\n 709,1770,1118,1771, 241,1772,1773,1774,1271,1775, 569,1776, 999,1777,1778,1779,\n1780, 337, 751,1058,  28, 628, 254,1781, 177, 906, 270, 349, 891,1079,1782,  19,\n1783, 379,1784, 315,1785, 629, 754,1402, 559,1786, 636, 203,1206,1787, 710, 567,\n1788, 935, 814,1789,1790,1207, 766, 528,1791,1792,1208,1793,1794,1795,1796,1797,\n1403,1798,1799, 533,1059,1404,1405,1156,1406, 936, 884,1080,1800, 351,1801,1802,\n1803,1804,1805, 801,1806,1807,1808,1119,1809,1157, 714, 474,1407,1810, 298, 899,\n 885,1811,1120, 802,1158,1812, 892,1813,1814,1408, 659,1815,1816,1121,1817,1818,\n1819,1820,1821,1822, 319,1823, 594, 545,1824, 815, 937,1209,1825,1826, 573,1409,\n1022,1827,1210,1828,1829,1830,1831,1832,1833, 556, 722, 807,1122,1060,1834, 697,\n1835, 900, 557, 715,1836,1410, 540,1411, 752,1159, 294, 597,1211, 976, 803, 770,\n1412,1837,1838,  39, 794,1413, 358,1839, 371, 925,1840, 453, 661, 788, 531, 723,\n 544,1023,1081, 869,  91,1841, 392, 430, 790, 602,1414, 677,1082, 457,1415,1416,\n1842,1843, 475, 327,1024,1417, 795, 121,1844, 733, 403,1418,1845,1846,1847, 300,\n 119, 711,1212, 627,1848,1272, 207,1849,1850, 796,1213, 382,1851, 519,1852,1083,\n 893,1853,1854,1855, 367, 809, 487, 671,1856, 663,1857,1858, 956, 471, 306, 857,\n1859,1860,1160,1084,1861,1862,1863,1864,1865,1061,1866,1867,1868,1869,1870,1871,\n 282,  96, 574,1872, 502,1085,1873,1214,1874, 907,1875,1876, 827, 977,1419,1420,\n1421, 268,1877,1422,1878,1879,1880, 308,1881,   2, 537,1882,1883,1215,1884,1885,\n 127, 791,1886,1273,1423,1887,  34, 336, 404, 643,1888, 571, 654, 894, 840,1889,\n   0, 886,1274, 122, 575, 260, 908, 938,1890,1275, 410, 316,1891,1892, 100,1893,\n1894,1123,  48,1161,1124,1025,1895, 633, 901,1276,1896,1897, 115, 816,1898, 317,\n1899, 694,1900, 909, 734,1424, 572, 866,1425, 691,  85, 524,1010, 543, 394, 841,\n1901,1902,1903,1026,1904,1905,1906,1907,1908,1909,  30, 451, 651, 988, 310,1910,\n1911,1426, 810,1216,  93,1912,1913,1277,1217,1914, 858, 759,  45,  58, 181, 610,\n 269,1915,1916, 131,1062, 551, 443,1000, 821,1427, 957, 895,1086,1917,1918, 375,\n1919, 359,1920, 687,1921, 822,1922, 293,1923,1924,  40, 662, 118, 692,  29, 939,\n 887, 640, 482, 174,1925,  69,1162, 728,1428, 910,1926,1278,1218,1279, 386, 870,\n 217, 854,1163, 823,1927,1928,1929,1930, 834,1931,  78,1932, 859,1933,1063,1934,\n1935,1936,1937, 438,1164, 208, 595,1938,1939,1940,1941,1219,1125,1942, 280, 888,\n1429,1430,1220,1431,1943,1944,1945,1946,1947,1280, 150, 510,1432,1948,1949,1950,\n1951,1952,1953,1954,1011,1087,1955,1433,1043,1956, 881,1957, 614, 958,1064,1065,\n1221,1958, 638,1001, 860, 967, 896,1434, 989, 492, 553,1281,1165,1959,1282,1002,\n1283,1222,1960,1961,1962,1963,  36, 383, 228, 753, 247, 454,1964, 876, 678,1965,\n1966,1284, 126, 464, 490, 835, 136, 672, 529, 940,1088,1435, 473,1967,1968, 467,\n  50, 390, 227, 587, 279, 378, 598, 792, 968, 240, 151, 160, 849, 882,1126,1285,\n 639,1044, 133, 140, 288, 360, 811, 563,1027, 561, 142, 523,1969,1970,1971,   7,\n 103, 296, 439, 407, 506, 634, 990,1972,1973,1974,1975, 645,1976,1977,1978,1979,\n1980,1981, 236,1982,1436,1983,1984,1089, 192, 828, 618, 518,1166, 333,1127,1985,\n 818,1223,1986,1987,1988,1989,1990,1991,1992,1993, 342,1128,1286, 746, 842,1994,\n1995, 560, 223,1287,  98,   8, 189, 650, 978,1288,1996,1437,1997,  17, 345, 250,\n 423, 277, 234, 512, 226,  97, 289,  42, 167,1998, 201,1999,2000, 843, 836, 824,\n 532, 338, 783,1090, 182, 576, 436,1438,1439, 527, 500,2001, 947, 889,2002,2003,\n2004,2005, 262, 600, 314, 447,2006, 547,2007, 693, 738,1129,2008,  71,1440, 745,\n 619, 688,2009, 829,2010,2011, 147,2012,  33, 948,2013,2014,  74, 224,2015,  61,\n 191, 918, 399, 637,2016,1028,1130, 257, 902,2017,2018,2019,2020,2021,2022,2023,\n2024,2025,2026, 837,2027,2028,2029,2030, 179, 874, 591,  52, 724, 246,2031,2032,\n2033,2034,1167, 969,2035,1289, 630, 605, 911,1091,1168,2036,2037,2038,1441, 912,\n2039, 623,2040,2041, 253,1169,1290,2042,1442, 146, 620, 611, 577, 433,2043,1224,\n 719,1170, 959, 440, 437, 534,  84, 388, 480,1131, 159, 220, 198, 679,2044,1012,\n 819,1066,1443, 113,1225, 194, 318,1003,1029,2045,2046,2047,2048,1067,2049,2050,\n2051,2052,2053,  59, 913, 112,2054, 632,2055, 455, 144, 739,1291,2056, 273, 681,\n 499,2057, 448,2058,2059, 760,2060,2061, 970, 384, 169, 245,1132,2062,2063, 414,\n1444,2064,2065,  41, 235,2066, 157, 252, 877, 568, 919, 789, 580,2067, 725,2068,\n2069,1292,2070,2071,1445,2072,1446,2073,2074,  55, 588,  66,1447, 271,1092,2075,\n1226,2076, 960,1013, 372,2077,2078,2079,2080,2081,1293,2082,2083,2084,2085, 850,\n2086,2087,2088,2089,2090, 186,2091,1068, 180,2092,2093,2094, 109,1227, 522, 606,\n2095, 867,1448,1093, 991,1171, 926, 353,1133,2096, 581,2097,2098,2099,1294,1449,\n1450,2100, 596,1172,1014,1228,2101,1451,1295,1173,1229,2102,2103,1296,1134,1452,\n 949,1135,2104,2105,1094,1453,1454,1455,2106,1095,2107,2108,2109,2110,2111,2112,\n2113,2114,2115,2116,2117, 804,2118,2119,1230,1231, 805,1456, 405,1136,2120,2121,\n2122,2123,2124, 720, 701,1297, 992,1457, 927,1004,2125,2126,2127,2128,2129,2130,\n  22, 417,2131, 303,2132, 385,2133, 971, 520, 513,2134,1174,  73,1096, 231, 274,\n 962,1458, 673,2135,1459,2136, 152,1137,2137,2138,2139,2140,1005,1138,1460,1139,\n2141,2142,2143,2144,  11, 374, 844,2145, 154,1232,  46,1461,2146, 838, 830, 721,\n1233, 106,2147,  90, 428, 462, 578, 566,1175, 352,2148,2149, 538,1234, 124,1298,\n2150,1462, 761, 565,2151, 686,2152, 649,2153,  72, 173,2154, 460, 415,2155,1463,\n2156,1235, 305,2157,2158,2159,2160,2161,2162, 579,2163,2164,2165,2166,2167, 747,\n2168,2169,2170,2171,1464, 669,2172,2173,2174,2175,2176,1465,2177,  23, 530, 285,\n2178, 335, 729,2179, 397,2180,2181,2182,1030,2183,2184, 698,2185,2186, 325,2187,\n2188, 369,2189, 799,1097,1015, 348,2190,1069, 680,2191, 851,1466,2192,2193,  10,\n2194, 613, 424,2195, 979, 108, 449, 589,  27, 172,  81,1031,  80, 774, 281, 350,\n1032, 525, 301, 582,1176,2196, 674,1045,2197,2198,1467, 730, 762,2199,2200,2201,\n2202,1468,2203, 993,2204,2205, 266,1070, 963,1140,2206,2207,2208, 664,1098, 972,\n2209,2210,2211,1177,1469,1470, 871,2212,2213,2214,2215,2216,1471,2217,2218,2219,\n2220,2221,2222,2223,2224,2225,2226,2227,1472,1236,2228,2229,2230,2231,2232,2233,\n2234,2235,1299,2236,2237, 200,2238, 477, 373,2239,2240, 731, 825, 777,2241,2242,\n2243, 521, 486, 548,2244,2245,2246,1473,1300,  53, 549, 137, 875,  76, 158,2247,\n1301,1474, 469, 396,1016, 278, 712,2248, 321, 442, 503, 767, 744, 941,1237,1178,\n1475,2249,  82, 178,1141,1179, 973,2250,1302,2251, 297,2252,2253, 570,2254,2255,\n2256,  18, 450, 206,2257, 290, 292,1142,2258, 511, 162,  99, 346, 164, 735,2259,\n1476,1477,   4, 554, 343, 798,1099,2260,1100,2261,  43, 171,1303, 139, 215,2262,\n2263, 717, 775,2264,1033, 322, 216,2265, 831,2266, 149,2267,1304,2268,2269, 702,\n1238, 135, 845, 347, 309,2270, 484,2271, 878, 655, 238,1006,1478,2272,  67,2273,\n 295,2274,2275, 461,2276, 478, 942, 412,2277,1034,2278,2279,2280, 265,2281, 541,\n2282,2283,2284,2285,2286,  70, 852,1071,2287,2288,2289,2290,  21,  56, 509, 117,\n 432,2291,2292, 331, 980, 552,1101, 148, 284, 105, 393,1180,1239, 755,2293, 187,\n2294,1046,1479,2295, 340,2296,  63,1047, 230,2297,2298,1305, 763,1306, 101, 800,\n 808, 494,2299,2300,2301, 903,2302,  37,1072,  14,   5,2303,  79, 675,2304, 312,\n2305,2306,2307,2308,2309,1480,   6,1307,2310,2311,2312,   1, 470,  35,  24, 229,\n2313, 695, 210,  86, 778,  15, 784, 592, 779,  32,  77, 855, 964,2314, 259,2315,\n 501, 380,2316,2317,  83, 981, 153, 689,1308,1481,1482,1483,2318,2319, 716,1484,\n2320,2321,2322,2323,2324,2325,1485,2326,2327, 128,  57,  68, 261,1048, 211, 170,\n1240,  31,2328,  51, 435, 742,2329,2330,2331, 635,2332, 264, 456,2333,2334,2335,\n 425,2336,1486, 143, 507, 263, 943,2337, 363, 920,1487, 256,1488,1102, 243, 601,\n1489,2338,2339,2340,2341,2342,2343,2344, 861,2345,2346,2347,2348,2349,2350, 395,\n2351,1490,1491,  62, 535, 166, 225,2352,2353, 668, 419,1241, 138, 604, 928,2354,\n1181,2355,1492,1493,2356,2357,2358,1143,2359, 696,2360, 387, 307,1309, 682, 476,\n2361,2362, 332,  12, 222, 156,2363, 232,2364, 641, 276, 656, 517,1494,1495,1035,\n 416, 736,1496,2365,1017, 586,2366,2367,2368,1497,2369, 242,2370,2371,2372,1498,\n2373, 965, 713,2374,2375,2376,2377, 740, 982,1499, 944,1500,1007,2378,2379,1310,\n1501,2380,2381,2382, 785, 329,2383,2384,1502,2385,2386,2387, 932,2388,1503,2389,\n2390,2391,2392,1242,2393,2394,2395,2396,2397, 994, 950,2398,2399,2400,2401,1504,\n1311,2402,2403,2404,2405,1049, 749,2406,2407, 853, 718,1144,1312,2408,1182,1505,\n2409,2410, 255, 516, 479, 564, 550, 214,1506,1507,1313, 413, 239, 444, 339,1145,\n1036,1508,1509,1314,1037,1510,1315,2411,1511,2412,2413,2414, 176, 703, 497, 624,\n 593, 921, 302,2415, 341, 165,1103,1512,2416,1513,2417,2418,2419, 376,2420, 700,\n2421,2422,2423, 258, 768,1316,2424,1183,2425, 995, 608,2426,2427,2428,2429, 221,\n2430,2431,2432,2433,2434,2435,2436,2437, 195, 323, 726, 188, 897, 983,1317, 377,\n 644,1050, 879,2438, 452,2439,2440,2441,2442,2443,2444, 914,2445,2446,2447,2448,\n 915, 489,2449,1514,1184,2450,2451, 515,  64, 427, 495,2452, 583,2453, 483, 485,\n1038, 562, 213,1515, 748, 666,2454,2455,2456,2457, 334,2458, 780, 996,1008, 705,\n1243,2459,2460,2461,2462,2463, 114,2464, 493,1146, 366, 163,1516, 961,1104,2465,\n 291,2466,1318,1105,2467,1517, 365,2468, 355, 951,1244,2469,1319,2470, 631,2471,\n2472, 218,1320, 364, 320, 756,1518,1519,1321,1520,1322,2473,2474,2475,2476, 997,\n2477,2478,2479,2480, 665,1185,2481, 916,1521,2482,2483,2484, 584, 684,2485,2486,\n 797,2487,1051,1186,2488,2489,2490,1522,2491,2492, 370,2493,1039,1187,  65,2494,\n 434, 205, 463,1188,2495, 125, 812, 391, 402, 826, 699, 286, 398, 155, 781, 771,\n 585,2496, 590, 505,1073,2497, 599, 244, 219, 917,1018, 952, 646,1523,2498,1323,\n2499,2500,  49, 984, 354, 741,2501, 625,2502,1324,2503,1019, 190, 357, 757, 491,\n  95, 782, 868,2504,2505,2506,2507,2508,2509, 134,1524,1074, 422,1525, 898,2510,\n 161,2511,2512,2513,2514, 769,2515,1526,2516,2517, 411,1325,2518, 472,1527,2519,\n2520,2521,2522,2523,2524, 985,2525,2526,2527,2528,2529,2530, 764,2531,1245,2532,\n2533,  25, 204, 311,2534, 496,2535,1052,2536,2537,2538,2539,2540,2541,2542, 199,\n 704, 504, 468, 758, 657,1528, 196,  44, 839,1246, 272, 750,2543, 765, 862,2544,\n2545,1326,2546, 132, 615, 933,2547, 732,2548,2549,2550,1189,1529,2551, 283,1247,\n1053, 607, 929,2552,2553,2554, 930, 183, 872, 616,1040,1147,2555,1148,1020, 441,\n 249,1075,2556,2557,2558, 466, 743,2559,2560,2561,  92, 514, 426, 420, 526,2562,\n2563,2564,2565,2566,2567,2568, 185,2569,2570,2571,2572, 776,1530, 658,2573, 362,\n2574, 361, 922,1076, 793,2575,2576,2577,2578,2579,2580,1531, 251,2581,2582,2583,\n2584,1532,  54, 612, 237,1327,2585,2586, 275, 408, 647, 111,2587,1533,1106, 465,\n   3, 458,   9,  38,2588, 107, 110, 890, 209,  26, 737, 498,2589,1534,2590, 431,\n 202,  88,1535, 356, 287,1107, 660,1149,2591, 381,1536, 986,1150, 445,1248,1151,\n 974,2592,2593, 846,2594, 446, 953, 184,1249,1250, 727,2595, 923, 193, 883,2596,\n2597,2598, 102, 324, 539, 817,2599, 421,1041,2600, 832,2601,  94, 175, 197, 406,\n2602, 459,2603,2604,2605,2606,2607, 330, 555,2608,2609,2610, 706,1108, 389,2611,\n2612,2613,2614, 233,2615, 833, 558, 931, 954,1251,2616,2617,1537, 546,2618,2619,\n1009,2620,2621,2622,1538, 690,1328,2623, 955,2624,1539,2625,2626, 772,2627,2628,\n2629,2630,2631, 924, 648, 863, 603,2632,2633, 934,1540, 864, 865,2634, 642,1042,\n 670,1190,2635,2636,2637,2638, 168,2639, 652, 873, 542,1054,1541,2640,2641,2642,  // 512, 256\n//Everything below is of no interest for detection purpose\n2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,\n2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,\n2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,\n2691,2692,2693,2694,2695,2696,2697,2698,2699,1542, 880,2700,2701,2702,2703,2704,\n2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,\n2721,2722,2723,2724,2725,1543,2726,2727,2728,2729,2730,2731,2732,1544,2733,2734,\n2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,\n2751,2752,2753,2754,1545,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,\n2766,1546,2767,1547,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,\n2780,2781,2782,2783,2784,2785,2786,1548,2787,2788,2789,1109,2790,2791,2792,2793,\n2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,\n2810,2811,2812,1329,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,\n2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,\n2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,\n1549,2857,2858,2859,2860,1550,2861,2862,1551,2863,2864,2865,2866,2867,2868,2869,\n2870,2871,2872,2873,2874,1110,1330,2875,2876,2877,2878,2879,2880,2881,2882,2883,\n2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,\n2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,\n2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,1331,\n2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,1552,2944,2945,\n2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,\n2962,2963,2964,1252,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,\n2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,\n2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,\n3009,3010,3011,3012,1553,3013,3014,3015,3016,3017,1554,3018,1332,3019,3020,3021,\n3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,\n3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,1555,3051,3052,\n3053,1556,1557,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,\n3067,1558,3068,3069,3070,3071,3072,3073,3074,3075,3076,1559,3077,3078,3079,3080,\n3081,3082,3083,1253,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,\n3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,1152,3109,3110,\n3111,3112,3113,1560,3114,3115,3116,3117,1111,3118,3119,3120,3121,3122,3123,3124,\n3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,\n3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,\n3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,\n3173,3174,3175,3176,1333,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,\n3188,3189,1561,3190,3191,1334,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,\n3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,\n3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,\n3234,1562,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,\n3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,\n3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,1563,3278,3279,\n3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,\n3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,\n3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,\n3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,\n3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,\n3360,3361,3362,3363,3364,1335,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,\n3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,1336,3388,3389,\n3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,\n3406,3407,3408,3409,3410,3411,3412,3413,3414,1337,3415,3416,3417,3418,3419,1338,\n3420,3421,3422,1564,1565,3423,3424,3425,3426,3427,3428,3429,3430,3431,1254,3432,\n3433,3434,1339,3435,3436,3437,3438,3439,1566,3440,3441,3442,3443,3444,3445,3446,\n3447,3448,3449,3450,3451,3452,3453,3454,1255,3455,3456,3457,3458,3459,1567,1191,\n3460,1568,1569,3461,3462,3463,1570,3464,3465,3466,3467,3468,1571,3469,3470,3471,\n3472,3473,1572,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,\n1340,3487,3488,3489,3490,3491,3492,1021,3493,3494,3495,3496,3497,3498,1573,3499,\n1341,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,1342,3512,3513,\n3514,3515,3516,1574,1343,3517,3518,3519,1575,3520,1576,3521,3522,3523,3524,3525,\n3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,\n3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,\n3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,\n3574,3575,3576,3577,3578,3579,3580,1577,3581,3582,1578,3583,3584,3585,3586,3587,\n3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,\n3604,1579,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,\n3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,1580,3630,3631,1581,3632,\n3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,\n3649,3650,3651,3652,3653,3654,3655,3656,1582,3657,3658,3659,3660,3661,3662,3663,\n3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,\n3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,\n3696,3697,3698,3699,3700,1192,3701,3702,3703,3704,1256,3705,3706,3707,3708,1583,\n1257,3709,3710,3711,3712,3713,3714,3715,3716,1584,3717,3718,3719,3720,3721,3722,\n3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,\n3739,3740,3741,3742,3743,3744,3745,1344,3746,3747,3748,3749,3750,3751,3752,3753,\n3754,3755,3756,1585,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,1586,3767,\n3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,1345,3779,3780,3781,3782,\n3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,1346,1587,3796,\n3797,1588,3798,3799,3800,3801,3802,3803,3804,3805,3806,1347,3807,3808,3809,3810,\n3811,1589,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,1590,3822,3823,1591,\n1348,3824,3825,3826,3827,3828,3829,3830,1592,3831,3832,1593,3833,3834,3835,3836,\n3837,3838,3839,3840,3841,3842,3843,3844,1349,3845,3846,3847,3848,3849,3850,3851,\n3852,3853,3854,3855,3856,3857,3858,1594,3859,3860,3861,3862,3863,3864,3865,3866,\n3867,3868,3869,1595,3870,3871,3872,3873,1596,3874,3875,3876,3877,3878,3879,3880,\n3881,3882,3883,3884,3885,3886,1597,3887,3888,3889,3890,3891,3892,3893,3894,3895,\n1598,3896,3897,3898,1599,1600,3899,1350,3900,1351,3901,3902,1352,3903,3904,3905,\n3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,\n3922,3923,3924,1258,3925,3926,3927,3928,3929,3930,3931,1193,3932,1601,3933,3934,\n3935,3936,3937,3938,3939,3940,3941,3942,3943,1602,3944,3945,3946,3947,3948,1603,\n3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,\n3965,1604,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,1353,3978,\n3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,1354,3992,3993,\n3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,\n4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,1355,4024,\n4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,\n1605,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,\n4056,4057,4058,4059,4060,1606,4061,4062,4063,4064,1607,4065,4066,4067,4068,4069,\n4070,4071,4072,4073,4074,4075,4076,1194,4077,4078,1608,4079,4080,4081,4082,4083,\n4084,4085,4086,4087,1609,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,\n4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,1259,4109,4110,4111,4112,4113,\n4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,1195,4125,4126,4127,1610,\n4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,1356,4138,4139,4140,4141,4142,\n4143,4144,1611,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,\n4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,\n4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,\n4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,\n4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,1612,4220,\n4221,4222,4223,4224,4225,4226,4227,1357,4228,1613,4229,4230,4231,4232,4233,4234,\n4235,4236,4237,4238,4239,4240,4241,4242,4243,1614,4244,4245,4246,4247,4248,4249,\n4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,\n4266,4267,4268,4269,4270,1196,1358,4271,4272,4273,4274,4275,4276,4277,4278,4279,\n4280,4281,4282,4283,4284,4285,4286,4287,1615,4288,4289,4290,4291,4292,4293,4294,\n4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,\n4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,\n4327,4328,4329,4330,4331,4332,4333,4334,1616,4335,4336,4337,4338,4339,4340,4341,\n4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,\n4358,4359,4360,1617,4361,4362,4363,4364,4365,1618,4366,4367,4368,4369,4370,4371,\n4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,\n4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,\n4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,1619,4417,4418,\n4419,4420,4421,4422,4423,4424,4425,1112,4426,4427,4428,4429,4430,1620,4431,4432,\n4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,1260,1261,4443,4444,4445,4446,\n4447,4448,4449,4450,4451,4452,4453,4454,4455,1359,4456,4457,4458,4459,4460,4461,\n4462,4463,4464,4465,1621,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,\n4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,1055,4490,4491,\n4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,\n4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,1622,4519,4520,4521,1623,\n4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,1360,4536,\n4537,4538,4539,4540,4541,4542,4543, 975,4544,4545,4546,4547,4548,4549,4550,4551,\n4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,\n4568,4569,4570,4571,1624,4572,4573,4574,4575,4576,1625,4577,4578,4579,4580,4581,\n4582,4583,4584,1626,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,1627,\n4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,\n4612,4613,4614,4615,1628,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,\n4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,\n4643,4644,4645,4646,4647,4648,4649,1361,4650,4651,4652,4653,4654,4655,4656,4657,\n4658,4659,4660,4661,1362,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,\n4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,1629,4683,4684,4685,4686,4687,\n1630,4688,4689,4690,4691,1153,4692,4693,4694,1113,4695,4696,4697,4698,4699,4700,\n4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,1197,4712,4713,4714,4715,\n4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,\n4732,4733,4734,4735,1631,4736,1632,4737,4738,4739,4740,4741,4742,4743,4744,1633,\n4745,4746,4747,4748,4749,1262,4750,4751,4752,4753,4754,1363,4755,4756,4757,4758,\n4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,1634,4769,4770,4771,4772,4773,\n4774,4775,4776,4777,4778,1635,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,\n4789,1636,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,\n4804,4805,4806,1637,4807,4808,4809,1638,4810,4811,4812,4813,4814,4815,4816,4817,\n4818,1639,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,\n4833,1077,4834,4835,4836,4837,4838,4839,4840,4841,4842,4843,4844,4845,4846,4847,\n4848,4849,4850,4851,4852,4853,4854,4855,4856,4857,4858,4859,4860,4861,4862,4863,\n4864,4865,4866,4867,4868,4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,\n4880,4881,4882,4883,1640,4884,4885,1641,4886,4887,4888,4889,4890,4891,4892,4893,\n4894,4895,4896,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,\n4910,4911,1642,4912,4913,4914,1364,4915,4916,4917,4918,4919,4920,4921,4922,4923,\n4924,4925,4926,4927,4928,4929,4930,4931,1643,4932,4933,4934,4935,4936,4937,4938,\n4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,\n4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,\n4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,1644,4981,4982,4983,4984,1645,\n4985,4986,1646,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998,4999,\n5000,5001,5002,5003,5004,5005,1647,5006,1648,5007,5008,5009,5010,5011,5012,1078,\n5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,\n1365,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,1649,5040,5041,5042,\n5043,5044,5045,1366,5046,5047,5048,5049,5050,5051,5052,5053,5054,5055,1650,5056,\n5057,5058,5059,5060,5061,5062,5063,5064,5065,5066,5067,5068,5069,5070,5071,5072,\n5073,5074,5075,5076,5077,1651,5078,5079,5080,5081,5082,5083,5084,5085,5086,5087,\n5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,\n5104,5105,5106,5107,5108,5109,5110,1652,5111,5112,5113,5114,5115,5116,5117,5118,\n1367,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,1653,5130,5131,5132,\n5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,\n5149,1368,5150,1654,5151,1369,5152,5153,5154,5155,5156,5157,5158,5159,5160,5161,\n5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,5176,5177,\n5178,1370,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,\n5193,5194,5195,5196,5197,5198,1655,5199,5200,5201,5202,1656,5203,5204,5205,5206,\n1371,5207,1372,5208,5209,5210,5211,1373,5212,5213,1374,5214,5215,5216,5217,5218,\n5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,\n5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,1657,5248,5249,\n5250,5251,1658,1263,5252,5253,5254,5255,5256,1375,5257,5258,5259,5260,5261,5262,\n5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,\n5279,5280,5281,5282,5283,1659,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,\n5294,5295,5296,5297,5298,5299,5300,1660,5301,5302,5303,5304,5305,5306,5307,5308,\n5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,1376,5322,5323,\n5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,1198,5334,5335,5336,5337,5338,\n5339,5340,5341,5342,5343,1661,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,\n5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,\n5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,5382,5383,5384,5385,\n5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,1264,5399,5400,\n5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,1662,5413,5414,5415,\n5416,1663,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,\n5431,5432,5433,5434,5435,5436,5437,5438,1664,5439,5440,5441,5442,5443,5444,5445,\n5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,\n5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,\n5478,1154,5479,5480,5481,5482,5483,5484,5485,1665,5486,5487,5488,5489,5490,5491,\n5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,\n5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,\n5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,\n5540,5541,5542,5543,5544,5545,5546,5547,5548,1377,5549,5550,5551,5552,5553,5554,\n5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,\n1114,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,\n5586,5587,5588,5589,5590,5591,5592,1378,5593,5594,5595,5596,5597,5598,5599,5600,\n5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,1379,5615,\n5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,\n5632,5633,5634,1380,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,\n5647,5648,5649,1381,1056,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,\n1666,5661,5662,5663,5664,5665,5666,5667,5668,1667,5669,1668,5670,5671,5672,5673,\n5674,5675,5676,5677,5678,1155,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,\n5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,1669,5699,5700,5701,5702,5703,\n5704,5705,1670,5706,5707,5708,5709,5710,1671,5711,5712,5713,5714,1382,5715,5716,\n5717,5718,5719,5720,5721,5722,5723,5724,5725,1672,5726,5727,1673,1674,5728,5729,\n5730,5731,5732,5733,5734,5735,5736,1675,5737,5738,5739,5740,5741,5742,5743,5744,\n1676,5745,5746,5747,5748,5749,5750,5751,1383,5752,5753,5754,5755,5756,5757,5758,\n5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,1677,5769,5770,5771,5772,5773,\n1678,5774,5775,5776, 998,5777,5778,5779,5780,5781,5782,5783,5784,5785,1384,5786,\n5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,1679,5801,\n5802,5803,1115,1116,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,\n5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,\n5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,\n5848,5849,5850,5851,5852,5853,5854,5855,1680,5856,5857,5858,5859,5860,5861,5862,\n5863,5864,1681,5865,5866,5867,1682,5868,5869,5870,5871,5872,5873,5874,5875,5876,\n5877,5878,5879,1683,5880,1684,5881,5882,5883,5884,1685,5885,5886,5887,5888,5889,\n5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,\n5906,5907,1686,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,\n5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,1687,\n5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,\n5952,1688,1689,5953,1199,5954,5955,5956,5957,5958,5959,5960,5961,1690,5962,5963,\n5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,\n5980,5981,1385,5982,1386,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,\n5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004,6005,6006,6007,6008,6009,\n6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,\n6026,6027,1265,6028,6029,1691,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,\n6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,\n6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,\n6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,1692,6085,6086,\n6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,\n6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116,6117,6118,\n6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,1693,6132,6133,\n6134,6135,6136,1694,6137,6138,6139,6140,6141,1695,6142,6143,6144,6145,6146,6147,\n6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,\n6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,\n6180,6181,6182,6183,6184,6185,1696,6186,6187,6188,6189,6190,6191,6192,6193,6194,\n6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,\n6211,6212,6213,6214,6215,6216,6217,6218,6219,1697,6220,6221,6222,6223,6224,6225,\n6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,\n6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,1698,6254,6255,6256,\n6257,6258,6259,6260,6261,6262,6263,1200,6264,6265,6266,6267,6268,6269,6270,6271,  //1024\n6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,6286,6287,\n6288,6289,6290,6291,6292,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,1699,\n6303,6304,1700,6305,6306,6307,6308,6309,6310,6311,6312,6313,6314,6315,6316,6317,\n6318,6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,\n6334,6335,6336,6337,6338,6339,1701,6340,6341,6342,6343,6344,1387,6345,6346,6347,\n6348,6349,6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,\n6364,6365,6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,\n6380,6381,6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,\n6396,6397,6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,6411,\n6412,6413,1702,6414,6415,6416,6417,6418,6419,6420,6421,6422,1703,6423,6424,6425,\n6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,1704,6439,6440,\n6441,6442,6443,6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,6455,6456,\n6457,6458,6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,\n6473,6474,6475,6476,6477,6478,6479,6480,6481,6482,6483,6484,6485,6486,6487,6488,\n6489,6490,6491,6492,6493,6494,6495,6496,6497,6498,6499,6500,6501,6502,6503,1266,\n6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,\n6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532,6533,6534,6535,\n6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,\n1705,1706,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,\n6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,\n6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6597,\n6598,6599,6600,6601,6602,6603,6604,6605,6606,6607,6608,6609,6610,6611,6612,6613,\n6614,6615,6616,6617,6618,6619,6620,6621,6622,6623,6624,6625,6626,6627,6628,6629,\n6630,6631,6632,6633,6634,6635,6636,6637,1388,6638,6639,6640,6641,6642,6643,6644,\n1707,6645,6646,6647,6648,6649,6650,6651,6652,6653,6654,6655,6656,6657,6658,6659,\n6660,6661,6662,6663,1708,6664,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,\n1201,6675,6676,6677,6678,6679,6680,6681,6682,6683,6684,6685,6686,6687,6688,6689,\n6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,\n6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,\n6722,6723,6724,6725,1389,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,\n1390,1709,6737,6738,6739,6740,6741,6742,1710,6743,6744,6745,6746,1391,6747,6748,\n6749,6750,6751,6752,6753,6754,6755,6756,6757,1392,6758,6759,6760,6761,6762,6763,\n6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,\n6780,1202,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,\n6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,1711,\n6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,\n6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,1393,6837,6838,6839,6840,\n6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,\n6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,\n6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,\n6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,1712,6903,\n6904,6905,6906,6907,6908,6909,6910,1713,6911,6912,6913,6914,6915,6916,6917,6918,\n6919,6920,6921,6922,6923,6924,6925,6926,6927,6928,6929,6930,6931,6932,6933,6934,\n6935,6936,6937,6938,6939,6940,6941,6942,6943,6944,6945,6946,6947,6948,6949,6950,\n6951,6952,6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,\n6967,6968,6969,6970,6971,6972,6973,6974,1714,6975,6976,6977,6978,6979,6980,6981,\n6982,6983,6984,6985,6986,6987,6988,1394,6989,6990,6991,6992,6993,6994,6995,6996,\n6997,6998,6999,7000,1715,7001,7002,7003,7004,7005,7006,7007,7008,7009,7010,7011,\n7012,7013,7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,\n7028,1716,7029,7030,7031,7032,7033,7034,7035,7036,7037,7038,7039,7040,7041,7042,\n7043,7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,\n7059,7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,7071,7072,7073,7074,\n7075,7076,7077,7078,7079,7080,7081,7082,7083,7084,7085,7086,7087,7088,7089,7090,\n7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105,7106,\n7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,7119,7120,7121,7122,\n7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136,7137,7138,\n7139,7140,7141,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,\n7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167,7168,7169,7170,\n7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183,7184,7185,7186,\n7187,7188,7189,7190,7191,7192,7193,7194,7195,7196,7197,7198,7199,7200,7201,7202,\n7203,7204,7205,7206,7207,1395,7208,7209,7210,7211,7212,7213,1717,7214,7215,7216,\n7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,\n7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245,7246,7247,7248,\n7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261,7262,7263,7264,\n7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277,7278,7279,7280,\n7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293,7294,7295,7296,\n7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308,7309,7310,7311,7312,\n7313,1718,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,\n7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339,7340,7341,7342,7343,\n7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,7354,7355,7356,7357,7358,7359,\n7360,7361,7362,7363,7364,7365,7366,7367,7368,7369,7370,7371,7372,7373,7374,7375,\n7376,7377,7378,7379,7380,7381,7382,7383,7384,7385,7386,7387,7388,7389,7390,7391,\n7392,7393,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,\n7408,7409,7410,7411,7412,7413,7414,7415,7416,7417,7418,7419,7420,7421,7422,7423,\n7424,7425,7426,7427,7428,7429,7430,7431,7432,7433,7434,7435,7436,7437,7438,7439,\n7440,7441,7442,7443,7444,7445,7446,7447,7448,7449,7450,7451,7452,7453,7454,7455,\n7456,7457,7458,7459,7460,7461,7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,\n7472,7473,7474,7475,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,\n7488,7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,\n7504,7505,7506,7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,\n7520,7521,7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,\n7536,7537,7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,7550,7551,\n7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567,\n7568,7569,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582,7583,\n7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598,7599,\n7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614,7615,\n7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,\n7632,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,\n7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661,7662,7663,\n7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7674,7675,7676,7677,7678,7679,\n7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,\n7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,\n7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,\n7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,\n7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,\n7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,\n7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,\n7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,\n7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,\n7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,\n7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,\n7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,\n7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,\n7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,\n7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,\n7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,\n7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,\n7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,\n7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,\n7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,\n8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,\n8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,\n8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,\n8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,\n8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,\n8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,\n8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,\n8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,\n8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,\n8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,\n8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,\n8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,\n8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,\n8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,\n8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,\n8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,\n8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,\n8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,\n8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,\n8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,\n8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,\n8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,\n8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,\n8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,\n8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,\n8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,\n8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,\n8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,\n8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,\n8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,\n8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,\n8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,\n8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,\n8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,\n8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,\n8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,\n8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,\n8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,\n8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,\n8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,\n8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,\n8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,\n8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,\n8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,\n8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,\n8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,\n8736,8737,8738,8739,8740,8741\n];\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nmodule.exports = {\n    detecting   : 0,\n    foundIt     : 1,\n    notMe       : 2,\n\n    start       : 0,\n    error       : 1,\n    itsMe       : 2,\n\n    SHORTCUT_THRESHOLD  : 0.95\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mm-progress.vue?vue&type=style&index=0&lang=less&\"","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\nvar global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar RangeError = global.RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar arraySlice = require('../internals/array-slice-simple');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar $push = [].push;\nvar exec = uncurryThis(/./.exec);\nvar push = uncurryThis($push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return call(nativeSplit, string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = call(regexpExec, separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          push(output, stringSlice(string, lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !exec(separatorCopy, '')) push(output, '');\n      } else push(output, stringSlice(string, lastLastIndex));\n      return output.length > lim ? arraySlice(output, 0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? call(splitter, separator, O, limit)\n        : call(internalSplit, toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          push(A, stringSlice(S, p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            push(A, z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      push(A, stringSlice(S, p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar TypeError = global.TypeError;\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (isCallable(exec)) {\n    var result = call(exec, R, S);\n    if (result !== null) anObject(result);\n    return result;\n  }\n  if (classof(R) === 'RegExp') return call(regexpExec, R, S);\n  throw TypeError('RegExp#exec called on incompatible receiver');\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CharSetProber = require('./charsetprober');\nvar Constants = require('./constants');\n\nvar UDF = 0; // undefined\nvar OTH = 1; // other\nvar ASC = 2; // ascii capital letter\nvar ASS = 3; // ascii small letter\nvar ACV = 4; // accent capital vowel\nvar ACO = 5; // accent capital other\nvar ASV = 6; // accent small vowel\nvar ASO = 7; // accent small other\n\nvar Latin1_CharToClass = [\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 00 - 07\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 08 - 0F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 10 - 17\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 18 - 1F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 20 - 27\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 28 - 2F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 30 - 37\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 38 - 3F\n  OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 40 - 47\n  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 48 - 4F\n  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 50 - 57\n  ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH,   // 58 - 5F\n  OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 60 - 67\n  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 68 - 6F\n  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 70 - 77\n  ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH,   // 78 - 7F\n  OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH,   // 80 - 87\n  OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF,   // 88 - 8F\n  UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 90 - 97\n  OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO,   // 98 - 9F\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A0 - A7\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A8 - AF\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B0 - B7\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B8 - BF\n  ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO,   // C0 - C7\n  ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV,   // C8 - CF\n  ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH,   // D0 - D7\n  ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO,   // D8 - DF\n  ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO,   // E0 - E7\n  ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV,   // E8 - EF\n  ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH,   // F0 - F7\n  ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO    // F8 - FF\n];\n\n// 0 : illegal\n// 1 : very unlikely\n// 2 : normal\n// 3 : very likely\nvar Latin1ClassModel = [\n// UDF OTH ASC ASS ACV ACO ASV ASO\n   0,  0,  0,  0,  0,  0,  0,  0,  // UDF\n   0,  3,  3,  3,  3,  3,  3,  3,  // OTH\n   0,  3,  3,  3,  3,  3,  3,  3,  // ASC\n   0,  3,  3,  3,  1,  1,  3,  3,  // ASS\n   0,  3,  3,  3,  1,  2,  1,  2,  // ACV\n   0,  3,  3,  3,  3,  3,  3,  3,  // ACO\n   0,  3,  1,  3,  1,  1,  1,  3,  // ASV\n   0,  3,  1,  3,  1,  1,  3,  3   // ASO\n];\n\nfunction Latin1Prober() {\n    CharSetProber.apply(this);\n\n    var FREQ_CAT_NUM = 4;\n    var CLASS_NUM = 8; // total classes\n    var self = this;\n\n    function init() {\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mLastCharClass = OTH;\n        this._mFreqCounter = [];\n        for( var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0 );\n        Latin1Prober.prototype.reset.apply(this);\n    }\n\n    this.getCharsetName = function() {\n        return \"windows-1252\";\n    }\n\n    this.feed = function(aBuf) {\n        aBuf = this.filterWithEnglishLetters(aBuf);\n        for( var i = 0; i < aBuf.length; i++ ) {\n            var c = aBuf.charCodeAt(i);\n            var charClass = Latin1_CharToClass[c];\n            var freq = Latin1ClassModel[(this._mLastCharClass * CLASS_NUM) + charClass];\n            if( freq == 0 ) {\n                this._mState = Constants.notMe;\n                break;\n            }\n            this._mFreqCounter[freq]++;\n            this._mLastCharClass = charClass;\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var confidence;\n        var constants;\n\n        if( this.getState() == Constants.notMe ) {\n            return 0.01;\n        }\n\n        var total = 0;\n        for( var i = 0; i < this._mFreqCounter.length; i++ ) {\n            total += this._mFreqCounter[i];\n        }\n        if( total < 0.01 ) {\n            constants = 0.0;\n        } else {\n            confidence = (this._mFreqCounter[3] / total) - (this._mFreqCounter[1] * 20 / total);\n        }\n        if( confidence < 0 ) {\n            confidence = 0.0;\n        }\n        // lower the confidence of latin1 so that other more accurate detector\n        // can take priority.\n        //\n        // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\n        confidence = confidence * 0.95;\n        return confidence;\n    }\n\n    init();\n}\nLatin1Prober.prototype = new CharSetProber();\n\nmodule.exports = Latin1Prober\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./music.vue?vue&type=style&index=0&lang=less&\"","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CharSetProber = require('./charsetprober');\nvar CodingStateMachine = require('./codingstatemachine');\nvar escsm = require('./escsm');\nvar constants = require('./constants');\n\nfunction EscCharSetProber() {\n    CharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = [\n            new CodingStateMachine(escsm.HZSMModel),\n            new CodingStateMachine(escsm.ISO2022CNSMModel),\n            new CodingStateMachine(escsm.ISO2022JPSMModel),\n            new CodingStateMachine(escsm.ISO2022KRSMModel)\n        ];\n        self.reset();\n    }\n\n    this.reset = function() {\n        EscCharSetProber.prototype.reset.apply(this);\n        for( var i = 0, codingSM; codingSM = this._mCodingSM[i]; i++ ) {\n            if( !codingSM ) continue;\n            codingSM.active = true;\n            codingSM.reset();\n        }\n        this._mActiveSM = self._mCodingSM.length;\n        this._mDetectedCharset = null;\n    }\n\n    this.getCharsetName = function() {\n        return this._mDetectedCharset;\n    }\n\n    this.getConfidence = function() {\n        if( this._mDetectedCharset ) {\n            return 0.99;\n        } else {\n            return 0.00;\n        }\n    }\n\n    this.feed = function(aBuf) {\n        for( var i = 0, c; i < aBuf.length; i++ ) {\n            c = aBuf[i];\n            for( var j = 0, codingSM; codingSM = this._mCodingSM[j]; j++ ) {\n                if( !codingSM || !codingSM.active ) continue;\n                var codingState = codingSM.nextState(c);\n                if( codingState == constants.error ) {\n                    codingSM.active = false;\n                    this._mActiveSM--;\n                    if( this._mActiveSM <= 0 ) {\n                        this._mState = constants.notMe;\n                        return this.getState();\n                    }\n                } else if( codingState == constants.itsMe ) {\n                    this._mState = constants.foundIt;\n                    this._mDetectedCharset = codingSM.getCodingStateMachine();\n                    return this.getState();\n                }\n            }\n        }\n\n        return this.getState();\n    }\n\n    init();\n}\nEscCharSetProber.prototype = new CharSetProber();\n\nmodule.exports = EscCharSetProber\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Character Mapping Table:\n// this table is modified base on win1251BulgarianCharToOrderMap, so\n// only number <64 is sure valid\n\nexports.Latin5_BulgarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  // 40\n110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  // 50\n253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  // 60\n116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  // 70\n194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,  // 80\n210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,  // 90\n 81,226,227,228,229,230,105,231,232,233,234,235,236, 45,237,238,  // a0\n 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  // b0\n 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,239, 67,240, 60, 56,  // c0\n  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  // d0\n  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,241, 42, 16,  // e0\n 62,242,243,244, 58,245, 98,246,247,248,249,250,251, 91,252,253   // f0\n];\n\nexports.win1251BulgarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  // 40\n110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  // 50\n253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  // 60\n116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  // 70\n206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,  // 80\n221, 78, 64, 83,121, 98,117,105,222,223,224,225,226,227,228,229,  // 90\n 88,230,231,232,233,122, 89,106,234,235,236,237,238, 45,239,240,  // a0\n 73, 80,118,114,241,242,243,244,245, 62, 58,246,247,248,249,250,  // b0\n 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  // c0\n 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,251, 67,252, 60, 56,  // d0\n  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  // e0\n  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,253, 42, 16   // f0\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 96.9392%\n// first 1024 sequences:3.0618%\n// rest  sequences:     0.2992%\n// negative sequences:  0.0020%\nexports.BulgarianLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,\n3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,\n0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,\n0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,\n0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,\n0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,\n0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,\n2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,\n3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\n3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,\n1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,\n3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,\n1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,\n2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,\n2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,\n3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,\n1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,\n2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,\n2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,\n3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,\n1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,\n2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,\n2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,\n2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,\n1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,\n2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,\n1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,\n3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,\n1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,\n3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,\n1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,\n2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,\n1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,\n2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,\n1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,\n2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,\n1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,\n1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,\n1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,\n2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,\n1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,\n2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,\n1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,\n0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,\n1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,\n1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,\n1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,\n0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,\n0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,\n0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,\n1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,\n0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\n0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,\n1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,\n1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,\n1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\n];\n\nexports.Latin5BulgarianModel = {\n    \"charToOrderMap\"        : exports.Latin5_BulgarianCharToOrderMap,\n    \"precedenceMatrix\"      : exports.BulgarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.969392,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"ISO-8859-5\"\n};\n\nexports.Win1251BulgarianModel = {\n    \"charToOrderMap\"        : exports.win1251BulgarianCharToOrderMap,\n    \"precedenceMatrix\"      : exports.BulgarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.969392,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"windows-1251\"\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar n$ToString = RegExpPrototype[TO_STRING];\nvar getFlags = uncurryThis(regExpFlags);\n\nvar NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype) ? getFlags(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CodingStateMachine = require('./codingstatemachine');\nvar MultiByteCharSetProber = require('./mbcharsetprober');\nvar EUCJPDistributionAnalysis = require('./chardistribution').EUCJPDistributionAnalysis;\nvar EUCJPContextAnalysis = require('./jpcntx').EUCJPContextAnalysis;\nvar EUCJPSMModel = require('./mbcssm/eucjp');\nvar constants = require('./constants');\nvar logger = require('./logger');\n\nfunction EUCJPProber() {\n    MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(EUCJPSMModel);\n        self._mDistributionAnalyzer = new EUCJPDistributionAnalysis();\n        self._mContextAnalyzer = new EUCJPContextAnalysis();\n        self.reset();\n    }\n\n    this.reset = function() {\n        EUCJPProber.prototype.reset.apply(this);\n        this._mContextAnalyzer.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"EUC-JP\";\n    }\n\n    this.feed = function(aBuf) {\n        var aLen = aBuf.length;\n        for( var i = 0; i < aLen; i++ ) {\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\n            if( codingState == constants.error ) {\n                logger.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n                this._mState = constants.notMe;\n                break;\n            } else if( codingState == constants.itsMe ) {\n                this._mState = constants.foundIt;\n                break;\n            } else if( codingState == constants.start ) {\n                var charLen = this._mCodingSM.getCurrentCharLen();\n                if( i == 0 ) {\n                    this._mLastChar[1] = aBuf[0];\n                    this._mContextAnalyzer.feed(this._mLastChar, charLen);\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n                } else {\n                    this._mContextAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\n                }\n            }\n        }\n\n        this._mLastChar[0] = aBuf[aLen - 1];\n\n        if( this.getState() == constants.detecting ) {\n            if( this._mContextAnalyzer.gotEnoughData() &&\n                this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\n                this._mState = constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var contxtCf = this._mContextAnalyzer.getConfidence();\n        var distribCf = this._mDistributionAnalyzer.getConfidence();\n\n        return Math.max(contxtCf, distribCf);\n    }\n\n    init();\n}\nEUCJPProber.prototype = new MultiByteCharSetProber();\n\nmodule.exports = EUCJPProber\n","// By default, do nothing\nexports.log = function () {};\n\nexports.setLogger = function setLogger(loggerFunction) {\n  exports.enabled = true;\n  exports.log = loggerFunction;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// This prober doesn't actually recognize a language or a charset.\n// It is a helper prober for the use of the Hebrew model probers\n\n////// General ideas of the Hebrew charset recognition //////\n//\n// Four main charsets exist in Hebrew:\n// \"ISO-8859-8\" - Visual Hebrew\n// \"windows-1255\" - Logical Hebrew\n// \"ISO-8859-8-I\" - Logical Hebrew\n// \"x-mac-hebrew\" - ?? Logical Hebrew ??\n//\n// Both \"ISO\" charsets use a completely identical set of code points, whereas\n// \"windows-1255\" and \"x-mac-hebrew\" are two different proper supersets of\n// these code points. windows-1255 defines additional characters in the range\n// 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific\n// diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.\n// x-mac-hebrew defines similar additional code points but with a different\n// mapping.\n//\n// As far as an average Hebrew text with no diacritics is concerned, all four\n// charsets are identical with respect to code points. Meaning that for the\n// main Hebrew alphabet, all four map the same values to all 27 Hebrew letters\n// (including final letters).\n//\n// The dominant difference between these charsets is their directionality.\n// \"Visual\" directionality means that the text is ordered as if the renderer is\n// not aware of a BIDI rendering algorithm. The renderer sees the text and\n// draws it from left to right. The text itself when ordered naturally is read\n// backwards. A buffer of Visual Hebrew generally looks like so:\n// \"[last word of first line spelled backwards] [whole line ordered backwards\n// and spelled backwards] [first word of first line spelled backwards]\n// [end of line] [last word of second line] ... etc' \"\n// adding punctuation marks, numbers and English text to visual text is\n// naturally also \"visual\" and from left to right.\n//\n// \"Logical\" directionality means the text is ordered \"naturally\" according to\n// the order it is read. It is the responsibility of the renderer to display\n// the text from right to left. A BIDI algorithm is used to place general\n// punctuation marks, numbers and English text in the text.\n//\n// Texts in x-mac-hebrew are almost impossible to find on the Internet. From\n// what little evidence I could find, it seems that its general directionality\n// is Logical.\n//\n// To sum up all of the above, the Hebrew probing mechanism knows about two\n// charsets:\n// Visual Hebrew - \"ISO-8859-8\" - backwards text - Words and sentences are\n//    backwards while line order is natural. For charset recognition purposes\n//    the line order is unimportant (In fact, for this implementation, even\n//    word order is unimportant).\n// Logical Hebrew - \"windows-1255\" - normal, naturally ordered text.\n//\n// \"ISO-8859-8-I\" is a subset of windows-1255 and doesn't need to be\n//    specifically identified.\n// \"x-mac-hebrew\" is also identified as windows-1255. A text in x-mac-hebrew\n//    that contain special punctuation marks or diacritics is displayed with\n//    some unconverted characters showing as question marks. This problem might\n//    be corrected using another model prober for x-mac-hebrew. Due to the fact\n//    that x-mac-hebrew texts are so rare, writing another model prober isn't\n//    worth the effort and performance hit.\n//\n//////// The Prober ////////\n//\n// The prober is divided between two SBCharSetProbers and a HebrewProber,\n// all of which are managed, created, fed data, inquired and deleted by the\n// SBCSGroupProber. The two SBCharSetProbers identify that the text is in\n// fact some kind of Hebrew, Logical or Visual. The final decision about which\n// one is it is made by the HebrewProber by combining final-letter scores\n// with the scores of the two SBCharSetProbers to produce a final answer.\n//\n// The SBCSGroupProber is responsible for stripping the original text of HTML\n// tags, English characters, numbers, low-ASCII punctuation characters, spaces\n// and new lines. It reduces any sequence of such characters to a single space.\n// The buffer fed to each prober in the SBCS group prober is pure text in\n// high-ASCII.\n// The two SBCharSetProbers (model probers) share the same language model:\n// Win1255Model.\n// The first SBCharSetProber uses the model normally as any other\n// SBCharSetProber does, to recognize windows-1255, upon which this model was\n// built. The second SBCharSetProber is told to make the pair-of-letter\n// lookup in the language model backwards. This in practice exactly simulates\n// a visual Hebrew model using the windows-1255 logical Hebrew model.\n//\n// The HebrewProber is not using any language model. All it does is look for\n// final-letter evidence suggesting the text is either logical Hebrew or visual\n// Hebrew. Disjointed from the model probers, the results of the HebrewProber\n// alone are meaningless. HebrewProber always returns 0.00 as confidence\n// since it never identifies a charset by itself. Instead, the pointer to the\n// HebrewProber is passed to the model probers as a helper \"Name Prober\".\n// When the Group prober receives a positive identification from any prober,\n// it asks for the name of the charset identified. If the prober queried is a\n// Hebrew model prober, the model prober forwards the call to the\n// HebrewProber to make the final decision. In the HebrewProber, the\n// decision is made according to the final-letters scores maintained and Both\n// model probers scores. The answer is returned in the form of the name of the\n// charset identified, either \"windows-1255\" or \"ISO-8859-8\".\n\nvar CharSetProber = require('./charsetprober');\nvar constants = require('./constants')\n\n// https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/IndexOf\nif (!Array.prototype.indexOf)\n{\n    Array.prototype.indexOf = function(elt /*, from*/)\n    {\n        var len = this.length >>> 0;\n\n        var from = Number(arguments[1]) || 0;\n        from = (from < 0)\n             ? Math.ceil(from)\n             : Math.floor(from);\n        if (from < 0)\n            from += len;\n\n        for (; from < len; from++)\n        {\n            if (from in this &&\n                this[from] === elt)\n                return from;\n        }\n        return -1;\n    };\n}\n\nfunction HebrewProber() {\n    CharSetProber.apply(this);\n\n    // windows-1255 / ISO-8859-8 code points of interest\n    var FINAL_KAF = '\\xea'\n    var NORMAL_KAF = '\\xeb'\n    var FINAL_MEM = '\\xed'\n    var NORMAL_MEM = '\\xee'\n    var FINAL_NUN = '\\xef'\n    var NORMAL_NUN = '\\xf0'\n    var FINAL_PE = '\\xf3'\n    var NORMAL_PE = '\\xf4'\n    var FINAL_TSADI = '\\xf5'\n    var NORMAL_TSADI = '\\xf6'\n\n    // Minimum Visual vs Logical final letter score difference.\n    // If the difference is below this, don't rely solely on the final letter score distance.\n    var MIN_FINAL_CHAR_DISTANCE = 5\n\n    // Minimum Visual vs Logical model score difference.\n    // If the difference is below this, don't rely at all on the model score distance.\n    var MIN_MODEL_DISTANCE = 0.01\n\n    var VISUAL_HEBREW_NAME = \"ISO-8859-8\"\n    var LOGICAL_HEBREW_NAME = \"windows-1255\"\n    var self = this;\n\n    function init() {\n        self._mLogicalProber = null;\n        self._mVisualProber = null;\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mFinalCharLogicalScore = 0;\n        this._mFinalCharVisualScore = 0;\n        // The two last characters seen in the previous buffer,\n        // mPrev and mBeforePrev are initialized to space in order to simulate a word\n        // delimiter at the beginning of the data\n        this._mPrev = \" \";\n        this._mBeforePrev = \" \";\n        // These probers are owned by the group prober.\n    }\n\n    this.setModelProbers = function(logicalProber, visualProber) {\n        this._mLogicalProber = logicalProber;\n        this._mVisualProber = visualProber;\n    }\n\n    this.isFinal = function(c) {\n        return [FINAL_KAF, FINAL_MEM, FINAL_NUN, FINAL_PE, FINAL_TSADI].indexOf(c) != -1;\n    }\n\n    this.isNonFinal = function(c) {\n        // The normal Tsadi is not a good Non-Final letter due to words like\n        // 'lechotet' (to chat) containing an apostrophe after the tsadi. This\n        // apostrophe is converted to a space in FilterWithoutEnglishLetters causing\n        // the Non-Final tsadi to appear at an end of a word even though this is not\n        // the case in the original text.\n        // The letters Pe and Kaf rarely display a related behavior of not being a\n        // good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for\n        // example legally end with a Non-Final Pe or Kaf. However, the benefit of\n        // these letters as Non-Final letters outweighs the damage since these words\n        // are quite rare.\n        return [NORMAL_KAF, NORMAL_MEM, NORMAL_NUN, NORMAL_PE].indexOf(c) != -1;\n    }\n\n    this.feed = function(aBuf) {\n        // Final letter analysis for logical-visual decision.\n        // Look for evidence that the received buffer is either logical Hebrew or\n        // visual Hebrew.\n        // The following cases are checked:\n        // 1) A word longer than 1 letter, ending with a final letter. This is an\n        //    indication that the text is laid out \"naturally\" since the final letter\n        //    really appears at the end. +1 for logical score.\n        // 2) A word longer than 1 letter, ending with a Non-Final letter. In normal\n        //    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with\n        //    the Non-Final form of that letter. Exceptions to this rule are mentioned\n        //    above in isNonFinal(). This is an indication that the text is laid out\n        //    backwards. +1 for visual score\n        // 3) A word longer than 1 letter, starting with a final letter. Final letters\n        //    should not appear at the beginning of a word. This is an indication that\n        //    the text is laid out backwards. +1 for visual score.\n        //\n        // The visual score and logical score are accumulated throughout the text and\n        // are finally checked against each other in GetCharSetName().\n        // No checking for final letters in the middle of words is done since that case\n        // is not an indication for either Logical or Visual text.\n        //\n        // We automatically filter out all 7-bit characters (replace them with spaces)\n        // so the word boundary detection works properly. [MAP]\n\n        if( this.getState() == constants.notMe ) {\n            // Both model probers say it's not them. No reason to continue.\n            return constants.notMe;\n        }\n\n        aBuf = this.filterHighBitOnly(aBuf);\n\n        for( var i = 0, cur; i < aBuf.length; i++ ) {\n            cur = aBuf[i];\n            if( cur == \" \" ) {\n                // We stand on a space - a word just ended\n                if( this._mBeforePrev != \" \" ) {\n                    // next-to-last char was not a space so self._mPrev is not a 1 letter word\n                    if( this.isFinal(this._mPrev) ) {\n                        // case (1) [-2:not space][-1:final letter][cur:space]\n                        this._mFinalCharLogicalScore++;\n                    } else if( this.isNonFinal(this._mPrev) ) {\n                        // case (2) [-2:not space][-1:Non-Final letter][cur:space]\n                        this._mFinalCharVisualScore++;\n                    }\n                }\n            } else {\n                // Not standing on a space\n                if( this._mBeforePrev == \" \" && this.isFinal(this._mPrev) && cur != \" \" ) {\n                    // case (3) [-2:space][-1:final letter][cur:not space]\n                    this._mFinalCharVisualScore++;\n                }\n            }\n            this._mBeforePrev = this._mPrev;\n            this._mPrev = cur;\n        }\n        // Forever detecting, till the end or until both model probers return eNotMe (handled above)\n        return constants.detecting;\n    }\n\n    this.getCharsetName = function() {\n        // Make the decision: is it Logical or Visual?\n        // If the final letter score distance is dominant enough, rely on it.\n        var finalsub = this._mFinalCharLogicalScore - this._mFinalCharVisualScore;\n        if( finalsub >= MIN_FINAL_CHAR_DISTANCE ) {\n            return LOGICAL_HEBREW_NAME;\n        }\n        if( finalsub <= -MIN_FINAL_CHAR_DISTANCE ) {\n            return VISUAL_HEBREW_NAME;\n        }\n\n        // It's not dominant enough, try to rely on the model scores instead.\n        var modelsub = this._mLogicalProber.getConfidence() - this._mVisualProber.getConfidence();\n        if( modelsub > MIN_MODEL_DISTANCE ) {\n            return LOGICAL_HEBREW_NAME;\n        }\n        if( modelsub < -MIN_MODEL_DISTANCE ) {\n            return VISUAL_HEBREW_NAME;\n        }\n\n        // Still no good, back to final letter distance, maybe it'll save the day.\n        if( finalsub < 0 ) {\n            return VISUAL_HEBREW_NAME;\n        }\n\n        // (finalsub > 0 - Logical) or (don't know what to do) default to Logical.\n        return LOGICAL_HEBREW_NAME;\n    }\n\n    this.getState = function() {\n        // Remain active as long as any of the model probers are active.\n        if( this._mLogicalProber.getState() == constants.notMe &&\n            this._mVisualProber.getState() == constants.notMe ) {\n            return constants.notMe;\n        }\n        return constants.detecting;\n    }\n\n    init();\n}\nHebrewProber.prototype = new CharSetProber();\n\nmodule.exports = HebrewProber\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Character Mapping Table:\nexports.Latin2_HungarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,\n 46, 71, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,\n253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,\n 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,\n159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,\n175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,\n191,192,193,194,195,196,197, 75,198,199,200,201,202,203,204,205,\n 79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\n221, 51, 81,222, 78,223,224,225,226, 44,227,228,229, 61,230,231,\n232,233,234, 58,235, 66, 59,236,237,238, 60, 69, 63,239,240,241,\n 82, 14, 74,242, 70, 80,243, 72,244, 15, 83, 77, 84, 30, 76, 85,\n245,246,247, 25, 73, 42, 24,248,249,250, 31, 56, 29,251,252,253\n]\n\nexports.win1250HungarianCharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,\n 46, 72, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,\n253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,\n 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,\n161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,\n177,178,179,180, 78,181, 69,182,183,184,185,186,187,188,189,190,\n191,192,193,194,195,196,197, 76,198,199,200,201,202,203,204,205,\n 81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\n221, 51, 83,222, 80,223,224,225,226, 44,227,228,229, 61,230,231,\n232,233,234, 58,235, 66, 59,236,237,238, 60, 70, 63,239,240,241,\n 84, 14, 75,242, 71, 82,243, 73,244, 15, 85, 79, 86, 30, 77, 87,\n245,246,247, 25, 74, 42, 24,248,249,250, 31, 56, 29,251,252,253\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 94.7368%\n// first 1024 sequences:5.2623%\n// rest  sequences:     0.8894%\n// negative sequences:  0.0009%\nexports.HungarianLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,\n3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,\n3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,\n0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,\n0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\n3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\n3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,\n1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,\n1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,\n1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,\n3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,\n2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,\n2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,\n2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,\n2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,\n2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,\n3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,\n2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,\n2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,\n2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,\n1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,\n1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,\n3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,\n1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,\n1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,\n2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,\n2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,\n2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,\n3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,\n2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,\n1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,\n1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,\n2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,\n2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,\n1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,\n1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,\n2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,\n1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,\n1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,\n2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,\n2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,\n2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,\n1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,\n1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,\n1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,\n0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,\n2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,\n2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,\n1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,\n2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,\n1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,\n1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,\n2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,\n2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,\n2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,\n1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,\n2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,\n0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,\n0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\n0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\n2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,\n0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0\n];\n\nexports.Latin2HungarianModel = {\n    \"charToOrderMap\"        : exports.Latin2_HungarianCharToOrderMap,\n    \"precedenceMatrix\"      : exports.HungarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.947368,\n    \"keepEnglishLetter\"     : true,\n    \"charsetName\"           : \"ISO-8859-2\"\n};\n\nexports.Win1250HungarianModel = {\n    \"charToOrderMap\"        : exports.win1250HungarianCharToOrderMap,\n    \"precedenceMatrix\"      : exports.HungarianLangModel,\n    \"mTypicalPositiveRatio\" : 0.947368,\n    \"keepEnglishLetter\"     : true,\n    \"charsetName\"           : \"windows-1250\"\n};\n","/* @license\nPapa Parse\nv5.3.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;M(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!M(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=M(t.step),t.chunk=M(t.chunk),t.complete=M(t.complete),t.error=M(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&M(e.read)&&M(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);\"boolean\"==typeof t.escapeFormulae&&(o=t.escapeFormulae)}();var h=new RegExp(j(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=v(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=v(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=y)}}return r}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);!0===o&&\"string\"==typeof e&&null!==e.match(/^[=+\\-@].*$/)&&(e=\"'\"+e);var i=e.toString().replace(h,a),r=\"boolean\"==typeof n&&n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1);return r?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(M(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(M(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){M(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else M(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&M(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(M(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!M(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){M(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,u=/^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(M(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines)for(var e=0;e<c.data.length;e++)y(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e,t){M(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(j(t)+\"([^]*?)\"+j(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)M(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=M(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,M(m.complete)&&m.complete(c),a=\"\"}}function j(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(e){var S,O=(e=e||{}).delimiter,x=e.newline,I=e.comments,T=e.step,D=e.preview,A=e.fastMode,L=S=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(L=e.escapeChar),(\"string\"!=typeof O||-1<b.BAD_DELIMITERS.indexOf(O))&&(O=\",\"),I===O)throw new Error(\"Comment character same as delimiter\");!0===I?I=\"#\":(\"string\"!=typeof I||-1<b.BAD_DELIMITERS.indexOf(I))&&(I=!1),\"\\n\"!==x&&\"\\r\"!==x&&\"\\r\\n\"!==x&&(x=\"\\n\");var F=0,z=!1;this.parse=function(r,t,i){if(\"string\"!=typeof r)throw new Error(\"Input must be a string\");var n=r.length,e=O.length,s=x.length,a=I.length,o=M(T),h=[],u=[],f=[],d=F=0;if(!r)return C();if(A||!1!==A&&-1===r.indexOf(S)){for(var l=r.split(x),c=0;c<l.length;c++){if(f=l[c],F+=f.length,c!==l.length-1)F+=x.length;else if(i)return C();if(!I||f.substring(0,a)!==I){if(o){if(h=[],k(f.split(O)),R(),z)return C()}else k(f.split(O));if(D&&D<=c)return h=h.slice(0,D),C(!0)}}return C()}for(var p=r.indexOf(O,F),g=r.indexOf(x,F),_=new RegExp(j(L)+j(S),\"g\"),m=r.indexOf(S,F);;)if(r[F]!==S)if(I&&0===f.length&&r.substring(F,F+a)===I){if(-1===g)return C();F=g+s,g=r.indexOf(x,F),p=r.indexOf(O,F)}else if(-1!==p&&(p<g||-1===g))f.push(r.substring(F,p)),F=p+e,p=r.indexOf(O,F);else{if(-1===g)break;if(f.push(r.substring(F,g)),w(g+s),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0)}else for(m=F,F++;;){if(-1===(m=r.indexOf(S,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:F}),E();if(m===n-1)return E(r.substring(F,m).replace(_,S));if(S!==L||r[m+1]!==L){if(S===L||0===m||r[m-1]!==L){-1!==p&&p<m+1&&(p=r.indexOf(O,m+1)),-1!==g&&g<m+1&&(g=r.indexOf(x,m+1));var y=b(-1===g?p:Math.min(p,g));if(r[m+1+y]===O){f.push(r.substring(F,m).replace(_,S)),r[F=m+1+y+e]!==S&&(m=r.indexOf(S,F)),p=r.indexOf(O,F),g=r.indexOf(x,F);break}var v=b(g);if(r.substring(m+1+v,m+1+v+s)===x){if(f.push(r.substring(F,m).replace(_,S)),w(m+1+v+s),p=r.indexOf(O,F),m=r.indexOf(S,F),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:F}),m++}}else m++}return E();function k(e){h.push(e),d=F}function b(e){var t=0;if(-1!==e){var i=r.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=r.substring(F)),f.push(e),F=n,k(f),o&&R()),C()}function w(e){F=e,k(f),f=[],g=r.indexOf(x,F)}function C(e){return{data:h,errors:u,meta:{delimiter:O,linebreak:x,aborted:z,truncated:!!e,cursor:d+(t||0)}}}function R(){T(C()),h=[],u=[]}},this.abort=function(){z=!0},this.getCharIndex=function(){return F}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(M(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else M(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];M(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=w(e[i]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function M(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// The following result for thai was collected from a limited sample (1M).\n\n// Character Mapping Table:\nexports.TIS620CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,182,106,107,100,183,184,185,101, 94,186,187,108,109,110,111,  // 40\n188,189,190, 89, 95,112,113,191,192,193,194,253,253,253,253,253,  // 50\n253, 64, 72, 73,114, 74,115,116,102, 81,201,117, 90,103, 78, 82,  // 60\n 96,202, 91, 79, 84,104,105, 97, 98, 92,203,253,253,253,253,253,  // 70\n209,210,211,212,213, 88,214,215,216,217,218,219,220,118,221,222,\n223,224, 99, 85, 83,225,226,227,228,229,230,231,232,233,234,235,\n236,  5, 30,237, 24,238, 75,  8, 26, 52, 34, 51,119, 47, 58, 57,\n 49, 53, 55, 43, 20, 19, 44, 14, 48,  3, 17, 25, 39, 62, 31, 54,\n 45,  9, 16,  2, 61, 15,239, 12, 42, 46, 18, 21, 76,  4, 66, 63,\n 22, 10,  1, 36, 23, 13, 40, 27, 32, 35, 86,240,241,242,243,244,\n 11, 28, 41, 29, 33,245, 50, 37,  6,  7, 67, 77, 38, 93,246,247,\n 68, 56, 59, 65, 69, 60, 70, 80, 71, 87,248,249,250,251,252,253\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 92.6386%\n// first 1024 sequences:7.3177%\n// rest  sequences:     1.0230%\n// negative sequences:  0.0436%\nexports.ThaiLangModel = [\n0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,\n0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,\n3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,\n0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,\n3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,\n3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,\n3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,\n3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,\n3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,\n3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,\n3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,\n2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,\n3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,\n0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,\n0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,\n3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,\n1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,\n3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,\n3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,\n1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,\n0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\n2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,\n0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,\n3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,\n2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,\n3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,\n0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,\n3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,\n3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,\n2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,\n3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,\n2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,\n3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,\n3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,\n3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,\n3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,\n3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,\n1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,\n0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,\n0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,\n3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,\n3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,\n1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,\n3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,\n3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,\n0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,\n0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,\n1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,\n1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,\n3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,\n0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,\n3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,\n0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,\n0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,\n0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,\n0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,\n0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,\n0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,\n0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,\n3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,\n0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,\n0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,\n3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,\n2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,\n0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,\n3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,\n1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,\n1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,\n1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n];\n\nexports.TIS620ThaiModel = {\n    \"charToOrderMap\"        : exports.TIS620CharToOrderMap,\n    \"precedenceMatrix\"      : exports.ThaiLangModel,\n    \"mTypicalPositiveRatio\" : 0.926386,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"TIS-620\"\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CodingStateMachine = require('./codingstatemachine');\nvar MultiByteCharSetProber = require('./mbcharsetprober');\nvar EUCKRDistributionAnalysis = require('./chardistribution').EUCKRDistributionAnalysis;\nvar EUCKRSMModel = require('./mbcssm/euckr');\n\nfunction EUCKRProber() {\n    MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(EUCKRSMModel);\n        self._mDistributionAnalyzer = new EUCKRDistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"EUC-KR\";\n    }\n\n    init();\n}\nEUCKRProber.prototype = new MultiByteCharSetProber();\n\nmodule.exports = EUCKRProber;\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// Sampling from about 20M text materials include literature and computer technology\n//\n// Japanese frequency table, applied to both S-JIS and EUC-JP\n// They are sorted in order.\n//\n// 128  --> 0.77094\n// 256  --> 0.85710\n// 512  --> 0.92635\n// 1024 --> 0.97130\n// 2048 --> 0.99431\n//\n// Ideal Distribution Ratio = 0.92635 / (1-0.92635) = 12.58\n// Random Distribution Ration = 512 / (2965+62+83+86-512) = 0.191\n//\n// Typical Distribution Ratio, 25% of IDR\n\nexports.JIS_TYPICAL_DISTRIBUTION_RATIO = 3.0;\n\nexports.JIS_TABLE_SIZE = 4368;\n\nexports.JISCharToFreqOrder = [\n  40,   1,   6, 182, 152, 180, 295,2127, 285, 381,3295,4304,3068,4606,3165,3510, //   16\n3511,1822,2785,4607,1193,2226,5070,4608, 171,2996,1247,  18, 179,5071, 856,1661, //   32\n1262,5072, 619, 127,3431,3512,3230,1899,1700, 232, 228,1294,1298, 284, 283,2041, //   48\n2042,1061,1062,  48,  49,  44,  45, 433, 434,1040,1041, 996, 787,2997,1255,4305, //   64\n2108,4609,1684,1648,5073,5074,5075,5076,5077,5078,3687,5079,4610,5080,3927,3928, //   80\n5081,3296,3432, 290,2285,1471,2187,5082,2580,2825,1303,2140,1739,1445,2691,3375, //   96\n1691,3297,4306,4307,4611, 452,3376,1182,2713,3688,3069,4308,5083,5084,5085,5086, //  112\n5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102, //  128\n5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,4097,5113,5114,5115,5116,5117, //  144\n5118,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5131,5132,5133, //  160\n5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149, //  176\n5150,5151,5152,4612,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164, //  192\n5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,1472, 598, 618, 820,1205, //  208\n1309,1412,1858,1307,1692,5176,5177,5178,5179,5180,5181,5182,1142,1452,1234,1172, //  224\n1875,2043,2149,1793,1382,2973, 925,2404,1067,1241, 960,1377,2935,1491, 919,1217, //  240\n1865,2030,1406,1499,2749,4098,5183,5184,5185,5186,5187,5188,2561,4099,3117,1804, //  256\n2049,3689,4309,3513,1663,5189,3166,3118,3298,1587,1561,3433,5190,3119,1625,2998, //  272\n3299,4613,1766,3690,2786,4614,5191,5192,5193,5194,2161,  26,3377,   2,3929,  20, //  288\n3691,  47,4100,  50,  17,  16,  35, 268,  27, 243,  42, 155,  24, 154,  29, 184, //  304\n   4,  91,  14,  92,  53, 396,  33, 289,   9,  37,  64, 620,  21,  39, 321,   5, //  320\n  12,  11,  52,  13,   3, 208, 138,   0,   7,  60, 526, 141, 151,1069, 181, 275, //  336\n1591,  83, 132,1475, 126, 331, 829,  15,  69, 160,  59,  22, 157,  55,1079, 312, //  352\n 109,  38,  23,  25,  10,  19,  79,5195,  61, 382,1124,   8,  30,5196,5197,5198, //  368\n5199,5200,5201,5202,5203,5204,5205,5206,  89,  62,  74,  34,2416, 112, 139, 196, //  384\n 271, 149,  84, 607, 131, 765,  46,  88, 153, 683,  76, 874, 101, 258,  57,  80, //  400\n  32, 364, 121,1508, 169,1547,  68, 235, 145,2999,  41, 360,3027,  70,  63,  31, //  416\n  43, 259, 262,1383,  99, 533, 194,  66,  93, 846, 217, 192,  56, 106,  58, 565, //  432\n 280, 272, 311, 256, 146,  82, 308,  71, 100, 128, 214, 655, 110, 261, 104,1140, //  448\n  54,  51,  36,  87,  67,3070, 185,2618,2936,2020,  28,1066,2390,2059,5207,5208, //  464\n5209,5210,5211,5212,5213,5214,5215,5216,4615,5217,5218,5219,5220,5221,5222,5223, //  480\n5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,3514,5237,5238, //  496\n5239,5240,5241,5242,5243,5244,2297,2031,4616,4310,3692,5245,3071,5246,3598,5247, //  512\n4617,3231,3515,5248,4101,4311,4618,3808,4312,4102,5249,4103,4104,3599,5250,5251, //  528\n5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267, //  544\n5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283, //  560\n5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299, //  576\n5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315, //  592\n5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331, //  608\n5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347, //  624\n5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363, //  640\n5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379, //  656\n5380,5381, 363, 642,2787,2878,2788,2789,2316,3232,2317,3434,2011, 165,1942,3930, //  672\n3931,3932,3933,5382,4619,5383,4620,5384,5385,5386,5387,5388,5389,5390,5391,5392, //  688\n5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408, //  704\n5409,5410,5411,5412,5413,5414,5415,5416,5417,5418,5419,5420,5421,5422,5423,5424, //  720\n5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440, //  736\n5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456, //  752\n5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472, //  768\n5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488, //  784\n5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504, //  800\n5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520, //  816\n5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536, //  832\n5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552, //  848\n5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568, //  864\n5569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584, //  880\n5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600, //  896\n5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,5615,5616, //  912\n5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632, //  928\n5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648, //  944\n5649,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,5661,5662,5663,5664, //  960\n5665,5666,5667,5668,5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680, //  976\n5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696, //  992\n5697,5698,5699,5700,5701,5702,5703,5704,5705,5706,5707,5708,5709,5710,5711,5712, // 1008\n5713,5714,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,5726,5727,5728, // 1024\n5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740,5741,5742,5743,5744, // 1040\n5745,5746,5747,5748,5749,5750,5751,5752,5753,5754,5755,5756,5757,5758,5759,5760, // 1056\n5761,5762,5763,5764,5765,5766,5767,5768,5769,5770,5771,5772,5773,5774,5775,5776, // 1072\n5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792, // 1088\n5793,5794,5795,5796,5797,5798,5799,5800,5801,5802,5803,5804,5805,5806,5807,5808, // 1104\n5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824, // 1120\n5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840, // 1136\n5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856, // 1152\n5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872, // 1168\n5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888, // 1184\n5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904, // 1200\n5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920, // 1216\n5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936, // 1232\n5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952, // 1248\n5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968, // 1264\n5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984, // 1280\n5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000, // 1296\n6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016, // 1312\n6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032, // 1328\n6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048, // 1344\n6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064, // 1360\n6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080, // 1376\n6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096, // 1392\n6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112, // 1408\n6113,6114,2044,2060,4621, 997,1235, 473,1186,4622, 920,3378,6115,6116, 379,1108, // 1424\n4313,2657,2735,3934,6117,3809, 636,3233, 573,1026,3693,3435,2974,3300,2298,4105, // 1440\n 854,2937,2463, 393,2581,2417, 539, 752,1280,2750,2480, 140,1161, 440, 708,1569, // 1456\n 665,2497,1746,1291,1523,3000, 164,1603, 847,1331, 537,1997, 486, 508,1693,2418, // 1472\n1970,2227, 878,1220, 299,1030, 969, 652,2751, 624,1137,3301,2619,  65,3302,2045, // 1488\n1761,1859,3120,1930,3694,3516, 663,1767, 852, 835,3695, 269, 767,2826,2339,1305, // 1504\n 896,1150, 770,1616,6118, 506,1502,2075,1012,2519, 775,2520,2975,2340,2938,4314, // 1520\n3028,2086,1224,1943,2286,6119,3072,4315,2240,1273,1987,3935,1557, 175, 597, 985, // 1536\n3517,2419,2521,1416,3029, 585, 938,1931,1007,1052,1932,1685,6120,3379,4316,4623, // 1552\n 804, 599,3121,1333,2128,2539,1159,1554,2032,3810, 687,2033,2904, 952, 675,1467, // 1568\n3436,6121,2241,1096,1786,2440,1543,1924, 980,1813,2228, 781,2692,1879, 728,1918, // 1584\n3696,4624, 548,1950,4625,1809,1088,1356,3303,2522,1944, 502, 972, 373, 513,2827, // 1600\n 586,2377,2391,1003,1976,1631,6122,2464,1084, 648,1776,4626,2141, 324, 962,2012, // 1616\n2177,2076,1384, 742,2178,1448,1173,1810, 222, 102, 301, 445, 125,2420, 662,2498, // 1632\n 277, 200,1476,1165,1068, 224,2562,1378,1446, 450,1880, 659, 791, 582,4627,2939, // 1648\n3936,1516,1274, 555,2099,3697,1020,1389,1526,3380,1762,1723,1787,2229, 412,2114, // 1664\n1900,2392,3518, 512,2597, 427,1925,2341,3122,1653,1686,2465,2499, 697, 330, 273, // 1680\n 380,2162, 951, 832, 780, 991,1301,3073, 965,2270,3519, 668,2523,2636,1286, 535, // 1696\n1407, 518, 671, 957,2658,2378, 267, 611,2197,3030,6123, 248,2299, 967,1799,2356, // 1712\n 850,1418,3437,1876,1256,1480,2828,1718,6124,6125,1755,1664,2405,6126,4628,2879, // 1728\n2829, 499,2179, 676,4629, 557,2329,2214,2090, 325,3234, 464, 811,3001, 992,2342, // 1744\n2481,1232,1469, 303,2242, 466,1070,2163, 603,1777,2091,4630,2752,4631,2714, 322, // 1760\n2659,1964,1768, 481,2188,1463,2330,2857,3600,2092,3031,2421,4632,2318,2070,1849, // 1776\n2598,4633,1302,2254,1668,1701,2422,3811,2905,3032,3123,2046,4106,1763,1694,4634, // 1792\n1604, 943,1724,1454, 917, 868,2215,1169,2940, 552,1145,1800,1228,1823,1955, 316, // 1808\n1080,2510, 361,1807,2830,4107,2660,3381,1346,1423,1134,4108,6127, 541,1263,1229, // 1824\n1148,2540, 545, 465,1833,2880,3438,1901,3074,2482, 816,3937, 713,1788,2500, 122, // 1840\n1575, 195,1451,2501,1111,6128, 859, 374,1225,2243,2483,4317, 390,1033,3439,3075, // 1856\n2524,1687, 266, 793,1440,2599, 946, 779, 802, 507, 897,1081, 528,2189,1292, 711, // 1872\n1866,1725,1167,1640, 753, 398,2661,1053, 246, 348,4318, 137,1024,3440,1600,2077, // 1888\n2129, 825,4319, 698, 238, 521, 187,2300,1157,2423,1641,1605,1464,1610,1097,2541, // 1904\n1260,1436, 759,2255,1814,2150, 705,3235, 409,2563,3304, 561,3033,2005,2564, 726, // 1920\n1956,2343,3698,4109, 949,3812,3813,3520,1669, 653,1379,2525, 881,2198, 632,2256, // 1936\n1027, 778,1074, 733,1957, 514,1481,2466, 554,2180, 702,3938,1606,1017,1398,6129, // 1952\n1380,3521, 921, 993,1313, 594, 449,1489,1617,1166, 768,1426,1360, 495,1794,3601, // 1968\n1177,3602,1170,4320,2344, 476, 425,3167,4635,3168,1424, 401,2662,1171,3382,1998, // 1984\n1089,4110, 477,3169, 474,6130,1909, 596,2831,1842, 494, 693,1051,1028,1207,3076, // 2000\n 606,2115, 727,2790,1473,1115, 743,3522, 630, 805,1532,4321,2021, 366,1057, 838, // 2016\n 684,1114,2142,4322,2050,1492,1892,1808,2271,3814,2424,1971,1447,1373,3305,1090, // 2032\n1536,3939,3523,3306,1455,2199, 336, 369,2331,1035, 584,2393, 902, 718,2600,6131, // 2048\n2753, 463,2151,1149,1611,2467, 715,1308,3124,1268, 343,1413,3236,1517,1347,2663, // 2064\n2093,3940,2022,1131,1553,2100,2941,1427,3441,2942,1323,2484,6132,1980, 872,2368, // 2080\n2441,2943, 320,2369,2116,1082, 679,1933,3941,2791,3815, 625,1143,2023, 422,2200, // 2096\n3816,6133, 730,1695, 356,2257,1626,2301,2858,2637,1627,1778, 937, 883,2906,2693, // 2112\n3002,1769,1086, 400,1063,1325,3307,2792,4111,3077, 456,2345,1046, 747,6134,1524, // 2128\n 884,1094,3383,1474,2164,1059, 974,1688,2181,2258,1047, 345,1665,1187, 358, 875, // 2144\n3170, 305, 660,3524,2190,1334,1135,3171,1540,1649,2542,1527, 927, 968,2793, 885, // 2160\n1972,1850, 482, 500,2638,1218,1109,1085,2543,1654,2034, 876,  78,2287,1482,1277, // 2176\n 861,1675,1083,1779, 724,2754, 454, 397,1132,1612,2332, 893, 672,1237, 257,2259, // 2192\n2370, 135,3384, 337,2244, 547, 352, 340, 709,2485,1400, 788,1138,2511, 540, 772, // 2208\n1682,2260,2272,2544,2013,1843,1902,4636,1999,1562,2288,4637,2201,1403,1533, 407, // 2224\n 576,3308,1254,2071, 978,3385, 170, 136,1201,3125,2664,3172,2394, 213, 912, 873, // 2240\n3603,1713,2202, 699,3604,3699, 813,3442, 493, 531,1054, 468,2907,1483, 304, 281, // 2256\n4112,1726,1252,2094, 339,2319,2130,2639, 756,1563,2944, 748, 571,2976,1588,2425, // 2272\n2715,1851,1460,2426,1528,1392,1973,3237, 288,3309, 685,3386, 296, 892,2716,2216, // 2288\n1570,2245, 722,1747,2217, 905,3238,1103,6135,1893,1441,1965, 251,1805,2371,3700, // 2304\n2601,1919,1078,  75,2182,1509,1592,1270,2640,4638,2152,6136,3310,3817, 524, 706, // 2320\n1075, 292,3818,1756,2602, 317,  98,3173,3605,3525,1844,2218,3819,2502, 814, 567, // 2336\n 385,2908,1534,6137, 534,1642,3239, 797,6138,1670,1529, 953,4323, 188,1071, 538, // 2352\n 178, 729,3240,2109,1226,1374,2000,2357,2977, 731,2468,1116,2014,2051,6139,1261, // 2368\n1593, 803,2859,2736,3443, 556, 682, 823,1541,6140,1369,2289,1706,2794, 845, 462, // 2384\n2603,2665,1361, 387, 162,2358,1740, 739,1770,1720,1304,1401,3241,1049, 627,1571, // 2400\n2427,3526,1877,3942,1852,1500, 431,1910,1503, 677, 297,2795, 286,1433,1038,1198, // 2416\n2290,1133,1596,4113,4639,2469,1510,1484,3943,6141,2442, 108, 712,4640,2372, 866, // 2432\n3701,2755,3242,1348, 834,1945,1408,3527,2395,3243,1811, 824, 994,1179,2110,1548, // 2448\n1453, 790,3003, 690,4324,4325,2832,2909,3820,1860,3821, 225,1748, 310, 346,1780, // 2464\n2470, 821,1993,2717,2796, 828, 877,3528,2860,2471,1702,2165,2910,2486,1789, 453, // 2480\n 359,2291,1676,  73,1164,1461,1127,3311, 421, 604, 314,1037, 589, 116,2487, 737, // 2496\n 837,1180, 111, 244, 735,6142,2261,1861,1362, 986, 523, 418, 581,2666,3822, 103, // 2512\n 855, 503,1414,1867,2488,1091, 657,1597, 979, 605,1316,4641,1021,2443,2078,2001, // 2528\n1209,  96, 587,2166,1032, 260,1072,2153, 173,  94, 226,3244, 819,2006,4642,4114, // 2544\n2203, 231,1744, 782,  97,2667, 786,3387, 887, 391, 442,2219,4326,1425,6143,2694, // 2560\n 633,1544,1202, 483,2015, 592,2052,1958,2472,1655, 419, 129,4327,3444,3312,1714, // 2576\n1257,3078,4328,1518,1098, 865,1310,1019,1885,1512,1734, 469,2444, 148, 773, 436, // 2592\n1815,1868,1128,1055,4329,1245,2756,3445,2154,1934,1039,4643, 579,1238, 932,2320, // 2608\n 353, 205, 801, 115,2428, 944,2321,1881, 399,2565,1211, 678, 766,3944, 335,2101, // 2624\n1459,1781,1402,3945,2737,2131,1010, 844, 981,1326,1013, 550,1816,1545,2620,1335, // 2640\n1008, 371,2881, 936,1419,1613,3529,1456,1395,2273,1834,2604,1317,2738,2503, 416, // 2656\n1643,4330, 806,1126, 229, 591,3946,1314,1981,1576,1837,1666, 347,1790, 977,3313, // 2672\n 764,2861,1853, 688,2429,1920,1462,  77, 595, 415,2002,3034, 798,1192,4115,6144, // 2688\n2978,4331,3035,2695,2582,2072,2566, 430,2430,1727, 842,1396,3947,3702, 613, 377, // 2704\n 278, 236,1417,3388,3314,3174, 757,1869, 107,3530,6145,1194, 623,2262, 207,1253, // 2720\n2167,3446,3948, 492,1117,1935, 536,1838,2757,1246,4332, 696,2095,2406,1393,1572, // 2736\n3175,1782, 583, 190, 253,1390,2230, 830,3126,3389, 934,3245,1703,1749,2979,1870, // 2752\n2545,1656,2204, 869,2346,4116,3176,1817, 496,1764,4644, 942,1504, 404,1903,1122, // 2768\n1580,3606,2945,1022, 515, 372,1735, 955,2431,3036,6146,2797,1110,2302,2798, 617, // 2784\n6147, 441, 762,1771,3447,3607,3608,1904, 840,3037,  86, 939,1385, 572,1370,2445, // 2800\n1336, 114,3703, 898, 294, 203,3315, 703,1583,2274, 429, 961,4333,1854,1951,3390, // 2816\n2373,3704,4334,1318,1381, 966,1911,2322,1006,1155, 309, 989, 458,2718,1795,1372, // 2832\n1203, 252,1689,1363,3177, 517,1936, 168,1490, 562, 193,3823,1042,4117,1835, 551, // 2848\n 470,4645, 395, 489,3448,1871,1465,2583,2641, 417,1493, 279,1295, 511,1236,1119, // 2864\n  72,1231,1982,1812,3004, 871,1564, 984,3449,1667,2696,2096,4646,2347,2833,1673, // 2880\n3609, 695,3246,2668, 807,1183,4647, 890, 388,2333,1801,1457,2911,1765,1477,1031, // 2896\n3316,3317,1278,3391,2799,2292,2526, 163,3450,4335,2669,1404,1802,6148,2323,2407, // 2912\n1584,1728,1494,1824,1269, 298, 909,3318,1034,1632, 375, 776,1683,2061, 291, 210, // 2928\n1123, 809,1249,1002,2642,3038, 206,1011,2132, 144, 975, 882,1565, 342, 667, 754, // 2944\n1442,2143,1299,2303,2062, 447, 626,2205,1221,2739,2912,1144,1214,2206,2584, 760, // 2960\n1715, 614, 950,1281,2670,2621, 810, 577,1287,2546,4648, 242,2168, 250,2643, 691, // 2976\n 123,2644, 647, 313,1029, 689,1357,2946,1650, 216, 771,1339,1306, 808,2063, 549, // 2992\n 913,1371,2913,2914,6149,1466,1092,1174,1196,1311,2605,2396,1783,1796,3079, 406, // 3008\n2671,2117,3949,4649, 487,1825,2220,6150,2915, 448,2348,1073,6151,2397,1707, 130, // 3024\n 900,1598, 329, 176,1959,2527,1620,6152,2275,4336,3319,1983,2191,3705,3610,2155, // 3040\n3706,1912,1513,1614,6153,1988, 646, 392,2304,1589,3320,3039,1826,1239,1352,1340, // 3056\n2916, 505,2567,1709,1437,2408,2547, 906,6154,2672, 384,1458,1594,1100,1329, 710, // 3072\n 423,3531,2064,2231,2622,1989,2673,1087,1882, 333, 841,3005,1296,2882,2379, 580, // 3088\n1937,1827,1293,2585, 601, 574, 249,1772,4118,2079,1120, 645, 901,1176,1690, 795, // 3104\n2207, 478,1434, 516,1190,1530, 761,2080, 930,1264, 355, 435,1552, 644,1791, 987, // 3120\n 220,1364,1163,1121,1538, 306,2169,1327,1222, 546,2645, 218, 241, 610,1704,3321, // 3136\n1984,1839,1966,2528, 451,6155,2586,3707,2568, 907,3178, 254,2947, 186,1845,4650, // 3152\n 745, 432,1757, 428,1633, 888,2246,2221,2489,3611,2118,1258,1265, 956,3127,1784, // 3168\n4337,2490, 319, 510, 119, 457,3612, 274,2035,2007,4651,1409,3128, 970,2758, 590, // 3184\n2800, 661,2247,4652,2008,3950,1420,1549,3080,3322,3951,1651,1375,2111, 485,2491, // 3200\n1429,1156,6156,2548,2183,1495, 831,1840,2529,2446, 501,1657, 307,1894,3247,1341, // 3216\n 666, 899,2156,1539,2549,1559, 886, 349,2208,3081,2305,1736,3824,2170,2759,1014, // 3232\n1913,1386, 542,1397,2948, 490, 368, 716, 362, 159, 282,2569,1129,1658,1288,1750, // 3248\n2674, 276, 649,2016, 751,1496, 658,1818,1284,1862,2209,2087,2512,3451, 622,2834, // 3264\n 376, 117,1060,2053,1208,1721,1101,1443, 247,1250,3179,1792,3952,2760,2398,3953, // 3280\n6157,2144,3708, 446,2432,1151,2570,3452,2447,2761,2835,1210,2448,3082, 424,2222, // 3296\n1251,2449,2119,2836, 504,1581,4338, 602, 817, 857,3825,2349,2306, 357,3826,1470, // 3312\n1883,2883, 255, 958, 929,2917,3248, 302,4653,1050,1271,1751,2307,1952,1430,2697, // 3328\n2719,2359, 354,3180, 777, 158,2036,4339,1659,4340,4654,2308,2949,2248,1146,2232, // 3344\n3532,2720,1696,2623,3827,6158,3129,1550,2698,1485,1297,1428, 637, 931,2721,2145, // 3360\n 914,2550,2587,  81,2450, 612, 827,2646,1242,4655,1118,2884, 472,1855,3181,3533, // 3376\n3534, 569,1353,2699,1244,1758,2588,4119,2009,2762,2171,3709,1312,1531,6159,1152, // 3392\n1938, 134,1830, 471,3710,2276,1112,1535,3323,3453,3535, 982,1337,2950, 488, 826, // 3408\n 674,1058,1628,4120,2017, 522,2399, 211, 568,1367,3454, 350, 293,1872,1139,3249, // 3424\n1399,1946,3006,1300,2360,3324, 588, 736,6160,2606, 744, 669,3536,3828,6161,1358, // 3440\n 199, 723, 848, 933, 851,1939,1505,1514,1338,1618,1831,4656,1634,3613, 443,2740, // 3456\n3829, 717,1947, 491,1914,6162,2551,1542,4121,1025,6163,1099,1223, 198,3040,2722, // 3472\n 370, 410,1905,2589, 998,1248,3182,2380, 519,1449,4122,1710, 947, 928,1153,4341, // 3488\n2277, 344,2624,1511, 615, 105, 161,1212,1076,1960,3130,2054,1926,1175,1906,2473, // 3504\n 414,1873,2801,6164,2309, 315,1319,3325, 318,2018,2146,2157, 963, 631, 223,4342, // 3520\n4343,2675, 479,3711,1197,2625,3712,2676,2361,6165,4344,4123,6166,2451,3183,1886, // 3536\n2184,1674,1330,1711,1635,1506, 799, 219,3250,3083,3954,1677,3713,3326,2081,3614, // 3552\n1652,2073,4657,1147,3041,1752, 643,1961, 147,1974,3955,6167,1716,2037, 918,3007, // 3568\n1994, 120,1537, 118, 609,3184,4345, 740,3455,1219, 332,1615,3830,6168,1621,2980, // 3584\n1582, 783, 212, 553,2350,3714,1349,2433,2082,4124, 889,6169,2310,1275,1410, 973, // 3600\n 166,1320,3456,1797,1215,3185,2885,1846,2590,2763,4658, 629, 822,3008, 763, 940, // 3616\n1990,2862, 439,2409,1566,1240,1622, 926,1282,1907,2764, 654,2210,1607, 327,1130, // 3632\n3956,1678,1623,6170,2434,2192, 686, 608,3831,3715, 903,3957,3042,6171,2741,1522, // 3648\n1915,1105,1555,2552,1359, 323,3251,4346,3457, 738,1354,2553,2311,2334,1828,2003, // 3664\n3832,1753,2351,1227,6172,1887,4125,1478,6173,2410,1874,1712,1847, 520,1204,2607, // 3680\n 264,4659, 836,2677,2102, 600,4660,3833,2278,3084,6174,4347,3615,1342, 640, 532, // 3696\n 543,2608,1888,2400,2591,1009,4348,1497, 341,1737,3616,2723,1394, 529,3252,1321, // 3712\n 983,4661,1515,2120, 971,2592, 924, 287,1662,3186,4349,2700,4350,1519, 908,1948, // 3728\n2452, 156, 796,1629,1486,2223,2055, 694,4126,1259,1036,3392,1213,2249,2742,1889, // 3744\n1230,3958,1015, 910, 408, 559,3617,4662, 746, 725, 935,4663,3959,3009,1289, 563, // 3760\n 867,4664,3960,1567,2981,2038,2626, 988,2263,2381,4351, 143,2374, 704,1895,6175, // 3776\n1188,3716,2088, 673,3085,2362,4352, 484,1608,1921,2765,2918, 215, 904,3618,3537, // 3792\n 894, 509, 976,3043,2701,3961,4353,2837,2982, 498,6176,6177,1102,3538,1332,3393, // 3808\n1487,1636,1637, 233, 245,3962, 383, 650, 995,3044, 460,1520,1206,2352, 749,3327, // 3824\n 530, 700, 389,1438,1560,1773,3963,2264, 719,2951,2724,3834, 870,1832,1644,1000, // 3840\n 839,2474,3717, 197,1630,3394, 365,2886,3964,1285,2133, 734, 922, 818,1106, 732, // 3856\n 480,2083,1774,3458, 923,2279,1350, 221,3086,  85,2233,2234,3835,1585,3010,2147, // 3872\n1387,1705,2382,1619,2475, 133, 239,2802,1991,1016,2084,2383, 411,2838,1113, 651, // 3888\n1985,1160,3328, 990,1863,3087,1048,1276,2647, 265,2627,1599,3253,2056, 150, 638, // 3904\n2019, 656, 853, 326,1479, 680,1439,4354,1001,1759, 413,3459,3395,2492,1431, 459, // 3920\n4355,1125,3329,2265,1953,1450,2065,2863, 849, 351,2678,3131,3254,3255,1104,1577, // 3936\n 227,1351,1645,2453,2193,1421,2887, 812,2121, 634,  95,2435, 201,2312,4665,1646, // 3952\n1671,2743,1601,2554,2702,2648,2280,1315,1366,2089,3132,1573,3718,3965,1729,1189, // 3968\n 328,2679,1077,1940,1136, 558,1283, 964,1195, 621,2074,1199,1743,3460,3619,1896, // 3984\n1916,1890,3836,2952,1154,2112,1064, 862, 378,3011,2066,2113,2803,1568,2839,6178, // 4000\n3088,2919,1941,1660,2004,1992,2194, 142, 707,1590,1708,1624,1922,1023,1836,1233, // 4016\n1004,2313, 789, 741,3620,6179,1609,2411,1200,4127,3719,3720,4666,2057,3721, 593, // 4032\n2840, 367,2920,1878,6180,3461,1521, 628,1168, 692,2211,2649, 300, 720,2067,2571, // 4048\n2953,3396, 959,2504,3966,3539,3462,1977, 701,6181, 954,1043, 800, 681, 183,3722, // 4064\n1803,1730,3540,4128,2103, 815,2314, 174, 467, 230,2454,1093,2134, 755,3541,3397, // 4080\n1141,1162,6182,1738,2039, 270,3256,2513,1005,1647,2185,3837, 858,1679,1897,1719, // 4096\n2954,2324,1806, 402, 670, 167,4129,1498,2158,2104, 750,6183, 915, 189,1680,1551, // 4112\n 455,4356,1501,2455, 405,1095,2955, 338,1586,1266,1819, 570, 641,1324, 237,1556, // 4128\n2650,1388,3723,6184,1368,2384,1343,1978,3089,2436, 879,3724, 792,1191, 758,3012, // 4144\n1411,2135,1322,4357, 240,4667,1848,3725,1574,6185, 420,3045,1546,1391, 714,4358, // 4160\n1967, 941,1864, 863, 664, 426, 560,1731,2680,1785,2864,1949,2363, 403,3330,1415, // 4176\n1279,2136,1697,2335, 204, 721,2097,3838,  90,6186,2085,2505, 191,3967, 124,2148, // 4192\n1376,1798,1178,1107,1898,1405, 860,4359,1243,1272,2375,2983,1558,2456,1638, 113, // 4208\n3621, 578,1923,2609, 880, 386,4130, 784,2186,2266,1422,2956,2172,1722, 497, 263, // 4224\n2514,1267,2412,2610, 177,2703,3542, 774,1927,1344, 616,1432,1595,1018, 172,4360, // 4240\n2325, 911,4361, 438,1468,3622, 794,3968,2024,2173,1681,1829,2957, 945, 895,3090, // 4256\n 575,2212,2476, 475,2401,2681, 785,2744,1745,2293,2555,1975,3133,2865, 394,4668, // 4272\n3839, 635,4131, 639, 202,1507,2195,2766,1345,1435,2572,3726,1908,1184,1181,2457, // 4288\n3727,3134,4362, 843,2611, 437, 916,4669, 234, 769,1884,3046,3047,3623, 833,6187, // 4304\n1639,2250,2402,1355,1185,2010,2047, 999, 525,1732,1290,1488,2612, 948,1578,3728, // 4320\n2413,2477,1216,2725,2159, 334,3840,1328,3624,2921,1525,4132, 564,1056, 891,4363, // 4336\n1444,1698,2385,2251,3729,1365,2281,2235,1717,6188, 864,3841,2515, 444, 527,2767, // 4352\n2922,3625, 544, 461,6189, 566, 209,2437,3398,2098,1065,2068,3331,3626,3257,2137, // 4368  //last 512\n//Everything below is of no interest for detection purpose\n2138,2122,3730,2888,1995,1820,1044,6190,6191,6192,6193,6194,6195,6196,6197,6198, // 4384\n6199,6200,6201,6202,6203,6204,6205,4670,6206,6207,6208,6209,6210,6211,6212,6213, // 4400\n6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229, // 4416\n6230,6231,6232,6233,6234,6235,6236,6237,3187,6238,6239,3969,6240,6241,6242,6243, // 4432\n6244,4671,6245,6246,4672,6247,6248,4133,6249,6250,4364,6251,2923,2556,2613,4673, // 4448\n4365,3970,6252,6253,6254,6255,4674,6256,6257,6258,2768,2353,4366,4675,4676,3188, // 4464\n4367,3463,6259,4134,4677,4678,6260,2267,6261,3842,3332,4368,3543,6262,6263,6264, // 4480\n3013,1954,1928,4135,4679,6265,6266,2478,3091,6267,4680,4369,6268,6269,1699,6270, // 4496\n3544,4136,4681,6271,4137,6272,4370,2804,6273,6274,2593,3971,3972,4682,6275,2236, // 4512\n4683,6276,6277,4684,6278,6279,4138,3973,4685,6280,6281,3258,6282,6283,6284,6285, // 4528\n3974,4686,2841,3975,6286,6287,3545,6288,6289,4139,4687,4140,6290,4141,6291,4142, // 4544\n6292,6293,3333,6294,6295,6296,4371,6297,3399,6298,6299,4372,3976,6300,6301,6302, // 4560\n4373,6303,6304,3843,3731,6305,4688,4374,6306,6307,3259,2294,6308,3732,2530,4143, // 4576\n6309,4689,6310,6311,6312,3048,6313,6314,4690,3733,2237,6315,6316,2282,3334,6317, // 4592\n6318,3844,6319,6320,4691,6321,3400,4692,6322,4693,6323,3049,6324,4375,6325,3977, // 4608\n6326,6327,6328,3546,6329,4694,3335,6330,4695,4696,6331,6332,6333,6334,4376,3978, // 4624\n6335,4697,3979,4144,6336,3980,4698,6337,6338,6339,6340,6341,4699,4700,4701,6342, // 4640\n6343,4702,6344,6345,4703,6346,6347,4704,6348,4705,4706,3135,6349,4707,6350,4708, // 4656\n6351,4377,6352,4709,3734,4145,6353,2506,4710,3189,6354,3050,4711,3981,6355,3547, // 4672\n3014,4146,4378,3735,2651,3845,3260,3136,2224,1986,6356,3401,6357,4712,2594,3627, // 4688\n3137,2573,3736,3982,4713,3628,4714,4715,2682,3629,4716,6358,3630,4379,3631,6359, // 4704\n6360,6361,3983,6362,6363,6364,6365,4147,3846,4717,6366,6367,3737,2842,6368,4718, // 4720\n2628,6369,3261,6370,2386,6371,6372,3738,3984,4719,3464,4720,3402,6373,2924,3336, // 4736\n4148,2866,6374,2805,3262,4380,2704,2069,2531,3138,2806,2984,6375,2769,6376,4721, // 4752\n4722,3403,6377,6378,3548,6379,6380,2705,3092,1979,4149,2629,3337,2889,6381,3338, // 4768\n4150,2557,3339,4381,6382,3190,3263,3739,6383,4151,4723,4152,2558,2574,3404,3191, // 4784\n6384,6385,4153,6386,4724,4382,6387,6388,4383,6389,6390,4154,6391,4725,3985,6392, // 4800\n3847,4155,6393,6394,6395,6396,6397,3465,6398,4384,6399,6400,6401,6402,6403,6404, // 4816\n4156,6405,6406,6407,6408,2123,6409,6410,2326,3192,4726,6411,6412,6413,6414,4385, // 4832\n4157,6415,6416,4158,6417,3093,3848,6418,3986,6419,6420,3849,6421,6422,6423,4159, // 4848\n6424,6425,4160,6426,3740,6427,6428,6429,6430,3987,6431,4727,6432,2238,6433,6434, // 4864\n4386,3988,6435,6436,3632,6437,6438,2843,6439,6440,6441,6442,3633,6443,2958,6444, // 4880\n6445,3466,6446,2364,4387,3850,6447,4388,2959,3340,6448,3851,6449,4728,6450,6451, // 4896\n3264,4729,6452,3193,6453,4389,4390,2706,3341,4730,6454,3139,6455,3194,6456,3051, // 4912\n2124,3852,1602,4391,4161,3853,1158,3854,4162,3989,4392,3990,4731,4732,4393,2040, // 4928\n4163,4394,3265,6457,2807,3467,3855,6458,6459,6460,3991,3468,4733,4734,6461,3140, // 4944\n2960,6462,4735,6463,6464,6465,6466,4736,4737,4738,4739,6467,6468,4164,2403,3856, // 4960\n6469,6470,2770,2844,6471,4740,6472,6473,6474,6475,6476,6477,6478,3195,6479,4741, // 4976\n4395,6480,2867,6481,4742,2808,6482,2493,4165,6483,6484,6485,6486,2295,4743,6487, // 4992\n6488,6489,3634,6490,6491,6492,6493,6494,6495,6496,2985,4744,6497,6498,4745,6499, // 5008\n6500,2925,3141,4166,6501,6502,4746,6503,6504,4747,6505,6506,6507,2890,6508,6509, // 5024\n6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,3469,4167,6520,6521,6522,4748, // 5040\n4396,3741,4397,4749,4398,3342,2125,4750,6523,4751,4752,4753,3052,6524,2961,4168, // 5056\n6525,4754,6526,4755,4399,2926,4169,6527,3857,6528,4400,4170,6529,4171,6530,6531, // 5072\n2595,6532,6533,6534,6535,3635,6536,6537,6538,6539,6540,6541,6542,4756,6543,6544, // 5088\n6545,6546,6547,6548,4401,6549,6550,6551,6552,4402,3405,4757,4403,6553,6554,6555, // 5104\n4172,3742,6556,6557,6558,3992,3636,6559,6560,3053,2726,6561,3549,4173,3054,4404, // 5120\n6562,6563,3993,4405,3266,3550,2809,4406,6564,6565,6566,4758,4759,6567,3743,6568, // 5136\n4760,3744,4761,3470,6569,6570,6571,4407,6572,3745,4174,6573,4175,2810,4176,3196, // 5152\n4762,6574,4177,6575,6576,2494,2891,3551,6577,6578,3471,6579,4408,6580,3015,3197, // 5168\n6581,3343,2532,3994,3858,6582,3094,3406,4409,6583,2892,4178,4763,4410,3016,4411, // 5184\n6584,3995,3142,3017,2683,6585,4179,6586,6587,4764,4412,6588,6589,4413,6590,2986, // 5200\n6591,2962,3552,6592,2963,3472,6593,6594,4180,4765,6595,6596,2225,3267,4414,6597, // 5216\n3407,3637,4766,6598,6599,3198,6600,4415,6601,3859,3199,6602,3473,4767,2811,4416, // 5232\n1856,3268,3200,2575,3996,3997,3201,4417,6603,3095,2927,6604,3143,6605,2268,6606, // 5248\n3998,3860,3096,2771,6607,6608,3638,2495,4768,6609,3861,6610,3269,2745,4769,4181, // 5264\n3553,6611,2845,3270,6612,6613,6614,3862,6615,6616,4770,4771,6617,3474,3999,4418, // 5280\n4419,6618,3639,3344,6619,4772,4182,6620,2126,6621,6622,6623,4420,4773,6624,3018, // 5296\n6625,4774,3554,6626,4183,2025,3746,6627,4184,2707,6628,4421,4422,3097,1775,4185, // 5312\n3555,6629,6630,2868,6631,6632,4423,6633,6634,4424,2414,2533,2928,6635,4186,2387, // 5328\n6636,4775,6637,4187,6638,1891,4425,3202,3203,6639,6640,4776,6641,3345,6642,6643, // 5344\n3640,6644,3475,3346,3641,4000,6645,3144,6646,3098,2812,4188,3642,3204,6647,3863, // 5360\n3476,6648,3864,6649,4426,4001,6650,6651,6652,2576,6653,4189,4777,6654,6655,6656, // 5376\n2846,6657,3477,3205,4002,6658,4003,6659,3347,2252,6660,6661,6662,4778,6663,6664, // 5392\n6665,6666,6667,6668,6669,4779,4780,2048,6670,3478,3099,6671,3556,3747,4004,6672, // 5408\n6673,6674,3145,4005,3748,6675,6676,6677,6678,6679,3408,6680,6681,6682,6683,3206, // 5424\n3207,6684,6685,4781,4427,6686,4782,4783,4784,6687,6688,6689,4190,6690,6691,3479, // 5440\n6692,2746,6693,4428,6694,6695,6696,6697,6698,6699,4785,6700,6701,3208,2727,6702, // 5456\n3146,6703,6704,3409,2196,6705,4429,6706,6707,6708,2534,1996,6709,6710,6711,2747, // 5472\n6712,6713,6714,4786,3643,6715,4430,4431,6716,3557,6717,4432,4433,6718,6719,6720, // 5488\n6721,3749,6722,4006,4787,6723,6724,3644,4788,4434,6725,6726,4789,2772,6727,6728, // 5504\n6729,6730,6731,2708,3865,2813,4435,6732,6733,4790,4791,3480,6734,6735,6736,6737, // 5520\n4436,3348,6738,3410,4007,6739,6740,4008,6741,6742,4792,3411,4191,6743,6744,6745, // 5536\n6746,6747,3866,6748,3750,6749,6750,6751,6752,6753,6754,6755,3867,6756,4009,6757, // 5552\n4793,4794,6758,2814,2987,6759,6760,6761,4437,6762,6763,6764,6765,3645,6766,6767, // 5568\n3481,4192,6768,3751,6769,6770,2174,6771,3868,3752,6772,6773,6774,4193,4795,4438, // 5584\n3558,4796,4439,6775,4797,6776,6777,4798,6778,4799,3559,4800,6779,6780,6781,3482, // 5600\n6782,2893,6783,6784,4194,4801,4010,6785,6786,4440,6787,4011,6788,6789,6790,6791, // 5616\n6792,6793,4802,6794,6795,6796,4012,6797,6798,6799,6800,3349,4803,3483,6801,4804, // 5632\n4195,6802,4013,6803,6804,4196,6805,4014,4015,6806,2847,3271,2848,6807,3484,6808, // 5648\n6809,6810,4441,6811,4442,4197,4443,3272,4805,6812,3412,4016,1579,6813,6814,4017, // 5664\n6815,3869,6816,2964,6817,4806,6818,6819,4018,3646,6820,6821,4807,4019,4020,6822, // 5680\n6823,3560,6824,6825,4021,4444,6826,4198,6827,6828,4445,6829,6830,4199,4808,6831, // 5696\n6832,6833,3870,3019,2458,6834,3753,3413,3350,6835,4809,3871,4810,3561,4446,6836, // 5712\n6837,4447,4811,4812,6838,2459,4448,6839,4449,6840,6841,4022,3872,6842,4813,4814, // 5728\n6843,6844,4815,4200,4201,4202,6845,4023,6846,6847,4450,3562,3873,6848,6849,4816, // 5744\n4817,6850,4451,4818,2139,6851,3563,6852,6853,3351,6854,6855,3352,4024,2709,3414, // 5760\n4203,4452,6856,4204,6857,6858,3874,3875,6859,6860,4819,6861,6862,6863,6864,4453, // 5776\n3647,6865,6866,4820,6867,6868,6869,6870,4454,6871,2869,6872,6873,4821,6874,3754, // 5792\n6875,4822,4205,6876,6877,6878,3648,4206,4455,6879,4823,6880,4824,3876,6881,3055, // 5808\n4207,6882,3415,6883,6884,6885,4208,4209,6886,4210,3353,6887,3354,3564,3209,3485, // 5824\n2652,6888,2728,6889,3210,3755,6890,4025,4456,6891,4825,6892,6893,6894,6895,4211, // 5840\n6896,6897,6898,4826,6899,6900,4212,6901,4827,6902,2773,3565,6903,4828,6904,6905, // 5856\n6906,6907,3649,3650,6908,2849,3566,6909,3567,3100,6910,6911,6912,6913,6914,6915, // 5872\n4026,6916,3355,4829,3056,4457,3756,6917,3651,6918,4213,3652,2870,6919,4458,6920, // 5888\n2438,6921,6922,3757,2774,4830,6923,3356,4831,4832,6924,4833,4459,3653,2507,6925, // 5904\n4834,2535,6926,6927,3273,4027,3147,6928,3568,6929,6930,6931,4460,6932,3877,4461, // 5920\n2729,3654,6933,6934,6935,6936,2175,4835,2630,4214,4028,4462,4836,4215,6937,3148, // 5936\n4216,4463,4837,4838,4217,6938,6939,2850,4839,6940,4464,6941,6942,6943,4840,6944, // 5952\n4218,3274,4465,6945,6946,2710,6947,4841,4466,6948,6949,2894,6950,6951,4842,6952, // 5968\n4219,3057,2871,6953,6954,6955,6956,4467,6957,2711,6958,6959,6960,3275,3101,4843, // 5984\n6961,3357,3569,6962,4844,6963,6964,4468,4845,3570,6965,3102,4846,3758,6966,4847, // 6000\n3878,4848,4849,4029,6967,2929,3879,4850,4851,6968,6969,1733,6970,4220,6971,6972, // 6016\n6973,6974,6975,6976,4852,6977,6978,6979,6980,6981,6982,3759,6983,6984,6985,3486, // 6032\n3487,6986,3488,3416,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,4853, // 6048\n6998,6999,4030,7000,7001,3211,7002,7003,4221,7004,7005,3571,4031,7006,3572,7007, // 6064\n2614,4854,2577,7008,7009,2965,3655,3656,4855,2775,3489,3880,4222,4856,3881,4032, // 6080\n3882,3657,2730,3490,4857,7010,3149,7011,4469,4858,2496,3491,4859,2283,7012,7013, // 6096\n7014,2365,4860,4470,7015,7016,3760,7017,7018,4223,1917,7019,7020,7021,4471,7022, // 6112\n2776,4472,7023,7024,7025,7026,4033,7027,3573,4224,4861,4034,4862,7028,7029,1929, // 6128\n3883,4035,7030,4473,3058,7031,2536,3761,3884,7032,4036,7033,2966,2895,1968,4474, // 6144\n3276,4225,3417,3492,4226,2105,7034,7035,1754,2596,3762,4227,4863,4475,3763,4864, // 6160\n3764,2615,2777,3103,3765,3658,3418,4865,2296,3766,2815,7036,7037,7038,3574,2872, // 6176\n3277,4476,7039,4037,4477,7040,7041,4038,7042,7043,7044,7045,7046,7047,2537,7048, // 6192\n7049,7050,7051,7052,7053,7054,4478,7055,7056,3767,3659,4228,3575,7057,7058,4229, // 6208\n7059,7060,7061,3660,7062,3212,7063,3885,4039,2460,7064,7065,7066,7067,7068,7069, // 6224\n7070,7071,7072,7073,7074,4866,3768,4867,7075,7076,7077,7078,4868,3358,3278,2653, // 6240\n7079,7080,4479,3886,7081,7082,4869,7083,7084,7085,7086,7087,7088,2538,7089,7090, // 6256\n7091,4040,3150,3769,4870,4041,2896,3359,4230,2930,7092,3279,7093,2967,4480,3213, // 6272\n4481,3661,7094,7095,7096,7097,7098,7099,7100,7101,7102,2461,3770,7103,7104,4231, // 6288\n3151,7105,7106,7107,4042,3662,7108,7109,4871,3663,4872,4043,3059,7110,7111,7112, // 6304\n3493,2988,7113,4873,7114,7115,7116,3771,4874,7117,7118,4232,4875,7119,3576,2336, // 6320\n4876,7120,4233,3419,4044,4877,4878,4482,4483,4879,4484,4234,7121,3772,4880,1045, // 6336\n3280,3664,4881,4882,7122,7123,7124,7125,4883,7126,2778,7127,4485,4486,7128,4884, // 6352\n3214,3887,7129,7130,3215,7131,4885,4045,7132,7133,4046,7134,7135,7136,7137,7138, // 6368\n7139,7140,7141,7142,7143,4235,7144,4886,7145,7146,7147,4887,7148,7149,7150,4487, // 6384\n4047,4488,7151,7152,4888,4048,2989,3888,7153,3665,7154,4049,7155,7156,7157,7158, // 6400\n7159,7160,2931,4889,4890,4489,7161,2631,3889,4236,2779,7162,7163,4891,7164,3060, // 6416\n7165,1672,4892,7166,4893,4237,3281,4894,7167,7168,3666,7169,3494,7170,7171,4050, // 6432\n7172,7173,3104,3360,3420,4490,4051,2684,4052,7174,4053,7175,7176,7177,2253,4054, // 6448\n7178,7179,4895,7180,3152,3890,3153,4491,3216,7181,7182,7183,2968,4238,4492,4055, // 6464\n7184,2990,7185,2479,7186,7187,4493,7188,7189,7190,7191,7192,4896,7193,4897,2969, // 6480\n4494,4898,7194,3495,7195,7196,4899,4495,7197,3105,2731,7198,4900,7199,7200,7201, // 6496\n4056,7202,3361,7203,7204,4496,4901,4902,7205,4497,7206,7207,2315,4903,7208,4904, // 6512\n7209,4905,2851,7210,7211,3577,7212,3578,4906,7213,4057,3667,4907,7214,4058,2354, // 6528\n3891,2376,3217,3773,7215,7216,7217,7218,7219,4498,7220,4908,3282,2685,7221,3496, // 6544\n4909,2632,3154,4910,7222,2337,7223,4911,7224,7225,7226,4912,4913,3283,4239,4499, // 6560\n7227,2816,7228,7229,7230,7231,7232,7233,7234,4914,4500,4501,7235,7236,7237,2686, // 6576\n7238,4915,7239,2897,4502,7240,4503,7241,2516,7242,4504,3362,3218,7243,7244,7245, // 6592\n4916,7246,7247,4505,3363,7248,7249,7250,7251,3774,4506,7252,7253,4917,7254,7255, // 6608\n3284,2991,4918,4919,3219,3892,4920,3106,3497,4921,7256,7257,7258,4922,7259,4923, // 6624\n3364,4507,4508,4059,7260,4240,3498,7261,7262,4924,7263,2992,3893,4060,3220,7264, // 6640\n7265,7266,7267,7268,7269,4509,3775,7270,2817,7271,4061,4925,4510,3776,7272,4241, // 6656\n4511,3285,7273,7274,3499,7275,7276,7277,4062,4512,4926,7278,3107,3894,7279,7280, // 6672\n4927,7281,4513,7282,7283,3668,7284,7285,4242,4514,4243,7286,2058,4515,4928,4929, // 6688\n4516,7287,3286,4244,7288,4517,7289,7290,7291,3669,7292,7293,4930,4931,4932,2355, // 6704\n4933,7294,2633,4518,7295,4245,7296,7297,4519,7298,7299,4520,4521,4934,7300,4246, // 6720\n4522,7301,7302,7303,3579,7304,4247,4935,7305,4936,7306,7307,7308,7309,3777,7310, // 6736\n4523,7311,7312,7313,4248,3580,7314,4524,3778,4249,7315,3581,7316,3287,7317,3221, // 6752\n7318,4937,7319,7320,7321,7322,7323,7324,4938,4939,7325,4525,7326,7327,7328,4063, // 6768\n7329,7330,4940,7331,7332,4941,7333,4526,7334,3500,2780,1741,4942,2026,1742,7335, // 6784\n7336,3582,4527,2388,7337,7338,7339,4528,7340,4250,4943,7341,7342,7343,4944,7344, // 6800\n7345,7346,3020,7347,4945,7348,7349,7350,7351,3895,7352,3896,4064,3897,7353,7354, // 6816\n7355,4251,7356,7357,3898,7358,3779,7359,3780,3288,7360,7361,4529,7362,4946,4530, // 6832\n2027,7363,3899,4531,4947,3222,3583,7364,4948,7365,7366,7367,7368,4949,3501,4950, // 6848\n3781,4951,4532,7369,2517,4952,4252,4953,3155,7370,4954,4955,4253,2518,4533,7371, // 6864\n7372,2712,4254,7373,7374,7375,3670,4956,3671,7376,2389,3502,4065,7377,2338,7378, // 6880\n7379,7380,7381,3061,7382,4957,7383,7384,7385,7386,4958,4534,7387,7388,2993,7389, // 6896\n3062,7390,4959,7391,7392,7393,4960,3108,4961,7394,4535,7395,4962,3421,4536,7396, // 6912\n4963,7397,4964,1857,7398,4965,7399,7400,2176,3584,4966,7401,7402,3422,4537,3900, // 6928\n3585,7403,3782,7404,2852,7405,7406,7407,4538,3783,2654,3423,4967,4539,7408,3784, // 6944\n3586,2853,4540,4541,7409,3901,7410,3902,7411,7412,3785,3109,2327,3903,7413,7414, // 6960\n2970,4066,2932,7415,7416,7417,3904,3672,3424,7418,4542,4543,4544,7419,4968,7420, // 6976\n7421,4255,7422,7423,7424,7425,7426,4067,7427,3673,3365,4545,7428,3110,2559,3674, // 6992\n7429,7430,3156,7431,7432,3503,7433,3425,4546,7434,3063,2873,7435,3223,4969,4547, // 7008\n4548,2898,4256,4068,7436,4069,3587,3786,2933,3787,4257,4970,4971,3788,7437,4972, // 7024\n3064,7438,4549,7439,7440,7441,7442,7443,4973,3905,7444,2874,7445,7446,7447,7448, // 7040\n3021,7449,4550,3906,3588,4974,7450,7451,3789,3675,7452,2578,7453,4070,7454,7455, // 7056\n7456,4258,3676,7457,4975,7458,4976,4259,3790,3504,2634,4977,3677,4551,4260,7459, // 7072\n7460,7461,7462,3907,4261,4978,7463,7464,7465,7466,4979,4980,7467,7468,2213,4262, // 7088\n7469,7470,7471,3678,4981,7472,2439,7473,4263,3224,3289,7474,3908,2415,4982,7475, // 7104\n4264,7476,4983,2655,7477,7478,2732,4552,2854,2875,7479,7480,4265,7481,4553,4984, // 7120\n7482,7483,4266,7484,3679,3366,3680,2818,2781,2782,3367,3589,4554,3065,7485,4071, // 7136\n2899,7486,7487,3157,2462,4072,4555,4073,4985,4986,3111,4267,2687,3368,4556,4074, // 7152\n3791,4268,7488,3909,2783,7489,2656,1962,3158,4557,4987,1963,3159,3160,7490,3112, // 7168\n4988,4989,3022,4990,4991,3792,2855,7491,7492,2971,4558,7493,7494,4992,7495,7496, // 7184\n7497,7498,4993,7499,3426,4559,4994,7500,3681,4560,4269,4270,3910,7501,4075,4995, // 7200\n4271,7502,7503,4076,7504,4996,7505,3225,4997,4272,4077,2819,3023,7506,7507,2733, // 7216\n4561,7508,4562,7509,3369,3793,7510,3590,2508,7511,7512,4273,3113,2994,2616,7513, // 7232\n7514,7515,7516,7517,7518,2820,3911,4078,2748,7519,7520,4563,4998,7521,7522,7523, // 7248\n7524,4999,4274,7525,4564,3682,2239,4079,4565,7526,7527,7528,7529,5000,7530,7531, // 7264\n5001,4275,3794,7532,7533,7534,3066,5002,4566,3161,7535,7536,4080,7537,3162,7538, // 7280\n7539,4567,7540,7541,7542,7543,7544,7545,5003,7546,4568,7547,7548,7549,7550,7551, // 7296\n7552,7553,7554,7555,7556,5004,7557,7558,7559,5005,7560,3795,7561,4569,7562,7563, // 7312\n7564,2821,3796,4276,4277,4081,7565,2876,7566,5006,7567,7568,2900,7569,3797,3912, // 7328\n7570,7571,7572,4278,7573,7574,7575,5007,7576,7577,5008,7578,7579,4279,2934,7580, // 7344\n7581,5009,7582,4570,7583,4280,7584,7585,7586,4571,4572,3913,7587,4573,3505,7588, // 7360\n5010,7589,7590,7591,7592,3798,4574,7593,7594,5011,7595,4281,7596,7597,7598,4282, // 7376\n5012,7599,7600,5013,3163,7601,5014,7602,3914,7603,7604,2734,4575,4576,4577,7605, // 7392\n7606,7607,7608,7609,3506,5015,4578,7610,4082,7611,2822,2901,2579,3683,3024,4579, // 7408\n3507,7612,4580,7613,3226,3799,5016,7614,7615,7616,7617,7618,7619,7620,2995,3290, // 7424\n7621,4083,7622,5017,7623,7624,7625,7626,7627,4581,3915,7628,3291,7629,5018,7630, // 7440\n7631,7632,7633,4084,7634,7635,3427,3800,7636,7637,4582,7638,5019,4583,5020,7639, // 7456\n3916,7640,3801,5021,4584,4283,7641,7642,3428,3591,2269,7643,2617,7644,4585,3592, // 7472\n7645,4586,2902,7646,7647,3227,5022,7648,4587,7649,4284,7650,7651,7652,4588,2284, // 7488\n7653,5023,7654,7655,7656,4589,5024,3802,7657,7658,5025,3508,4590,7659,7660,7661, // 7504\n1969,5026,7662,7663,3684,1821,2688,7664,2028,2509,4285,7665,2823,1841,7666,2689, // 7520\n3114,7667,3917,4085,2160,5027,5028,2972,7668,5029,7669,7670,7671,3593,4086,7672, // 7536\n4591,4087,5030,3803,7673,7674,7675,7676,7677,7678,7679,4286,2366,4592,4593,3067, // 7552\n2328,7680,7681,4594,3594,3918,2029,4287,7682,5031,3919,3370,4288,4595,2856,7683, // 7568\n3509,7684,7685,5032,5033,7686,7687,3804,2784,7688,7689,7690,7691,3371,7692,7693, // 7584\n2877,5034,7694,7695,3920,4289,4088,7696,7697,7698,5035,7699,5036,4290,5037,5038, // 7600\n5039,7700,7701,7702,5040,5041,3228,7703,1760,7704,5042,3229,4596,2106,4089,7705, // 7616\n4597,2824,5043,2107,3372,7706,4291,4090,5044,7707,4091,7708,5045,3025,3805,4598, // 7632\n4292,4293,4294,3373,7709,4599,7710,5046,7711,7712,5047,5048,3806,7713,7714,7715, // 7648\n5049,7716,7717,7718,7719,4600,5050,7720,7721,7722,5051,7723,4295,3429,7724,7725, // 7664\n7726,7727,3921,7728,3292,5052,4092,7729,7730,7731,7732,7733,7734,7735,5053,5054, // 7680\n7736,7737,7738,7739,3922,3685,7740,7741,7742,7743,2635,5055,7744,5056,4601,7745, // 7696\n7746,2560,7747,7748,7749,7750,3923,7751,7752,7753,7754,7755,4296,2903,7756,7757, // 7712\n7758,7759,7760,3924,7761,5057,4297,7762,7763,5058,4298,7764,4093,7765,7766,5059, // 7728\n3925,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,3595,7777,4299,5060,4094, // 7744\n7778,3293,5061,7779,7780,4300,7781,7782,4602,7783,3596,7784,7785,3430,2367,7786, // 7760\n3164,5062,5063,4301,7787,7788,4095,5064,5065,7789,3374,3115,7790,7791,7792,7793, // 7776\n7794,7795,7796,3597,4603,7797,7798,3686,3116,3807,5066,7799,7800,5067,7801,7802, // 7792\n4604,4302,5068,4303,4096,7803,7804,3294,7805,7806,5069,4605,2690,7807,3026,7808, // 7808\n7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824, // 7824\n7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840, // 7840\n7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856, // 7856\n7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872, // 7872\n7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888, // 7888\n7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904, // 7904\n7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920, // 7920\n7921,7922,7923,7924,3926,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935, // 7936\n7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951, // 7952\n7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967, // 7968\n7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983, // 7984\n7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999, // 8000\n8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015, // 8016\n8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031, // 8032\n8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047, // 8048\n8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063, // 8064\n8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079, // 8080\n8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095, // 8096\n8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111, // 8112\n8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127, // 8128\n8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143, // 8144\n8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159, // 8160\n8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175, // 8176\n8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191, // 8192\n8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207, // 8208\n8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223, // 8224\n8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239, // 8240\n8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255, // 8256\n8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271 // 8272\n];\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CharSetProber = require('./charsetprober');\nvar constants = require('./constants');\nvar logger = require('./logger');\n\n function MultiByteCharSetProber() {\n    CharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mDistributionAnalyzer = null;\n        self._mCodingSM = null;\n        //self._mLastChar = [\"\\x00\", \"\\x00\"];\n        self._mLastChar = \"\\x00\\x00\";\n    }\n\n    this.reset = function() {\n        MultiByteCharSetProber.prototype.reset.apply(this);\n        if( this._mCodingSM ) {\n            this._mCodingSM.reset();\n        }\n        if( this._mDistributionAnalyzer ) {\n            this._mDistributionAnalyzer.reset();\n        }\n        //this._mLastChar = [\"\\x00\", \"\\x00\"];\n        this._mLastChar = \"\\x00\\x00\";\n    }\n\n    this.getCharsetName = function() {\n    }\n\n    this.feed = function(aBuf) {\n        var aLen = aBuf.length;\n        for( var i = 0; i < aLen; i++ ) {\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\n            if( codingState == constants.error ) {\n                logger.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n                this._mState = constants.notMe;\n                break;\n            } else if( codingState == constants.itsMe ) {\n                this._mState = constants.foundIt;\n                break;\n            } else if( codingState == constants.start ) {\n                var charLen = this._mCodingSM.getCurrentCharLen();\n                if( i == 0 ) {\n                    this._mLastChar[1] = aBuf[0];\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n                } else {\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\n                }\n            }\n        }\n\n        this._mLastChar[0] = aBuf[aLen - 1];\n\n        if( this.getState() == constants.detecting ) {\n            if( this._mDistributionAnalyzer.gotEnoughData() &&\n                this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\n                this._mState = constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        return this._mDistributionAnalyzer.getConfidence();\n    }\n}\nMultiByteCharSetProber.prototype = new CharSetProber();\n\nmodule.exports = MultiByteCharSetProber\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var consts = require('../constants');\n\nvar EUCKR_cls  = [\n    1,1,1,1,1,1,1,1,  // 00 - 07\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    1,1,1,1,1,1,1,1,  // 40 - 47\n    1,1,1,1,1,1,1,1,  // 48 - 4f\n    1,1,1,1,1,1,1,1,  // 50 - 57\n    1,1,1,1,1,1,1,1,  // 58 - 5f\n    1,1,1,1,1,1,1,1,  // 60 - 67\n    1,1,1,1,1,1,1,1,  // 68 - 6f\n    1,1,1,1,1,1,1,1,  // 70 - 77\n    1,1,1,1,1,1,1,1,  // 78 - 7f\n    0,0,0,0,0,0,0,0,  // 80 - 87\n    0,0,0,0,0,0,0,0,  // 88 - 8f\n    0,0,0,0,0,0,0,0,  // 90 - 97\n    0,0,0,0,0,0,0,0,  // 98 - 9f\n    0,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,3,3,3,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,3,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,0   // f8 - ff\n];\n\nvar EUCKR_st = [\n    consts.error,consts.start,    3,consts.error,consts.error,consts.error,consts.error,consts.error, //00-07\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start  //08-0f\n];\n\nvar EUCKRCharLenTable = [0, 1, 2, 0];\n\nmodule.exports = {\n    \"classTable\"    : EUCKR_cls,\n    \"classFactor\"   : 4,\n    \"stateTable\"    : EUCKR_st,\n    \"charLenTable\"  : EUCKRCharLenTable,\n    \"name\"          : \"EUC-KR\"\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar consts = require('./constants');\n\nvar HZ_cls = [\n    1,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,0,0,0,0,  // 20 - 27\n    0,0,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,0,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,4,0,5,2,0,  // 78 - 7f\n    1,1,1,1,1,1,1,1,  // 80 - 87\n    1,1,1,1,1,1,1,1,  // 88 - 8f\n    1,1,1,1,1,1,1,1,  // 90 - 97\n    1,1,1,1,1,1,1,1,  // 98 - 9f\n    1,1,1,1,1,1,1,1,  // a0 - a7\n    1,1,1,1,1,1,1,1,  // a8 - af\n    1,1,1,1,1,1,1,1,  // b0 - b7\n    1,1,1,1,1,1,1,1,  // b8 - bf\n    1,1,1,1,1,1,1,1,  // c0 - c7\n    1,1,1,1,1,1,1,1,  // c8 - cf\n    1,1,1,1,1,1,1,1,  // d0 - d7\n    1,1,1,1,1,1,1,1,  // d8 - df\n    1,1,1,1,1,1,1,1,  // e0 - e7\n    1,1,1,1,1,1,1,1,  // e8 - ef\n    1,1,1,1,1,1,1,1,  // f0 - f7\n    1,1,1,1,1,1,1,1   // f8 - ff\n];\n\nvar HZ_st = [\n    consts.start,consts.error,    3,consts.start,consts.start,consts.start,consts.error,consts.error, // 00-07\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 08-0f\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start,    4,consts.error, // 10-17\n        5,consts.error,    6,consts.error,    5,    5,    4,consts.error, // 18-1f\n        4,consts.error,    4,    4,    4,consts.error,    4,consts.error, // 20-27\n        4,consts.itsMe,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  // 28-2f\n];\n\nvar HZCharLenTable = [0, 0, 0, 0, 0, 0];\n\nexports.HZSMModel = {\n    \"classTable\"    : HZ_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : HZ_st,\n    \"charLenTable\"  : HZCharLenTable,\n    \"name\"          : \"HZ-GB-2312\"\n};\n\nvar ISO2022CN_cls = [\n    2,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,0,0,0,0,  // 20 - 27\n    0,3,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,4,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    2,2,2,2,2,2,2,2,  // 80 - 87\n    2,2,2,2,2,2,2,2,  // 88 - 8f\n    2,2,2,2,2,2,2,2,  // 90 - 97\n    2,2,2,2,2,2,2,2,  // 98 - 9f\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,2   // f8 - ff\n];\n\nvar ISO2022CN_st = [\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start, // 00-07\n    consts.start,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 08-0f\n    consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 10-17\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.error,    4,consts.error, // 18-1f\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 20-27\n        5,    6,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 28-2f\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 30-37\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.start  // 38-3f\n];\n\nvar ISO2022CNCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexports.ISO2022CNSMModel = {\n    \"classTable\"    : ISO2022CN_cls,\n    \"classFactor\"   : 9,\n    \"stateTable\"    : ISO2022CN_st,\n    \"charLenTable\"  : ISO2022CNCharLenTable,\n    \"name\"          : \"ISO-2022-CN\"\n};\n\nvar ISO2022JP_cls = [\n    2,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,2,2,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,7,0,0,0,  // 20 - 27\n    3,0,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    6,0,4,0,8,0,0,0,  // 40 - 47\n    0,9,5,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    2,2,2,2,2,2,2,2,  // 80 - 87\n    2,2,2,2,2,2,2,2,  // 88 - 8f\n    2,2,2,2,2,2,2,2,  // 90 - 97\n    2,2,2,2,2,2,2,2,  // 98 - 9f\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,2   // f8 - ff\n];\n\nvar ISO2022JP_st = [\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start, // 00-07\n    consts.start,consts.start,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 08-0f\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 10-17\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error, // 18-1f\n    consts.error,    5,consts.error,consts.error,consts.error,    4,consts.error,consts.error, // 20-27\n    consts.error,consts.error,consts.error,    6,consts.itsMe,consts.error,consts.itsMe,consts.error, // 28-2f\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, // 30-37\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 38-3f\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.start,consts.start  // 40-47\n];\n\nvar ISO2022JPCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexports.ISO2022JPSMModel = {\n    \"classTable\"    : ISO2022JP_cls,\n    \"classFactor\"   : 10,\n    \"stateTable\"    : ISO2022JP_st,\n    \"charLenTable\"  : ISO2022JPCharLenTable,\n    \"name\"          : \"ISO-2022-JP\"\n};\n\nvar ISO2022KR_cls = [\n    2,0,0,0,0,0,0,0,  // 00 - 07\n    0,0,0,0,0,0,0,0,  // 08 - 0f\n    0,0,0,0,0,0,0,0,  // 10 - 17\n    0,0,0,1,0,0,0,0,  // 18 - 1f\n    0,0,0,0,3,0,0,0,  // 20 - 27\n    0,4,0,0,0,0,0,0,  // 28 - 2f\n    0,0,0,0,0,0,0,0,  // 30 - 37\n    0,0,0,0,0,0,0,0,  // 38 - 3f\n    0,0,0,5,0,0,0,0,  // 40 - 47\n    0,0,0,0,0,0,0,0,  // 48 - 4f\n    0,0,0,0,0,0,0,0,  // 50 - 57\n    0,0,0,0,0,0,0,0,  // 58 - 5f\n    0,0,0,0,0,0,0,0,  // 60 - 67\n    0,0,0,0,0,0,0,0,  // 68 - 6f\n    0,0,0,0,0,0,0,0,  // 70 - 77\n    0,0,0,0,0,0,0,0,  // 78 - 7f\n    2,2,2,2,2,2,2,2,  // 80 - 87\n    2,2,2,2,2,2,2,2,  // 88 - 8f\n    2,2,2,2,2,2,2,2,  // 90 - 97\n    2,2,2,2,2,2,2,2,  // 98 - 9f\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    2,2,2,2,2,2,2,2,  // e0 - e7\n    2,2,2,2,2,2,2,2,  // e8 - ef\n    2,2,2,2,2,2,2,2,  // f0 - f7\n    2,2,2,2,2,2,2,2   // f8 - ff\n];\n\nvar ISO2022KR_st = [\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.error,consts.error, // 00-07\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 08-0f\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.error,    4,consts.error,consts.error, // 10-17\n    consts.error,consts.error,consts.error,consts.error,    5,consts.error,consts.error,consts.error, // 18-1f\n    consts.error,consts.error,consts.error,consts.itsMe,consts.start,consts.start,consts.start,consts.start  // 20-27\n];\n\nvar ISO2022KRCharLenTable = [0, 0, 0, 0, 0, 0];\n\nexports.ISO2022KRSMModel = {\n    \"classTable\"    : ISO2022KR_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : ISO2022KR_st,\n    \"charLenTable\"  : ISO2022KRCharLenTable,\n    \"name\"          : \"ISO-2022-KR\"\n};\n","var consts = require('../constants');\n\nvar BIG5_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07    //allow 0x00 as legal value\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,1,  // 78 - 7f\n    4,4,4,4,4,4,4,4,  // 80 - 87\n    4,4,4,4,4,4,4,4,  // 88 - 8f\n    4,4,4,4,4,4,4,4,  // 90 - 97\n    4,4,4,4,4,4,4,4,  // 98 - 9f\n    4,3,3,3,3,3,3,3,  // a0 - a7\n    3,3,3,3,3,3,3,3,  // a8 - af\n    3,3,3,3,3,3,3,3,  // b0 - b7\n    3,3,3,3,3,3,3,3,  // b8 - bf\n    3,3,3,3,3,3,3,3,  // c0 - c7\n    3,3,3,3,3,3,3,3,  // c8 - cf\n    3,3,3,3,3,3,3,3,  // d0 - d7\n    3,3,3,3,3,3,3,3,  // d8 - df\n    3,3,3,3,3,3,3,3,  // e0 - e7\n    3,3,3,3,3,3,3,3,  // e8 - ef\n    3,3,3,3,3,3,3,3,  // f0 - f7\n    3,3,3,3,3,3,3,0   // f8 - ff\n];\n\nvar BIG5_st = [\n    consts.error,consts.start,consts.start,    3,consts.error,consts.error,consts.error,consts.error, //00-07\n    consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error, //08-0f\n    consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //10-17\n];\n\nvar Big5CharLenTable = [0, 1, 1, 2, 0];\n\nmodule.exports = {\n    \"classTable\"    : BIG5_cls,\n    \"classFactor\"   : 5,\n    \"stateTable\"    : BIG5_st,\n    \"charLenTable\"  : Big5CharLenTable,\n    \"name\"          : \"Big5\"\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// EUCTW frequency table\n// Converted from big5 work\n// by Taiwan's Mandarin Promotion Council\n// <http://www.edu.tw:81/mandr/>\n\n// 128  --> 0.42261\n// 256  --> 0.57851\n// 512  --> 0.74851\n// 1024 --> 0.89384\n// 2048 --> 0.97583\n//\n// Idea Distribution Ratio = 0.74851/(1-0.74851) =2.98\n// Random Distribution Ration = 512/(5401-512)=0.105\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\n\nexports.EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75;\n\n// Char to FreqOrder table ,\nexports.EUCTW_TABLE_SIZE = 8102;\n\nexports.EUCTWCharToFreqOrder = [\n   1,1800,1506, 255,1431, 198,   9,  82,   6,7310, 177, 202,3615,1256,2808, 110, // 2742\n3735,  33,3241, 261,  76,  44,2113,  16,2931,2184,1176, 659,3868,  26,3404,2643, // 2758\n1198,3869,3313,4060, 410,2211, 302, 590, 361,1963,   8, 204,  58,4296,7311,1931, // 2774\n  63,7312,7313, 317,1614,  75, 222, 159,4061,2412,1480,7314,3500,3068, 224,2809, // 2790\n3616,   3,  10,3870,1471,  29,2774,1135,2852,1939, 873, 130,3242,1123, 312,7315, // 2806\n4297,2051, 507, 252, 682,7316, 142,1914, 124, 206,2932,  34,3501,3173,  64, 604, // 2822\n7317,2494,1976,1977, 155,1990, 645, 641,1606,7318,3405, 337,  72, 406,7319,  80, // 2838\n 630, 238,3174,1509, 263, 939,1092,2644, 756,1440,1094,3406, 449,  69,2969, 591, // 2854\n 179,2095, 471, 115,2034,1843,  60,  50,2970, 134, 806,1868, 734,2035,3407, 180, // 2870\n 995,1607, 156, 537,2893, 688,7320, 319,1305, 779,2144, 514,2374, 298,4298, 359, // 2886\n2495,  90,2707,1338, 663,  11, 906,1099,2545,  20,2436, 182, 532,1716,7321, 732, // 2902\n1376,4062,1311,1420,3175,  25,2312,1056, 113, 399, 382,1949, 242,3408,2467, 529, // 2918\n3243, 475,1447,3617,7322, 117,  21, 656, 810,1297,2295,2329,3502,7323, 126,4063, // 2934\n 706, 456, 150, 613,4299,  71,1118,2036,4064, 145,3069,  85, 835, 486,2114,1246, // 2950\n1426, 428, 727,1285,1015, 800, 106, 623, 303,1281,7324,2127,2354, 347,3736, 221, // 2966\n3503,3110,7325,1955,1153,4065,  83, 296,1199,3070, 192, 624,  93,7326, 822,1897, // 2982\n2810,3111, 795,2064, 991,1554,1542,1592,  27,  43,2853, 859, 139,1456, 860,4300, // 2998\n 437, 712,3871, 164,2392,3112, 695, 211,3017,2096, 195,3872,1608,3504,3505,3618, // 3014\n3873, 234, 811,2971,2097,3874,2229,1441,3506,1615,2375, 668,2076,1638, 305, 228, // 3030\n1664,4301, 467, 415,7327, 262,2098,1593, 239, 108, 300, 200,1033, 512,1247,2077, // 3046\n7328,7329,2173,3176,3619,2673, 593, 845,1062,3244,  88,1723,2037,3875,1950, 212, // 3062\n 266, 152, 149, 468,1898,4066,4302,  77, 187,7330,3018,  37,   5,2972,7331,3876, // 3078\n7332,7333,  39,2517,4303,2894,3177,2078,  55, 148,  74,4304, 545, 483,1474,1029, // 3094\n1665, 217,1869,1531,3113,1104,2645,4067,  24, 172,3507, 900,3877,3508,3509,4305, // 3110\n  32,1408,2811,1312, 329, 487,2355,2247,2708, 784,2674,   4,3019,3314,1427,1788, // 3126\n 188, 109, 499,7334,3620,1717,1789, 888,1217,3020,4306,7335,3510,7336,3315,1520, // 3142\n3621,3878, 196,1034, 775,7337,7338, 929,1815, 249, 439,  38,7339,1063,7340, 794, // 3158\n3879,1435,2296,  46, 178,3245,2065,7341,2376,7342, 214,1709,4307, 804,  35, 707, // 3174\n 324,3622,1601,2546, 140, 459,4068,7343,7344,1365, 839, 272, 978,2257,2572,3409, // 3190\n2128,1363,3623,1423, 697, 100,3071,  48,  70,1231, 495,3114,2193,7345,1294,7346, // 3206\n2079, 462, 586,1042,3246, 853, 256, 988, 185,2377,3410,1698, 434,1084,7347,3411, // 3222\n 314,2615,2775,4308,2330,2331, 569,2280, 637,1816,2518, 757,1162,1878,1616,3412, // 3238\n 287,1577,2115, 768,4309,1671,2854,3511,2519,1321,3737, 909,2413,7348,4069, 933, // 3254\n3738,7349,2052,2356,1222,4310, 765,2414,1322, 786,4311,7350,1919,1462,1677,2895, // 3270\n1699,7351,4312,1424,2437,3115,3624,2590,3316,1774,1940,3413,3880,4070, 309,1369, // 3286\n1130,2812, 364,2230,1653,1299,3881,3512,3882,3883,2646, 525,1085,3021, 902,2000, // 3302\n1475, 964,4313, 421,1844,1415,1057,2281, 940,1364,3116, 376,4314,4315,1381,   7, // 3318\n2520, 983,2378, 336,1710,2675,1845, 321,3414, 559,1131,3022,2742,1808,1132,1313, // 3334\n 265,1481,1857,7352, 352,1203,2813,3247, 167,1089, 420,2814, 776, 792,1724,3513, // 3350\n4071,2438,3248,7353,4072,7354, 446, 229, 333,2743, 901,3739,1200,1557,4316,2647, // 3366\n1920, 395,2744,2676,3740,4073,1835, 125, 916,3178,2616,4317,7355,7356,3741,7357, // 3382\n7358,7359,4318,3117,3625,1133,2547,1757,3415,1510,2313,1409,3514,7360,2145, 438, // 3398\n2591,2896,2379,3317,1068, 958,3023, 461, 311,2855,2677,4074,1915,3179,4075,1978, // 3414\n 383, 750,2745,2617,4076, 274, 539, 385,1278,1442,7361,1154,1964, 384, 561, 210, // 3430\n  98,1295,2548,3515,7362,1711,2415,1482,3416,3884,2897,1257, 129,7363,3742, 642, // 3446\n 523,2776,2777,2648,7364, 141,2231,1333,  68, 176, 441, 876, 907,4077, 603,2592, // 3462\n 710, 171,3417, 404, 549,  18,3118,2393,1410,3626,1666,7365,3516,4319,2898,4320, // 3478\n7366,2973, 368,7367, 146, 366,  99, 871,3627,1543, 748, 807,1586,1185,  22,2258, // 3494\n 379,3743,3180,7368,3181, 505,1941,2618,1991,1382,2314,7369, 380,2357, 218, 702, // 3510\n1817,1248,3418,3024,3517,3318,3249,7370,2974,3628, 930,3250,3744,7371,  59,7372, // 3526\n 585, 601,4078, 497,3419,1112,1314,4321,1801,7373,1223,1472,2174,7374, 749,1836, // 3542\n 690,1899,3745,1772,3885,1476, 429,1043,1790,2232,2116, 917,4079, 447,1086,1629, // 3558\n7375, 556,7376,7377,2020,1654, 844,1090, 105, 550, 966,1758,2815,1008,1782, 686, // 3574\n1095,7378,2282, 793,1602,7379,3518,2593,4322,4080,2933,2297,4323,3746, 980,2496, // 3590\n 544, 353, 527,4324, 908,2678,2899,7380, 381,2619,1942,1348,7381,1341,1252, 560, // 3606\n3072,7382,3420,2856,7383,2053, 973, 886,2080, 143,4325,7384,7385, 157,3886, 496, // 3622\n4081,  57, 840, 540,2038,4326,4327,3421,2117,1445, 970,2259,1748,1965,2081,4082, // 3638\n3119,1234,1775,3251,2816,3629, 773,1206,2129,1066,2039,1326,3887,1738,1725,4083, // 3654\n 279,3120,  51,1544,2594, 423,1578,2130,2066, 173,4328,1879,7386,7387,1583, 264, // 3670\n 610,3630,4329,2439, 280, 154,7388,7389,7390,1739, 338,1282,3073, 693,2857,1411, // 3686\n1074,3747,2440,7391,4330,7392,7393,1240, 952,2394,7394,2900,1538,2679, 685,1483, // 3702\n4084,2468,1436, 953,4085,2054,4331, 671,2395,  79,4086,2441,3252, 608, 567,2680, // 3718\n3422,4087,4088,1691, 393,1261,1791,2396,7395,4332,7396,7397,7398,7399,1383,1672, // 3734\n3748,3182,1464, 522,1119, 661,1150, 216, 675,4333,3888,1432,3519, 609,4334,2681, // 3750\n2397,7400,7401,7402,4089,3025,   0,7403,2469, 315, 231,2442, 301,3319,4335,2380, // 3766\n7404, 233,4090,3631,1818,4336,4337,7405,  96,1776,1315,2082,7406, 257,7407,1809, // 3782\n3632,2709,1139,1819,4091,2021,1124,2163,2778,1777,2649,7408,3074, 363,1655,3183, // 3798\n7409,2975,7410,7411,7412,3889,1567,3890, 718, 103,3184, 849,1443, 341,3320,2934, // 3814\n1484,7413,1712, 127,  67, 339,4092,2398, 679,1412, 821,7414,7415, 834, 738, 351, // 3830\n2976,2146, 846, 235,1497,1880, 418,1992,3749,2710, 186,1100,2147,2746,3520,1545, // 3846\n1355,2935,2858,1377, 583,3891,4093,2573,2977,7416,1298,3633,1078,2549,3634,2358, // 3862\n  78,3750,3751, 267,1289,2099,2001,1594,4094, 348, 369,1274,2194,2175,1837,4338, // 3878\n1820,2817,3635,2747,2283,2002,4339,2936,2748, 144,3321, 882,4340,3892,2749,3423, // 3894\n4341,2901,7417,4095,1726, 320,7418,3893,3026, 788,2978,7419,2818,1773,1327,2859, // 3910\n3894,2819,7420,1306,4342,2003,1700,3752,3521,2359,2650, 787,2022, 506, 824,3636, // 3926\n 534, 323,4343,1044,3322,2023,1900, 946,3424,7421,1778,1500,1678,7422,1881,4344, // 3942\n 165, 243,4345,3637,2521, 123, 683,4096, 764,4346,  36,3895,1792, 589,2902, 816, // 3958\n 626,1667,3027,2233,1639,1555,1622,3753,3896,7423,3897,2860,1370,1228,1932, 891, // 3974\n2083,2903, 304,4097,7424, 292,2979,2711,3522, 691,2100,4098,1115,4347, 118, 662, // 3990\n7425, 611,1156, 854,2381,1316,2861,   2, 386, 515,2904,7426,7427,3253, 868,2234, // 4006\n1486, 855,2651, 785,2212,3028,7428,1040,3185,3523,7429,3121, 448,7430,1525,7431, // 4022\n2164,4348,7432,3754,7433,4099,2820,3524,3122, 503, 818,3898,3123,1568, 814, 676, // 4038\n1444, 306,1749,7434,3755,1416,1030, 197,1428, 805,2821,1501,4349,7435,7436,7437, // 4054\n1993,7438,4350,7439,7440,2195,  13,2779,3638,2980,3124,1229,1916,7441,3756,2131, // 4070\n7442,4100,4351,2399,3525,7443,2213,1511,1727,1120,7444,7445, 646,3757,2443, 307, // 4086\n7446,7447,1595,3186,7448,7449,7450,3639,1113,1356,3899,1465,2522,2523,7451, 519, // 4102\n7452, 128,2132,  92,2284,1979,7453,3900,1512, 342,3125,2196,7454,2780,2214,1980, // 4118\n3323,7455, 290,1656,1317, 789, 827,2360,7456,3758,4352, 562, 581,3901,7457, 401, // 4134\n4353,2248,  94,4354,1399,2781,7458,1463,2024,4355,3187,1943,7459, 828,1105,4101, // 4150\n1262,1394,7460,4102, 605,4356,7461,1783,2862,7462,2822, 819,2101, 578,2197,2937, // 4166\n7463,1502, 436,3254,4103,3255,2823,3902,2905,3425,3426,7464,2712,2315,7465,7466, // 4182\n2332,2067,  23,4357, 193, 826,3759,2102, 699,1630,4104,3075, 390,1793,1064,3526, // 4198\n7467,1579,3076,3077,1400,7468,4105,1838,1640,2863,7469,4358,4359, 137,4106, 598, // 4214\n3078,1966, 780, 104, 974,2938,7470, 278, 899, 253, 402, 572, 504, 493,1339,7471, // 4230\n3903,1275,4360,2574,2550,7472,3640,3029,3079,2249, 565,1334,2713, 863,  41,7473, // 4246\n7474,4361,7475,1657,2333,  19, 463,2750,4107, 606,7476,2981,3256,1087,2084,1323, // 4262\n2652,2982,7477,1631,1623,1750,4108,2682,7478,2864, 791,2714,2653,2334, 232,2416, // 4278\n7479,2983,1498,7480,2654,2620, 755,1366,3641,3257,3126,2025,1609, 119,1917,3427, // 4294\n 862,1026,4109,7481,3904,3760,4362,3905,4363,2260,1951,2470,7482,1125, 817,4110, // 4310\n4111,3906,1513,1766,2040,1487,4112,3030,3258,2824,3761,3127,7483,7484,1507,7485, // 4326\n2683, 733,  40,1632,1106,2865, 345,4113, 841,2524, 230,4364,2984,1846,3259,3428, // 4342\n7486,1263, 986,3429,7487, 735, 879, 254,1137, 857, 622,1300,1180,1388,1562,3907, // 4358\n3908,2939, 967,2751,2655,1349, 592,2133,1692,3324,2985,1994,4114,1679,3909,1901, // 4374\n2185,7488, 739,3642,2715,1296,1290,7489,4115,2198,2199,1921,1563,2595,2551,1870, // 4390\n2752,2986,7490, 435,7491, 343,1108, 596,  17,1751,4365,2235,3430,3643,7492,4366, // 4406\n 294,3527,2940,1693, 477, 979, 281,2041,3528, 643,2042,3644,2621,2782,2261,1031, // 4422\n2335,2134,2298,3529,4367, 367,1249,2552,7493,3530,7494,4368,1283,3325,2004, 240, // 4438\n1762,3326,4369,4370, 836,1069,3128, 474,7495,2148,2525, 268,3531,7496,3188,1521, // 4454\n1284,7497,1658,1546,4116,7498,3532,3533,7499,4117,3327,2684,1685,4118, 961,1673, // 4470\n2622, 190,2005,2200,3762,4371,4372,7500, 570,2497,3645,1490,7501,4373,2623,3260, // 4486\n1956,4374, 584,1514, 396,1045,1944,7502,4375,1967,2444,7503,7504,4376,3910, 619, // 4502\n7505,3129,3261, 215,2006,2783,2553,3189,4377,3190,4378, 763,4119,3763,4379,7506, // 4518\n7507,1957,1767,2941,3328,3646,1174, 452,1477,4380,3329,3130,7508,2825,1253,2382, // 4534\n2186,1091,2285,4120, 492,7509, 638,1169,1824,2135,1752,3911, 648, 926,1021,1324, // 4550\n4381, 520,4382, 997, 847,1007, 892,4383,3764,2262,1871,3647,7510,2400,1784,4384, // 4566\n1952,2942,3080,3191,1728,4121,2043,3648,4385,2007,1701,3131,1551,  30,2263,4122, // 4582\n7511,2026,4386,3534,7512, 501,7513,4123, 594,3431,2165,1821,3535,3432,3536,3192, // 4598\n 829,2826,4124,7514,1680,3132,1225,4125,7515,3262,4387,4126,3133,2336,7516,4388, // 4614\n4127,7517,3912,3913,7518,1847,2383,2596,3330,7519,4389, 374,3914, 652,4128,4129, // 4630\n 375,1140, 798,7520,7521,7522,2361,4390,2264, 546,1659, 138,3031,2445,4391,7523, // 4646\n2250, 612,1848, 910, 796,3765,1740,1371, 825,3766,3767,7524,2906,2554,7525, 692, // 4662\n 444,3032,2624, 801,4392,4130,7526,1491, 244,1053,3033,4131,4132, 340,7527,3915, // 4678\n1041,2987, 293,1168,  87,1357,7528,1539, 959,7529,2236, 721, 694,4133,3768, 219, // 4694\n1478, 644,1417,3331,2656,1413,1401,1335,1389,3916,7530,7531,2988,2362,3134,1825, // 4710\n 730,1515, 184,2827,  66,4393,7532,1660,2943, 246,3332, 378,1457, 226,3433, 975, // 4726\n3917,2944,1264,3537, 674, 696,7533, 163,7534,1141,2417,2166, 713,3538,3333,4394, // 4742\n3918,7535,7536,1186,  15,7537,1079,1070,7538,1522,3193,3539, 276,1050,2716, 758, // 4758\n1126, 653,2945,3263,7539,2337, 889,3540,3919,3081,2989, 903,1250,4395,3920,3434, // 4774\n3541,1342,1681,1718, 766,3264, 286,  89,2946,3649,7540,1713,7541,2597,3334,2990, // 4790\n7542,2947,2215,3194,2866,7543,4396,2498,2526, 181, 387,1075,3921, 731,2187,3335, // 4806\n7544,3265, 310, 313,3435,2299, 770,4134,  54,3034, 189,4397,3082,3769,3922,7545, // 4822\n1230,1617,1849, 355,3542,4135,4398,3336, 111,4136,3650,1350,3135,3436,3035,4137, // 4838\n2149,3266,3543,7546,2784,3923,3924,2991, 722,2008,7547,1071, 247,1207,2338,2471, // 4854\n1378,4399,2009, 864,1437,1214,4400, 373,3770,1142,2216, 667,4401, 442,2753,2555, // 4870\n3771,3925,1968,4138,3267,1839, 837, 170,1107, 934,1336,1882,7548,7549,2118,4139, // 4886\n2828, 743,1569,7550,4402,4140, 582,2384,1418,3437,7551,1802,7552, 357,1395,1729, // 4902\n3651,3268,2418,1564,2237,7553,3083,3772,1633,4403,1114,2085,4141,1532,7554, 482, // 4918\n2446,4404,7555,7556,1492, 833,1466,7557,2717,3544,1641,2829,7558,1526,1272,3652, // 4934\n4142,1686,1794, 416,2556,1902,1953,1803,7559,3773,2785,3774,1159,2316,7560,2867, // 4950\n4405,1610,1584,3036,2419,2754, 443,3269,1163,3136,7561,7562,3926,7563,4143,2499, // 4966\n3037,4406,3927,3137,2103,1647,3545,2010,1872,4144,7564,4145, 431,3438,7565, 250, // 4982\n  97,  81,4146,7566,1648,1850,1558, 160, 848,7567, 866, 740,1694,7568,2201,2830, // 4998\n3195,4147,4407,3653,1687, 950,2472, 426, 469,3196,3654,3655,3928,7569,7570,1188, // 5014\n 424,1995, 861,3546,4148,3775,2202,2685, 168,1235,3547,4149,7571,2086,1674,4408, // 5030\n3337,3270, 220,2557,1009,7572,3776, 670,2992, 332,1208, 717,7573,7574,3548,2447, // 5046\n3929,3338,7575, 513,7576,1209,2868,3339,3138,4409,1080,7577,7578,7579,7580,2527, // 5062\n3656,3549, 815,1587,3930,3931,7581,3550,3439,3777,1254,4410,1328,3038,1390,3932, // 5078\n1741,3933,3778,3934,7582, 236,3779,2448,3271,7583,7584,3657,3780,1273,3781,4411, // 5094\n7585, 308,7586,4412, 245,4413,1851,2473,1307,2575, 430, 715,2136,2449,7587, 270, // 5110\n 199,2869,3935,7588,3551,2718,1753, 761,1754, 725,1661,1840,4414,3440,3658,7589, // 5126\n7590, 587,  14,3272, 227,2598, 326, 480,2265, 943,2755,3552, 291, 650,1883,7591, // 5142\n1702,1226, 102,1547,  62,3441, 904,4415,3442,1164,4150,7592,7593,1224,1548,2756, // 5158\n 391, 498,1493,7594,1386,1419,7595,2055,1177,4416, 813, 880,1081,2363, 566,1145, // 5174\n4417,2286,1001,1035,2558,2599,2238, 394,1286,7596,7597,2068,7598,  86,1494,1730, // 5190\n3936, 491,1588, 745, 897,2948, 843,3340,3937,2757,2870,3273,1768, 998,2217,2069, // 5206\n 397,1826,1195,1969,3659,2993,3341, 284,7599,3782,2500,2137,2119,1903,7600,3938, // 5222\n2150,3939,4151,1036,3443,1904, 114,2559,4152, 209,1527,7601,7602,2949,2831,2625, // 5238\n2385,2719,3139, 812,2560,7603,3274,7604,1559, 737,1884,3660,1210, 885,  28,2686, // 5254\n3553,3783,7605,4153,1004,1779,4418,7606, 346,1981,2218,2687,4419,3784,1742, 797, // 5270\n1642,3940,1933,1072,1384,2151, 896,3941,3275,3661,3197,2871,3554,7607,2561,1958, // 5286\n4420,2450,1785,7608,7609,7610,3942,4154,1005,1308,3662,4155,2720,4421,4422,1528, // 5302\n2600, 161,1178,4156,1982, 987,4423,1101,4157, 631,3943,1157,3198,2420,1343,1241, // 5318\n1016,2239,2562, 372, 877,2339,2501,1160, 555,1934, 911,3944,7611, 466,1170, 169, // 5334\n1051,2907,2688,3663,2474,2994,1182,2011,2563,1251,2626,7612, 992,2340,3444,1540, // 5350\n2721,1201,2070,2401,1996,2475,7613,4424, 528,1922,2188,1503,1873,1570,2364,3342, // 5366\n3276,7614, 557,1073,7615,1827,3445,2087,2266,3140,3039,3084, 767,3085,2786,4425, // 5382\n1006,4158,4426,2341,1267,2176,3664,3199, 778,3945,3200,2722,1597,2657,7616,4427, // 5398\n7617,3446,7618,7619,7620,3277,2689,1433,3278, 131,  95,1504,3946, 723,4159,3141, // 5414\n1841,3555,2758,2189,3947,2027,2104,3665,7621,2995,3948,1218,7622,3343,3201,3949, // 5430\n4160,2576, 248,1634,3785, 912,7623,2832,3666,3040,3786, 654,  53,7624,2996,7625, // 5446\n1688,4428, 777,3447,1032,3950,1425,7626, 191, 820,2120,2833, 971,4429, 931,3202, // 5462\n 135, 664, 783,3787,1997, 772,2908,1935,3951,3788,4430,2909,3203, 282,2723, 640, // 5478\n1372,3448,1127, 922, 325,3344,7627,7628, 711,2044,7629,7630,3952,2219,2787,1936, // 5494\n3953,3345,2220,2251,3789,2300,7631,4431,3790,1258,3279,3954,3204,2138,2950,3955, // 5510\n3956,7632,2221, 258,3205,4432, 101,1227,7633,3280,1755,7634,1391,3281,7635,2910, // 5526\n2056, 893,7636,7637,7638,1402,4161,2342,7639,7640,3206,3556,7641,7642, 878,1325, // 5542\n1780,2788,4433, 259,1385,2577, 744,1183,2267,4434,7643,3957,2502,7644, 684,1024, // 5558\n4162,7645, 472,3557,3449,1165,3282,3958,3959, 322,2152, 881, 455,1695,1152,1340, // 5574\n 660, 554,2153,4435,1058,4436,4163, 830,1065,3346,3960,4437,1923,7646,1703,1918, // 5590\n7647, 932,2268, 122,7648,4438, 947, 677,7649,3791,2627, 297,1905,1924,2269,4439, // 5606\n2317,3283,7650,7651,4164,7652,4165,  84,4166, 112, 989,7653, 547,1059,3961, 701, // 5622\n3558,1019,7654,4167,7655,3450, 942, 639, 457,2301,2451, 993,2951, 407, 851, 494, // 5638\n4440,3347, 927,7656,1237,7657,2421,3348, 573,4168, 680, 921,2911,1279,1874, 285, // 5654\n 790,1448,1983, 719,2167,7658,7659,4441,3962,3963,1649,7660,1541, 563,7661,1077, // 5670\n7662,3349,3041,3451, 511,2997,3964,3965,3667,3966,1268,2564,3350,3207,4442,4443, // 5686\n7663, 535,1048,1276,1189,2912,2028,3142,1438,1373,2834,2952,1134,2012,7664,4169, // 5702\n1238,2578,3086,1259,7665, 700,7666,2953,3143,3668,4170,7667,4171,1146,1875,1906, // 5718\n4444,2601,3967, 781,2422, 132,1589, 203, 147, 273,2789,2402, 898,1786,2154,3968, // 5734\n3969,7668,3792,2790,7669,7670,4445,4446,7671,3208,7672,1635,3793, 965,7673,1804, // 5750\n2690,1516,3559,1121,1082,1329,3284,3970,1449,3794,  65,1128,2835,2913,2759,1590, // 5766\n3795,7674,7675,  12,2658,  45, 976,2579,3144,4447, 517,2528,1013,1037,3209,7676, // 5782\n3796,2836,7677,3797,7678,3452,7679,2602, 614,1998,2318,3798,3087,2724,2628,7680, // 5798\n2580,4172, 599,1269,7681,1810,3669,7682,2691,3088, 759,1060, 489,1805,3351,3285, // 5814\n1358,7683,7684,2386,1387,1215,2629,2252, 490,7685,7686,4173,1759,2387,2343,7687, // 5830\n4448,3799,1907,3971,2630,1806,3210,4449,3453,3286,2760,2344, 874,7688,7689,3454, // 5846\n3670,1858,  91,2914,3671,3042,3800,4450,7690,3145,3972,2659,7691,3455,1202,1403, // 5862\n3801,2954,2529,1517,2503,4451,3456,2504,7692,4452,7693,2692,1885,1495,1731,3973, // 5878\n2365,4453,7694,2029,7695,7696,3974,2693,1216, 237,2581,4174,2319,3975,3802,4454, // 5894\n4455,2694,3560,3457, 445,4456,7697,7698,7699,7700,2761,  61,3976,3672,1822,3977, // 5910\n7701, 687,2045, 935, 925, 405,2660, 703,1096,1859,2725,4457,3978,1876,1367,2695, // 5926\n3352, 918,2105,1781,2476, 334,3287,1611,1093,4458, 564,3146,3458,3673,3353, 945, // 5942\n2631,2057,4459,7702,1925, 872,4175,7703,3459,2696,3089, 349,4176,3674,3979,4460, // 5958\n3803,4177,3675,2155,3980,4461,4462,4178,4463,2403,2046, 782,3981, 400, 251,4179, // 5974\n1624,7704,7705, 277,3676, 299,1265, 476,1191,3804,2121,4180,4181,1109, 205,7706, // 5990\n2582,1000,2156,3561,1860,7707,7708,7709,4464,7710,4465,2565, 107,2477,2157,3982, // 6006\n3460,3147,7711,1533, 541,1301, 158, 753,4182,2872,3562,7712,1696, 370,1088,4183, // 6022\n4466,3563, 579, 327, 440, 162,2240, 269,1937,1374,3461, 968,3043,  56,1396,3090, // 6038\n2106,3288,3354,7713,1926,2158,4467,2998,7714,3564,7715,7716,3677,4468,2478,7717, // 6054\n2791,7718,1650,4469,7719,2603,7720,7721,3983,2661,3355,1149,3356,3984,3805,3985, // 6070\n7722,1076,  49,7723, 951,3211,3289,3290, 450,2837, 920,7724,1811,2792,2366,4184, // 6086\n1908,1138,2367,3806,3462,7725,3212,4470,1909,1147,1518,2423,4471,3807,7726,4472, // 6102\n2388,2604, 260,1795,3213,7727,7728,3808,3291, 708,7729,3565,1704,7730,3566,1351, // 6118\n1618,3357,2999,1886, 944,4185,3358,4186,3044,3359,4187,7731,3678, 422, 413,1714, // 6134\n3292, 500,2058,2345,4188,2479,7732,1344,1910, 954,7733,1668,7734,7735,3986,2404, // 6150\n4189,3567,3809,4190,7736,2302,1318,2505,3091, 133,3092,2873,4473, 629,  31,2838, // 6166\n2697,3810,4474, 850, 949,4475,3987,2955,1732,2088,4191,1496,1852,7737,3988, 620, // 6182\n3214, 981,1242,3679,3360,1619,3680,1643,3293,2139,2452,1970,1719,3463,2168,7738, // 6198\n3215,7739,7740,3361,1828,7741,1277,4476,1565,2047,7742,1636,3568,3093,7743, 869, // 6214\n2839, 655,3811,3812,3094,3989,3000,3813,1310,3569,4477,7744,7745,7746,1733, 558, // 6230\n4478,3681, 335,1549,3045,1756,4192,3682,1945,3464,1829,1291,1192, 470,2726,2107, // 6246\n2793, 913,1054,3990,7747,1027,7748,3046,3991,4479, 982,2662,3362,3148,3465,3216, // 6262\n3217,1946,2794,7749, 571,4480,7750,1830,7751,3570,2583,1523,2424,7752,2089, 984, // 6278\n4481,3683,1959,7753,3684, 852, 923,2795,3466,3685, 969,1519, 999,2048,2320,1705, // 6294\n7754,3095, 615,1662, 151, 597,3992,2405,2321,1049, 275,4482,3686,4193, 568,3687, // 6310\n3571,2480,4194,3688,7755,2425,2270, 409,3218,7756,1566,2874,3467,1002, 769,2840, // 6326\n 194,2090,3149,3689,2222,3294,4195, 628,1505,7757,7758,1763,2177,3001,3993, 521, // 6342\n1161,2584,1787,2203,2406,4483,3994,1625,4196,4197, 412,  42,3096, 464,7759,2632, // 6358\n4484,3363,1760,1571,2875,3468,2530,1219,2204,3814,2633,2140,2368,4485,4486,3295, // 6374\n1651,3364,3572,7760,7761,3573,2481,3469,7762,3690,7763,7764,2271,2091, 460,7765, // 6390\n4487,7766,3002, 962, 588,3574, 289,3219,2634,1116,  52,7767,3047,1796,7768,7769, // 6406\n7770,1467,7771,1598,1143,3691,4198,1984,1734,1067,4488,1280,3365, 465,4489,1572, // 6422\n 510,7772,1927,2241,1812,1644,3575,7773,4490,3692,7774,7775,2663,1573,1534,7776, // 6438\n7777,4199, 536,1807,1761,3470,3815,3150,2635,7778,7779,7780,4491,3471,2915,1911, // 6454\n2796,7781,3296,1122, 377,3220,7782, 360,7783,7784,4200,1529, 551,7785,2059,3693, // 6470\n1769,2426,7786,2916,4201,3297,3097,2322,2108,2030,4492,1404, 136,1468,1479, 672, // 6486\n1171,3221,2303, 271,3151,7787,2762,7788,2049, 678,2727, 865,1947,4493,7789,2013, // 6502\n3995,2956,7790,2728,2223,1397,3048,3694,4494,4495,1735,2917,3366,3576,7791,3816, // 6518\n 509,2841,2453,2876,3817,7792,7793,3152,3153,4496,4202,2531,4497,2304,1166,1010, // 6534\n 552, 681,1887,7794,7795,2957,2958,3996,1287,1596,1861,3154, 358, 453, 736, 175, // 6550\n 478,1117, 905,1167,1097,7796,1853,1530,7797,1706,7798,2178,3472,2287,3695,3473, // 6566\n3577,4203,2092,4204,7799,3367,1193,2482,4205,1458,2190,2205,1862,1888,1421,3298, // 6582\n2918,3049,2179,3474, 595,2122,7800,3997,7801,7802,4206,1707,2636, 223,3696,1359, // 6598\n 751,3098, 183,3475,7803,2797,3003, 419,2369, 633, 704,3818,2389, 241,7804,7805, // 6614\n7806, 838,3004,3697,2272,2763,2454,3819,1938,2050,3998,1309,3099,2242,1181,7807, // 6630\n1136,2206,3820,2370,1446,4207,2305,4498,7808,7809,4208,1055,2605, 484,3698,7810, // 6646\n3999, 625,4209,2273,3368,1499,4210,4000,7811,4001,4211,3222,2274,2275,3476,7812, // 6662\n7813,2764, 808,2606,3699,3369,4002,4212,3100,2532, 526,3370,3821,4213, 955,7814, // 6678\n1620,4214,2637,2427,7815,1429,3700,1669,1831, 994, 928,7816,3578,1260,7817,7818, // 6694\n7819,1948,2288, 741,2919,1626,4215,2729,2455, 867,1184, 362,3371,1392,7820,7821, // 6710\n4003,4216,1770,1736,3223,2920,4499,4500,1928,2698,1459,1158,7822,3050,3372,2877, // 6726\n1292,1929,2506,2842,3701,1985,1187,2071,2014,2607,4217,7823,2566,2507,2169,3702, // 6742\n2483,3299,7824,3703,4501,7825,7826, 666,1003,3005,1022,3579,4218,7827,4502,1813, // 6758\n2253, 574,3822,1603, 295,1535, 705,3823,4219, 283, 858, 417,7828,7829,3224,4503, // 6774\n4504,3051,1220,1889,1046,2276,2456,4004,1393,1599, 689,2567, 388,4220,7830,2484, // 6790\n 802,7831,2798,3824,2060,1405,2254,7832,4505,3825,2109,1052,1345,3225,1585,7833, // 6806\n 809,7834,7835,7836, 575,2730,3477, 956,1552,1469,1144,2323,7837,2324,1560,2457, // 6822\n3580,3226,4005, 616,2207,3155,2180,2289,7838,1832,7839,3478,4506,7840,1319,3704, // 6838\n3705,1211,3581,1023,3227,1293,2799,7841,7842,7843,3826, 607,2306,3827, 762,2878, // 6854\n1439,4221,1360,7844,1485,3052,7845,4507,1038,4222,1450,2061,2638,4223,1379,4508, // 6870\n2585,7846,7847,4224,1352,1414,2325,2921,1172,7848,7849,3828,3829,7850,1797,1451, // 6886\n7851,7852,7853,7854,2922,4006,4007,2485,2346, 411,4008,4009,3582,3300,3101,4509, // 6902\n1561,2664,1452,4010,1375,7855,7856,  47,2959, 316,7857,1406,1591,2923,3156,7858, // 6918\n1025,2141,3102,3157, 354,2731, 884,2224,4225,2407, 508,3706, 726,3583, 996,2428, // 6934\n3584, 729,7859, 392,2191,1453,4011,4510,3707,7860,7861,2458,3585,2608,1675,2800, // 6950\n 919,2347,2960,2348,1270,4511,4012,  73,7862,7863, 647,7864,3228,2843,2255,1550, // 6966\n1346,3006,7865,1332, 883,3479,7866,7867,7868,7869,3301,2765,7870,1212, 831,1347, // 6982\n4226,4512,2326,3830,1863,3053, 720,3831,4513,4514,3832,7871,4227,7872,7873,4515, // 6998\n7874,7875,1798,4516,3708,2609,4517,3586,1645,2371,7876,7877,2924, 669,2208,2665, // 7014\n2429,7878,2879,7879,7880,1028,3229,7881,4228,2408,7882,2256,1353,7883,7884,4518, // 7030\n3158, 518,7885,4013,7886,4229,1960,7887,2142,4230,7888,7889,3007,2349,2350,3833, // 7046\n 516,1833,1454,4014,2699,4231,4519,2225,2610,1971,1129,3587,7890,2766,7891,2961, // 7062\n1422, 577,1470,3008,1524,3373,7892,7893, 432,4232,3054,3480,7894,2586,1455,2508, // 7078\n2226,1972,1175,7895,1020,2732,4015,3481,4520,7896,2733,7897,1743,1361,3055,3482, // 7094\n2639,4016,4233,4521,2290, 895, 924,4234,2170, 331,2243,3056, 166,1627,3057,1098, // 7110\n7898,1232,2880,2227,3374,4522, 657, 403,1196,2372, 542,3709,3375,1600,4235,3483, // 7126\n7899,4523,2767,3230, 576, 530,1362,7900,4524,2533,2666,3710,4017,7901, 842,3834, // 7142\n7902,2801,2031,1014,4018, 213,2700,3376, 665, 621,4236,7903,3711,2925,2430,7904, // 7158\n2431,3302,3588,3377,7905,4237,2534,4238,4525,3589,1682,4239,3484,1380,7906, 724, // 7174\n2277, 600,1670,7907,1337,1233,4526,3103,2244,7908,1621,4527,7909, 651,4240,7910, // 7190\n1612,4241,2611,7911,2844,7912,2734,2307,3058,7913, 716,2459,3059, 174,1255,2701, // 7206\n4019,3590, 548,1320,1398, 728,4020,1574,7914,1890,1197,3060,4021,7915,3061,3062, // 7222\n3712,3591,3713, 747,7916, 635,4242,4528,7917,7918,7919,4243,7920,7921,4529,7922, // 7238\n3378,4530,2432, 451,7923,3714,2535,2072,4244,2735,4245,4022,7924,1764,4531,7925, // 7254\n4246, 350,7926,2278,2390,2486,7927,4247,4023,2245,1434,4024, 488,4532, 458,4248, // 7270\n4025,3715, 771,1330,2391,3835,2568,3159,2159,2409,1553,2667,3160,4249,7928,2487, // 7286\n2881,2612,1720,2702,4250,3379,4533,7929,2536,4251,7930,3231,4252,2768,7931,2015, // 7302\n2736,7932,1155,1017,3716,3836,7933,3303,2308, 201,1864,4253,1430,7934,4026,7935, // 7318\n7936,7937,7938,7939,4254,1604,7940, 414,1865, 371,2587,4534,4535,3485,2016,3104, // 7334\n4536,1708, 960,4255, 887, 389,2171,1536,1663,1721,7941,2228,4027,2351,2926,1580, // 7350\n7942,7943,7944,1744,7945,2537,4537,4538,7946,4539,7947,2073,7948,7949,3592,3380, // 7366\n2882,4256,7950,4257,2640,3381,2802, 673,2703,2460, 709,3486,4028,3593,4258,7951, // 7382\n1148, 502, 634,7952,7953,1204,4540,3594,1575,4541,2613,3717,7954,3718,3105, 948, // 7398\n3232, 121,1745,3837,1110,7955,4259,3063,2509,3009,4029,3719,1151,1771,3838,1488, // 7414\n4030,1986,7956,2433,3487,7957,7958,2093,7959,4260,3839,1213,1407,2803, 531,2737, // 7430\n2538,3233,1011,1537,7960,2769,4261,3106,1061,7961,3720,3721,1866,2883,7962,2017, // 7446\n 120,4262,4263,2062,3595,3234,2309,3840,2668,3382,1954,4542,7963,7964,3488,1047, // 7462\n2704,1266,7965,1368,4543,2845, 649,3383,3841,2539,2738,1102,2846,2669,7966,7967, // 7478\n1999,7968,1111,3596,2962,7969,2488,3842,3597,2804,1854,3384,3722,7970,7971,3385, // 7494\n2410,2884,3304,3235,3598,7972,2569,7973,3599,2805,4031,1460, 856,7974,3600,7975, // 7510\n2885,2963,7976,2886,3843,7977,4264, 632,2510, 875,3844,1697,3845,2291,7978,7979, // 7526\n4544,3010,1239, 580,4545,4265,7980, 914, 936,2074,1190,4032,1039,2123,7981,7982, // 7542\n7983,3386,1473,7984,1354,4266,3846,7985,2172,3064,4033, 915,3305,4267,4268,3306, // 7558\n1605,1834,7986,2739, 398,3601,4269,3847,4034, 328,1912,2847,4035,3848,1331,4270, // 7574\n3011, 937,4271,7987,3602,4036,4037,3387,2160,4546,3388, 524, 742, 538,3065,1012, // 7590\n7988,7989,3849,2461,7990, 658,1103, 225,3850,7991,7992,4547,7993,4548,7994,3236, // 7606\n1243,7995,4038, 963,2246,4549,7996,2705,3603,3161,7997,7998,2588,2327,7999,4550, // 7622\n8000,8001,8002,3489,3307, 957,3389,2540,2032,1930,2927,2462, 870,2018,3604,1746, // 7638\n2770,2771,2434,2463,8003,3851,8004,3723,3107,3724,3490,3390,3725,8005,1179,3066, // 7654\n8006,3162,2373,4272,3726,2541,3163,3108,2740,4039,8007,3391,1556,2542,2292, 977, // 7670\n2887,2033,4040,1205,3392,8008,1765,3393,3164,2124,1271,1689, 714,4551,3491,8009, // 7686\n2328,3852, 533,4273,3605,2181, 617,8010,2464,3308,3492,2310,8011,8012,3165,8013, // 7702\n8014,3853,1987, 618, 427,2641,3493,3394,8015,8016,1244,1690,8017,2806,4274,4552, // 7718\n8018,3494,8019,8020,2279,1576, 473,3606,4275,3395, 972,8021,3607,8022,3067,8023, // 7734\n8024,4553,4554,8025,3727,4041,4042,8026, 153,4555, 356,8027,1891,2888,4276,2143, // 7750\n 408, 803,2352,8028,3854,8029,4277,1646,2570,2511,4556,4557,3855,8030,3856,4278, // 7766\n8031,2411,3396, 752,8032,8033,1961,2964,8034, 746,3012,2465,8035,4279,3728, 698, // 7782\n4558,1892,4280,3608,2543,4559,3609,3857,8036,3166,3397,8037,1823,1302,4043,2706, // 7798\n3858,1973,4281,8038,4282,3167, 823,1303,1288,1236,2848,3495,4044,3398, 774,3859, // 7814\n8039,1581,4560,1304,2849,3860,4561,8040,2435,2161,1083,3237,4283,4045,4284, 344, // 7830\n1173, 288,2311, 454,1683,8041,8042,1461,4562,4046,2589,8043,8044,4563, 985, 894, // 7846\n8045,3399,3168,8046,1913,2928,3729,1988,8047,2110,1974,8048,4047,8049,2571,1194, // 7862\n 425,8050,4564,3169,1245,3730,4285,8051,8052,2850,8053, 636,4565,1855,3861, 760, // 7878\n1799,8054,4286,2209,1508,4566,4048,1893,1684,2293,8055,8056,8057,4287,4288,2210, // 7894\n 479,8058,8059, 832,8060,4049,2489,8061,2965,2490,3731, 990,3109, 627,1814,2642, // 7910\n4289,1582,4290,2125,2111,3496,4567,8062, 799,4291,3170,8063,4568,2112,1737,3013, // 7926\n1018, 543, 754,4292,3309,1676,4569,4570,4050,8064,1489,8065,3497,8066,2614,2889, // 7942\n4051,8067,8068,2966,8069,8070,8071,8072,3171,4571,4572,2182,1722,8073,3238,3239, // 7958\n1842,3610,1715, 481, 365,1975,1856,8074,8075,1962,2491,4573,8076,2126,3611,3240, // 7974\n 433,1894,2063,2075,8077, 602,2741,8078,8079,8080,8081,8082,3014,1628,3400,8083, // 7990\n3172,4574,4052,2890,4575,2512,8084,2544,2772,8085,8086,8087,3310,4576,2891,8088, // 8006\n4577,8089,2851,4578,4579,1221,2967,4053,2513,8090,8091,8092,1867,1989,8093,8094, // 8022\n8095,1895,8096,8097,4580,1896,4054, 318,8098,2094,4055,4293,8099,8100, 485,8101, // 8038\n 938,3862, 553,2670, 116,8102,3863,3612,8103,3498,2671,2773,3401,3311,2807,8104, // 8054\n3613,2929,4056,1747,2930,2968,8105,8106, 207,8107,8108,2672,4581,2514,8109,3015, // 8070\n 890,3614,3864,8110,1877,3732,3402,8111,2183,2353,3403,1652,8112,8113,8114, 941, // 8086\n2294, 208,3499,4057,2019, 330,4294,3865,2892,2492,3733,4295,8115,8116,8117,8118, // 8102\n//Everything below is of no interest for detection purpose\n2515,1613,4582,8119,3312,3866,2516,8120,4058,8121,1637,4059,2466,4583,3867,8122, // 8118\n2493,3016,3734,8123,8124,2192,8125,8126,2162,8127,8128,8129,8130,8131,8132,8133, // 8134\n8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149, // 8150\n8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165, // 8166\n8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181, // 8182\n8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197, // 8198\n8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213, // 8214\n8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229, // 8230\n8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245, // 8246\n8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261, // 8262\n8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277, // 8278\n8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293, // 8294\n8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309, // 8310\n8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325, // 8326\n8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341, // 8342\n8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357, // 8358\n8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373, // 8374\n8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389, // 8390\n8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405, // 8406\n8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421, // 8422\n8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437, // 8438\n8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453, // 8454\n8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469, // 8470\n8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485, // 8486\n8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501, // 8502\n8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517, // 8518\n8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533, // 8534\n8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549, // 8550\n8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565, // 8566\n8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581, // 8582\n8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597, // 8598\n8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613, // 8614\n8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629, // 8630\n8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645, // 8646\n8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661, // 8662\n8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677, // 8678\n8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693, // 8694\n8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709, // 8710\n8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725, // 8726\n8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741\n]; // 8742\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// Big5 frequency table\n// by Taiwan's Mandarin Promotion Council\n// <http://www.edu.tw:81/mandr/>\n//\n// 128  --> 0.42261\n// 256  --> 0.57851\n// 512  --> 0.74851\n// 1024 --> 0.89384\n// 2048 --> 0.97583\n//\n// Ideal Distribution Ratio = 0.74851/(1-0.74851) =2.98\n// Random Distribution Ration = 512/(5401-512)=0.105\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\n\nexports.BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75;\n\n//Char to FreqOrder table\nexports.BIG5_TABLE_SIZE = 5376;\n\nexports.Big5CharToFreqOrder = [\n   1,1801,1506, 255,1431, 198,   9,  82,   6,5008, 177, 202,3681,1256,2821, 110, //   16\n3814,  33,3274, 261,  76,  44,2114,  16,2946,2187,1176, 659,3971,  26,3451,2653, //   32\n1198,3972,3350,4202, 410,2215, 302, 590, 361,1964,   8, 204,  58,4510,5009,1932, //   48\n  63,5010,5011, 317,1614,  75, 222, 159,4203,2417,1480,5012,3555,3091, 224,2822, //   64\n3682,   3,  10,3973,1471,  29,2787,1135,2866,1940, 873, 130,3275,1123, 312,5013, //   80\n4511,2052, 507, 252, 682,5014, 142,1915, 124, 206,2947,  34,3556,3204,  64, 604, //   96\n5015,2501,1977,1978, 155,1991, 645, 641,1606,5016,3452, 337,  72, 406,5017,  80, //  112\n 630, 238,3205,1509, 263, 939,1092,2654, 756,1440,1094,3453, 449,  69,2987, 591, //  128\n 179,2096, 471, 115,2035,1844,  60,  50,2988, 134, 806,1869, 734,2036,3454, 180, //  144\n 995,1607, 156, 537,2907, 688,5018, 319,1305, 779,2145, 514,2379, 298,4512, 359, //  160\n2502,  90,2716,1338, 663,  11, 906,1099,2553,  20,2441, 182, 532,1716,5019, 732, //  176\n1376,4204,1311,1420,3206,  25,2317,1056, 113, 399, 382,1950, 242,3455,2474, 529, //  192\n3276, 475,1447,3683,5020, 117,  21, 656, 810,1297,2300,2334,3557,5021, 126,4205, //  208\n 706, 456, 150, 613,4513,  71,1118,2037,4206, 145,3092,  85, 835, 486,2115,1246, //  224\n1426, 428, 727,1285,1015, 800, 106, 623, 303,1281,5022,2128,2359, 347,3815, 221, //  240\n3558,3135,5023,1956,1153,4207,  83, 296,1199,3093, 192, 624,  93,5024, 822,1898, //  256\n2823,3136, 795,2065, 991,1554,1542,1592,  27,  43,2867, 859, 139,1456, 860,4514, //  272\n 437, 712,3974, 164,2397,3137, 695, 211,3037,2097, 195,3975,1608,3559,3560,3684, //  288\n3976, 234, 811,2989,2098,3977,2233,1441,3561,1615,2380, 668,2077,1638, 305, 228, //  304\n1664,4515, 467, 415,5025, 262,2099,1593, 239, 108, 300, 200,1033, 512,1247,2078, //  320\n5026,5027,2176,3207,3685,2682, 593, 845,1062,3277,  88,1723,2038,3978,1951, 212, //  336\n 266, 152, 149, 468,1899,4208,4516,  77, 187,5028,3038,  37,   5,2990,5029,3979, //  352\n5030,5031,  39,2524,4517,2908,3208,2079,  55, 148,  74,4518, 545, 483,1474,1029, //  368\n1665, 217,1870,1531,3138,1104,2655,4209,  24, 172,3562, 900,3980,3563,3564,4519, //  384\n  32,1408,2824,1312, 329, 487,2360,2251,2717, 784,2683,   4,3039,3351,1427,1789, //  400\n 188, 109, 499,5032,3686,1717,1790, 888,1217,3040,4520,5033,3565,5034,3352,1520, //  416\n3687,3981, 196,1034, 775,5035,5036, 929,1816, 249, 439,  38,5037,1063,5038, 794, //  432\n3982,1435,2301,  46, 178,3278,2066,5039,2381,5040, 214,1709,4521, 804,  35, 707, //  448\n 324,3688,1601,2554, 140, 459,4210,5041,5042,1365, 839, 272, 978,2262,2580,3456, //  464\n2129,1363,3689,1423, 697, 100,3094,  48,  70,1231, 495,3139,2196,5043,1294,5044, //  480\n2080, 462, 586,1042,3279, 853, 256, 988, 185,2382,3457,1698, 434,1084,5045,3458, //  496\n 314,2625,2788,4522,2335,2336, 569,2285, 637,1817,2525, 757,1162,1879,1616,3459, //  512\n 287,1577,2116, 768,4523,1671,2868,3566,2526,1321,3816, 909,2418,5046,4211, 933, //  528\n3817,4212,2053,2361,1222,4524, 765,2419,1322, 786,4525,5047,1920,1462,1677,2909, //  544\n1699,5048,4526,1424,2442,3140,3690,2600,3353,1775,1941,3460,3983,4213, 309,1369, //  560\n1130,2825, 364,2234,1653,1299,3984,3567,3985,3986,2656, 525,1085,3041, 902,2001, //  576\n1475, 964,4527, 421,1845,1415,1057,2286, 940,1364,3141, 376,4528,4529,1381,   7, //  592\n2527, 983,2383, 336,1710,2684,1846, 321,3461, 559,1131,3042,2752,1809,1132,1313, //  608\n 265,1481,1858,5049, 352,1203,2826,3280, 167,1089, 420,2827, 776, 792,1724,3568, //  624\n4214,2443,3281,5050,4215,5051, 446, 229, 333,2753, 901,3818,1200,1557,4530,2657, //  640\n1921, 395,2754,2685,3819,4216,1836, 125, 916,3209,2626,4531,5052,5053,3820,5054, //  656\n5055,5056,4532,3142,3691,1133,2555,1757,3462,1510,2318,1409,3569,5057,2146, 438, //  672\n2601,2910,2384,3354,1068, 958,3043, 461, 311,2869,2686,4217,1916,3210,4218,1979, //  688\n 383, 750,2755,2627,4219, 274, 539, 385,1278,1442,5058,1154,1965, 384, 561, 210, //  704\n  98,1295,2556,3570,5059,1711,2420,1482,3463,3987,2911,1257, 129,5060,3821, 642, //  720\n 523,2789,2790,2658,5061, 141,2235,1333,  68, 176, 441, 876, 907,4220, 603,2602, //  736\n 710, 171,3464, 404, 549,  18,3143,2398,1410,3692,1666,5062,3571,4533,2912,4534, //  752\n5063,2991, 368,5064, 146, 366,  99, 871,3693,1543, 748, 807,1586,1185,  22,2263, //  768\n 379,3822,3211,5065,3212, 505,1942,2628,1992,1382,2319,5066, 380,2362, 218, 702, //  784\n1818,1248,3465,3044,3572,3355,3282,5067,2992,3694, 930,3283,3823,5068,  59,5069, //  800\n 585, 601,4221, 497,3466,1112,1314,4535,1802,5070,1223,1472,2177,5071, 749,1837, //  816\n 690,1900,3824,1773,3988,1476, 429,1043,1791,2236,2117, 917,4222, 447,1086,1629, //  832\n5072, 556,5073,5074,2021,1654, 844,1090, 105, 550, 966,1758,2828,1008,1783, 686, //  848\n1095,5075,2287, 793,1602,5076,3573,2603,4536,4223,2948,2302,4537,3825, 980,2503, //  864\n 544, 353, 527,4538, 908,2687,2913,5077, 381,2629,1943,1348,5078,1341,1252, 560, //  880\n3095,5079,3467,2870,5080,2054, 973, 886,2081, 143,4539,5081,5082, 157,3989, 496, //  896\n4224,  57, 840, 540,2039,4540,4541,3468,2118,1445, 970,2264,1748,1966,2082,4225, //  912\n3144,1234,1776,3284,2829,3695, 773,1206,2130,1066,2040,1326,3990,1738,1725,4226, //  928\n 279,3145,  51,1544,2604, 423,1578,2131,2067, 173,4542,1880,5083,5084,1583, 264, //  944\n 610,3696,4543,2444, 280, 154,5085,5086,5087,1739, 338,1282,3096, 693,2871,1411, //  960\n1074,3826,2445,5088,4544,5089,5090,1240, 952,2399,5091,2914,1538,2688, 685,1483, //  976\n4227,2475,1436, 953,4228,2055,4545, 671,2400,  79,4229,2446,3285, 608, 567,2689, //  992\n3469,4230,4231,1691, 393,1261,1792,2401,5092,4546,5093,5094,5095,5096,1383,1672, // 1008\n3827,3213,1464, 522,1119, 661,1150, 216, 675,4547,3991,1432,3574, 609,4548,2690, // 1024\n2402,5097,5098,5099,4232,3045,   0,5100,2476, 315, 231,2447, 301,3356,4549,2385, // 1040\n5101, 233,4233,3697,1819,4550,4551,5102,  96,1777,1315,2083,5103, 257,5104,1810, // 1056\n3698,2718,1139,1820,4234,2022,1124,2164,2791,1778,2659,5105,3097, 363,1655,3214, // 1072\n5106,2993,5107,5108,5109,3992,1567,3993, 718, 103,3215, 849,1443, 341,3357,2949, // 1088\n1484,5110,1712, 127,  67, 339,4235,2403, 679,1412, 821,5111,5112, 834, 738, 351, // 1104\n2994,2147, 846, 235,1497,1881, 418,1993,3828,2719, 186,1100,2148,2756,3575,1545, // 1120\n1355,2950,2872,1377, 583,3994,4236,2581,2995,5113,1298,3699,1078,2557,3700,2363, // 1136\n  78,3829,3830, 267,1289,2100,2002,1594,4237, 348, 369,1274,2197,2178,1838,4552, // 1152\n1821,2830,3701,2757,2288,2003,4553,2951,2758, 144,3358, 882,4554,3995,2759,3470, // 1168\n4555,2915,5114,4238,1726, 320,5115,3996,3046, 788,2996,5116,2831,1774,1327,2873, // 1184\n3997,2832,5117,1306,4556,2004,1700,3831,3576,2364,2660, 787,2023, 506, 824,3702, // 1200\n 534, 323,4557,1044,3359,2024,1901, 946,3471,5118,1779,1500,1678,5119,1882,4558, // 1216\n 165, 243,4559,3703,2528, 123, 683,4239, 764,4560,  36,3998,1793, 589,2916, 816, // 1232\n 626,1667,3047,2237,1639,1555,1622,3832,3999,5120,4000,2874,1370,1228,1933, 891, // 1248\n2084,2917, 304,4240,5121, 292,2997,2720,3577, 691,2101,4241,1115,4561, 118, 662, // 1264\n5122, 611,1156, 854,2386,1316,2875,   2, 386, 515,2918,5123,5124,3286, 868,2238, // 1280\n1486, 855,2661, 785,2216,3048,5125,1040,3216,3578,5126,3146, 448,5127,1525,5128, // 1296\n2165,4562,5129,3833,5130,4242,2833,3579,3147, 503, 818,4001,3148,1568, 814, 676, // 1312\n1444, 306,1749,5131,3834,1416,1030, 197,1428, 805,2834,1501,4563,5132,5133,5134, // 1328\n1994,5135,4564,5136,5137,2198,  13,2792,3704,2998,3149,1229,1917,5138,3835,2132, // 1344\n5139,4243,4565,2404,3580,5140,2217,1511,1727,1120,5141,5142, 646,3836,2448, 307, // 1360\n5143,5144,1595,3217,5145,5146,5147,3705,1113,1356,4002,1465,2529,2530,5148, 519, // 1376\n5149, 128,2133,  92,2289,1980,5150,4003,1512, 342,3150,2199,5151,2793,2218,1981, // 1392\n3360,4244, 290,1656,1317, 789, 827,2365,5152,3837,4566, 562, 581,4004,5153, 401, // 1408\n4567,2252,  94,4568,5154,1399,2794,5155,1463,2025,4569,3218,1944,5156, 828,1105, // 1424\n4245,1262,1394,5157,4246, 605,4570,5158,1784,2876,5159,2835, 819,2102, 578,2200, // 1440\n2952,5160,1502, 436,3287,4247,3288,2836,4005,2919,3472,3473,5161,2721,2320,5162, // 1456\n5163,2337,2068,  23,4571, 193, 826,3838,2103, 699,1630,4248,3098, 390,1794,1064, // 1472\n3581,5164,1579,3099,3100,1400,5165,4249,1839,1640,2877,5166,4572,4573, 137,4250, // 1488\n 598,3101,1967, 780, 104, 974,2953,5167, 278, 899, 253, 402, 572, 504, 493,1339, // 1504\n5168,4006,1275,4574,2582,2558,5169,3706,3049,3102,2253, 565,1334,2722, 863,  41, // 1520\n5170,5171,4575,5172,1657,2338,  19, 463,2760,4251, 606,5173,2999,3289,1087,2085, // 1536\n1323,2662,3000,5174,1631,1623,1750,4252,2691,5175,2878, 791,2723,2663,2339, 232, // 1552\n2421,5176,3001,1498,5177,2664,2630, 755,1366,3707,3290,3151,2026,1609, 119,1918, // 1568\n3474, 862,1026,4253,5178,4007,3839,4576,4008,4577,2265,1952,2477,5179,1125, 817, // 1584\n4254,4255,4009,1513,1766,2041,1487,4256,3050,3291,2837,3840,3152,5180,5181,1507, // 1600\n5182,2692, 733,  40,1632,1106,2879, 345,4257, 841,2531, 230,4578,3002,1847,3292, // 1616\n3475,5183,1263, 986,3476,5184, 735, 879, 254,1137, 857, 622,1300,1180,1388,1562, // 1632\n4010,4011,2954, 967,2761,2665,1349, 592,2134,1692,3361,3003,1995,4258,1679,4012, // 1648\n1902,2188,5185, 739,3708,2724,1296,1290,5186,4259,2201,2202,1922,1563,2605,2559, // 1664\n1871,2762,3004,5187, 435,5188, 343,1108, 596,  17,1751,4579,2239,3477,3709,5189, // 1680\n4580, 294,3582,2955,1693, 477, 979, 281,2042,3583, 643,2043,3710,2631,2795,2266, // 1696\n1031,2340,2135,2303,3584,4581, 367,1249,2560,5190,3585,5191,4582,1283,3362,2005, // 1712\n 240,1762,3363,4583,4584, 836,1069,3153, 474,5192,2149,2532, 268,3586,5193,3219, // 1728\n1521,1284,5194,1658,1546,4260,5195,3587,3588,5196,4261,3364,2693,1685,4262, 961, // 1744\n1673,2632, 190,2006,2203,3841,4585,4586,5197, 570,2504,3711,1490,5198,4587,2633, // 1760\n3293,1957,4588, 584,1514, 396,1045,1945,5199,4589,1968,2449,5200,5201,4590,4013, // 1776\n 619,5202,3154,3294, 215,2007,2796,2561,3220,4591,3221,4592, 763,4263,3842,4593, // 1792\n5203,5204,1958,1767,2956,3365,3712,1174, 452,1477,4594,3366,3155,5205,2838,1253, // 1808\n2387,2189,1091,2290,4264, 492,5206, 638,1169,1825,2136,1752,4014, 648, 926,1021, // 1824\n1324,4595, 520,4596, 997, 847,1007, 892,4597,3843,2267,1872,3713,2405,1785,4598, // 1840\n1953,2957,3103,3222,1728,4265,2044,3714,4599,2008,1701,3156,1551,  30,2268,4266, // 1856\n5207,2027,4600,3589,5208, 501,5209,4267, 594,3478,2166,1822,3590,3479,3591,3223, // 1872\n 829,2839,4268,5210,1680,3157,1225,4269,5211,3295,4601,4270,3158,2341,5212,4602, // 1888\n4271,5213,4015,4016,5214,1848,2388,2606,3367,5215,4603, 374,4017, 652,4272,4273, // 1904\n 375,1140, 798,5216,5217,5218,2366,4604,2269, 546,1659, 138,3051,2450,4605,5219, // 1920\n2254, 612,1849, 910, 796,3844,1740,1371, 825,3845,3846,5220,2920,2562,5221, 692, // 1936\n 444,3052,2634, 801,4606,4274,5222,1491, 244,1053,3053,4275,4276, 340,5223,4018, // 1952\n1041,3005, 293,1168,  87,1357,5224,1539, 959,5225,2240, 721, 694,4277,3847, 219, // 1968\n1478, 644,1417,3368,2666,1413,1401,1335,1389,4019,5226,5227,3006,2367,3159,1826, // 1984\n 730,1515, 184,2840,  66,4607,5228,1660,2958, 246,3369, 378,1457, 226,3480, 975, // 2000\n4020,2959,1264,3592, 674, 696,5229, 163,5230,1141,2422,2167, 713,3593,3370,4608, // 2016\n4021,5231,5232,1186,  15,5233,1079,1070,5234,1522,3224,3594, 276,1050,2725, 758, // 2032\n1126, 653,2960,3296,5235,2342, 889,3595,4022,3104,3007, 903,1250,4609,4023,3481, // 2048\n3596,1342,1681,1718, 766,3297, 286,  89,2961,3715,5236,1713,5237,2607,3371,3008, // 2064\n5238,2962,2219,3225,2880,5239,4610,2505,2533, 181, 387,1075,4024, 731,2190,3372, // 2080\n5240,3298, 310, 313,3482,2304, 770,4278,  54,3054, 189,4611,3105,3848,4025,5241, // 2096\n1230,1617,1850, 355,3597,4279,4612,3373, 111,4280,3716,1350,3160,3483,3055,4281, // 2112\n2150,3299,3598,5242,2797,4026,4027,3009, 722,2009,5243,1071, 247,1207,2343,2478, // 2128\n1378,4613,2010, 864,1437,1214,4614, 373,3849,1142,2220, 667,4615, 442,2763,2563, // 2144\n3850,4028,1969,4282,3300,1840, 837, 170,1107, 934,1336,1883,5244,5245,2119,4283, // 2160\n2841, 743,1569,5246,4616,4284, 582,2389,1418,3484,5247,1803,5248, 357,1395,1729, // 2176\n3717,3301,2423,1564,2241,5249,3106,3851,1633,4617,1114,2086,4285,1532,5250, 482, // 2192\n2451,4618,5251,5252,1492, 833,1466,5253,2726,3599,1641,2842,5254,1526,1272,3718, // 2208\n4286,1686,1795, 416,2564,1903,1954,1804,5255,3852,2798,3853,1159,2321,5256,2881, // 2224\n4619,1610,1584,3056,2424,2764, 443,3302,1163,3161,5257,5258,4029,5259,4287,2506, // 2240\n3057,4620,4030,3162,2104,1647,3600,2011,1873,4288,5260,4289, 431,3485,5261, 250, // 2256\n  97,  81,4290,5262,1648,1851,1558, 160, 848,5263, 866, 740,1694,5264,2204,2843, // 2272\n3226,4291,4621,3719,1687, 950,2479, 426, 469,3227,3720,3721,4031,5265,5266,1188, // 2288\n 424,1996, 861,3601,4292,3854,2205,2694, 168,1235,3602,4293,5267,2087,1674,4622, // 2304\n3374,3303, 220,2565,1009,5268,3855, 670,3010, 332,1208, 717,5269,5270,3603,2452, // 2320\n4032,3375,5271, 513,5272,1209,2882,3376,3163,4623,1080,5273,5274,5275,5276,2534, // 2336\n3722,3604, 815,1587,4033,4034,5277,3605,3486,3856,1254,4624,1328,3058,1390,4035, // 2352\n1741,4036,3857,4037,5278, 236,3858,2453,3304,5279,5280,3723,3859,1273,3860,4625, // 2368\n5281, 308,5282,4626, 245,4627,1852,2480,1307,2583, 430, 715,2137,2454,5283, 270, // 2384\n 199,2883,4038,5284,3606,2727,1753, 761,1754, 725,1661,1841,4628,3487,3724,5285, // 2400\n5286, 587,  14,3305, 227,2608, 326, 480,2270, 943,2765,3607, 291, 650,1884,5287, // 2416\n1702,1226, 102,1547,  62,3488, 904,4629,3489,1164,4294,5288,5289,1224,1548,2766, // 2432\n 391, 498,1493,5290,1386,1419,5291,2056,1177,4630, 813, 880,1081,2368, 566,1145, // 2448\n4631,2291,1001,1035,2566,2609,2242, 394,1286,5292,5293,2069,5294,  86,1494,1730, // 2464\n4039, 491,1588, 745, 897,2963, 843,3377,4040,2767,2884,3306,1768, 998,2221,2070, // 2480\n 397,1827,1195,1970,3725,3011,3378, 284,5295,3861,2507,2138,2120,1904,5296,4041, // 2496\n2151,4042,4295,1036,3490,1905, 114,2567,4296, 209,1527,5297,5298,2964,2844,2635, // 2512\n2390,2728,3164, 812,2568,5299,3307,5300,1559, 737,1885,3726,1210, 885,  28,2695, // 2528\n3608,3862,5301,4297,1004,1780,4632,5302, 346,1982,2222,2696,4633,3863,1742, 797, // 2544\n1642,4043,1934,1072,1384,2152, 896,4044,3308,3727,3228,2885,3609,5303,2569,1959, // 2560\n4634,2455,1786,5304,5305,5306,4045,4298,1005,1308,3728,4299,2729,4635,4636,1528, // 2576\n2610, 161,1178,4300,1983, 987,4637,1101,4301, 631,4046,1157,3229,2425,1343,1241, // 2592\n1016,2243,2570, 372, 877,2344,2508,1160, 555,1935, 911,4047,5307, 466,1170, 169, // 2608\n1051,2921,2697,3729,2481,3012,1182,2012,2571,1251,2636,5308, 992,2345,3491,1540, // 2624\n2730,1201,2071,2406,1997,2482,5309,4638, 528,1923,2191,1503,1874,1570,2369,3379, // 2640\n3309,5310, 557,1073,5311,1828,3492,2088,2271,3165,3059,3107, 767,3108,2799,4639, // 2656\n1006,4302,4640,2346,1267,2179,3730,3230, 778,4048,3231,2731,1597,2667,5312,4641, // 2672\n5313,3493,5314,5315,5316,3310,2698,1433,3311, 131,  95,1504,4049, 723,4303,3166, // 2688\n1842,3610,2768,2192,4050,2028,2105,3731,5317,3013,4051,1218,5318,3380,3232,4052, // 2704\n4304,2584, 248,1634,3864, 912,5319,2845,3732,3060,3865, 654,  53,5320,3014,5321, // 2720\n1688,4642, 777,3494,1032,4053,1425,5322, 191, 820,2121,2846, 971,4643, 931,3233, // 2736\n 135, 664, 783,3866,1998, 772,2922,1936,4054,3867,4644,2923,3234, 282,2732, 640, // 2752\n1372,3495,1127, 922, 325,3381,5323,5324, 711,2045,5325,5326,4055,2223,2800,1937, // 2768\n4056,3382,2224,2255,3868,2305,5327,4645,3869,1258,3312,4057,3235,2139,2965,4058, // 2784\n4059,5328,2225, 258,3236,4646, 101,1227,5329,3313,1755,5330,1391,3314,5331,2924, // 2800\n2057, 893,5332,5333,5334,1402,4305,2347,5335,5336,3237,3611,5337,5338, 878,1325, // 2816\n1781,2801,4647, 259,1385,2585, 744,1183,2272,4648,5339,4060,2509,5340, 684,1024, // 2832\n4306,5341, 472,3612,3496,1165,3315,4061,4062, 322,2153, 881, 455,1695,1152,1340, // 2848\n 660, 554,2154,4649,1058,4650,4307, 830,1065,3383,4063,4651,1924,5342,1703,1919, // 2864\n5343, 932,2273, 122,5344,4652, 947, 677,5345,3870,2637, 297,1906,1925,2274,4653, // 2880\n2322,3316,5346,5347,4308,5348,4309,  84,4310, 112, 989,5349, 547,1059,4064, 701, // 2896\n3613,1019,5350,4311,5351,3497, 942, 639, 457,2306,2456, 993,2966, 407, 851, 494, // 2912\n4654,3384, 927,5352,1237,5353,2426,3385, 573,4312, 680, 921,2925,1279,1875, 285, // 2928\n 790,1448,1984, 719,2168,5354,5355,4655,4065,4066,1649,5356,1541, 563,5357,1077, // 2944\n5358,3386,3061,3498, 511,3015,4067,4068,3733,4069,1268,2572,3387,3238,4656,4657, // 2960\n5359, 535,1048,1276,1189,2926,2029,3167,1438,1373,2847,2967,1134,2013,5360,4313, // 2976\n1238,2586,3109,1259,5361, 700,5362,2968,3168,3734,4314,5363,4315,1146,1876,1907, // 2992\n4658,2611,4070, 781,2427, 132,1589, 203, 147, 273,2802,2407, 898,1787,2155,4071, // 3008\n4072,5364,3871,2803,5365,5366,4659,4660,5367,3239,5368,1635,3872, 965,5369,1805, // 3024\n2699,1516,3614,1121,1082,1329,3317,4073,1449,3873,  65,1128,2848,2927,2769,1590, // 3040\n3874,5370,5371,  12,2668,  45, 976,2587,3169,4661, 517,2535,1013,1037,3240,5372, // 3056\n3875,2849,5373,3876,5374,3499,5375,2612, 614,1999,2323,3877,3110,2733,2638,5376, // 3072\n2588,4316, 599,1269,5377,1811,3735,5378,2700,3111, 759,1060, 489,1806,3388,3318, // 3088\n1358,5379,5380,2391,1387,1215,2639,2256, 490,5381,5382,4317,1759,2392,2348,5383, // 3104\n4662,3878,1908,4074,2640,1807,3241,4663,3500,3319,2770,2349, 874,5384,5385,3501, // 3120\n3736,1859,  91,2928,3737,3062,3879,4664,5386,3170,4075,2669,5387,3502,1202,1403, // 3136\n3880,2969,2536,1517,2510,4665,3503,2511,5388,4666,5389,2701,1886,1495,1731,4076, // 3152\n2370,4667,5390,2030,5391,5392,4077,2702,1216, 237,2589,4318,2324,4078,3881,4668, // 3168\n4669,2703,3615,3504, 445,4670,5393,5394,5395,5396,2771,  61,4079,3738,1823,4080, // 3184\n5397, 687,2046, 935, 925, 405,2670, 703,1096,1860,2734,4671,4081,1877,1367,2704, // 3200\n3389, 918,2106,1782,2483, 334,3320,1611,1093,4672, 564,3171,3505,3739,3390, 945, // 3216\n2641,2058,4673,5398,1926, 872,4319,5399,3506,2705,3112, 349,4320,3740,4082,4674, // 3232\n3882,4321,3741,2156,4083,4675,4676,4322,4677,2408,2047, 782,4084, 400, 251,4323, // 3248\n1624,5400,5401, 277,3742, 299,1265, 476,1191,3883,2122,4324,4325,1109, 205,5402, // 3264\n2590,1000,2157,3616,1861,5403,5404,5405,4678,5406,4679,2573, 107,2484,2158,4085, // 3280\n3507,3172,5407,1533, 541,1301, 158, 753,4326,2886,3617,5408,1696, 370,1088,4327, // 3296\n4680,3618, 579, 327, 440, 162,2244, 269,1938,1374,3508, 968,3063,  56,1396,3113, // 3312\n2107,3321,3391,5409,1927,2159,4681,3016,5410,3619,5411,5412,3743,4682,2485,5413, // 3328\n2804,5414,1650,4683,5415,2613,5416,5417,4086,2671,3392,1149,3393,4087,3884,4088, // 3344\n5418,1076,  49,5419, 951,3242,3322,3323, 450,2850, 920,5420,1812,2805,2371,4328, // 3360\n1909,1138,2372,3885,3509,5421,3243,4684,1910,1147,1518,2428,4685,3886,5422,4686, // 3376\n2393,2614, 260,1796,3244,5423,5424,3887,3324, 708,5425,3620,1704,5426,3621,1351, // 3392\n1618,3394,3017,1887, 944,4329,3395,4330,3064,3396,4331,5427,3744, 422, 413,1714, // 3408\n3325, 500,2059,2350,4332,2486,5428,1344,1911, 954,5429,1668,5430,5431,4089,2409, // 3424\n4333,3622,3888,4334,5432,2307,1318,2512,3114, 133,3115,2887,4687, 629,  31,2851, // 3440\n2706,3889,4688, 850, 949,4689,4090,2970,1732,2089,4335,1496,1853,5433,4091, 620, // 3456\n3245, 981,1242,3745,3397,1619,3746,1643,3326,2140,2457,1971,1719,3510,2169,5434, // 3472\n3246,5435,5436,3398,1829,5437,1277,4690,1565,2048,5438,1636,3623,3116,5439, 869, // 3488\n2852, 655,3890,3891,3117,4092,3018,3892,1310,3624,4691,5440,5441,5442,1733, 558, // 3504\n4692,3747, 335,1549,3065,1756,4336,3748,1946,3511,1830,1291,1192, 470,2735,2108, // 3520\n2806, 913,1054,4093,5443,1027,5444,3066,4094,4693, 982,2672,3399,3173,3512,3247, // 3536\n3248,1947,2807,5445, 571,4694,5446,1831,5447,3625,2591,1523,2429,5448,2090, 984, // 3552\n4695,3749,1960,5449,3750, 852, 923,2808,3513,3751, 969,1519, 999,2049,2325,1705, // 3568\n5450,3118, 615,1662, 151, 597,4095,2410,2326,1049, 275,4696,3752,4337, 568,3753, // 3584\n3626,2487,4338,3754,5451,2430,2275, 409,3249,5452,1566,2888,3514,1002, 769,2853, // 3600\n 194,2091,3174,3755,2226,3327,4339, 628,1505,5453,5454,1763,2180,3019,4096, 521, // 3616\n1161,2592,1788,2206,2411,4697,4097,1625,4340,4341, 412,  42,3119, 464,5455,2642, // 3632\n4698,3400,1760,1571,2889,3515,2537,1219,2207,3893,2643,2141,2373,4699,4700,3328, // 3648\n1651,3401,3627,5456,5457,3628,2488,3516,5458,3756,5459,5460,2276,2092, 460,5461, // 3664\n4701,5462,3020, 962, 588,3629, 289,3250,2644,1116,  52,5463,3067,1797,5464,5465, // 3680\n5466,1467,5467,1598,1143,3757,4342,1985,1734,1067,4702,1280,3402, 465,4703,1572, // 3696\n 510,5468,1928,2245,1813,1644,3630,5469,4704,3758,5470,5471,2673,1573,1534,5472, // 3712\n5473, 536,1808,1761,3517,3894,3175,2645,5474,5475,5476,4705,3518,2929,1912,2809, // 3728\n5477,3329,1122, 377,3251,5478, 360,5479,5480,4343,1529, 551,5481,2060,3759,1769, // 3744\n2431,5482,2930,4344,3330,3120,2327,2109,2031,4706,1404, 136,1468,1479, 672,1171, // 3760\n3252,2308, 271,3176,5483,2772,5484,2050, 678,2736, 865,1948,4707,5485,2014,4098, // 3776\n2971,5486,2737,2227,1397,3068,3760,4708,4709,1735,2931,3403,3631,5487,3895, 509, // 3792\n2854,2458,2890,3896,5488,5489,3177,3178,4710,4345,2538,4711,2309,1166,1010, 552, // 3808\n 681,1888,5490,5491,2972,2973,4099,1287,1596,1862,3179, 358, 453, 736, 175, 478, // 3824\n1117, 905,1167,1097,5492,1854,1530,5493,1706,5494,2181,3519,2292,3761,3520,3632, // 3840\n4346,2093,4347,5495,3404,1193,2489,4348,1458,2193,2208,1863,1889,1421,3331,2932, // 3856\n3069,2182,3521, 595,2123,5496,4100,5497,5498,4349,1707,2646, 223,3762,1359, 751, // 3872\n3121, 183,3522,5499,2810,3021, 419,2374, 633, 704,3897,2394, 241,5500,5501,5502, // 3888\n 838,3022,3763,2277,2773,2459,3898,1939,2051,4101,1309,3122,2246,1181,5503,1136, // 3904\n2209,3899,2375,1446,4350,2310,4712,5504,5505,4351,1055,2615, 484,3764,5506,4102, // 3920\n 625,4352,2278,3405,1499,4353,4103,5507,4104,4354,3253,2279,2280,3523,5508,5509, // 3936\n2774, 808,2616,3765,3406,4105,4355,3123,2539, 526,3407,3900,4356, 955,5510,1620, // 3952\n4357,2647,2432,5511,1429,3766,1669,1832, 994, 928,5512,3633,1260,5513,5514,5515, // 3968\n1949,2293, 741,2933,1626,4358,2738,2460, 867,1184, 362,3408,1392,5516,5517,4106, // 3984\n4359,1770,1736,3254,2934,4713,4714,1929,2707,1459,1158,5518,3070,3409,2891,1292, // 4000\n1930,2513,2855,3767,1986,1187,2072,2015,2617,4360,5519,2574,2514,2170,3768,2490, // 4016\n3332,5520,3769,4715,5521,5522, 666,1003,3023,1022,3634,4361,5523,4716,1814,2257, // 4032\n 574,3901,1603, 295,1535, 705,3902,4362, 283, 858, 417,5524,5525,3255,4717,4718, // 4048\n3071,1220,1890,1046,2281,2461,4107,1393,1599, 689,2575, 388,4363,5526,2491, 802, // 4064\n5527,2811,3903,2061,1405,2258,5528,4719,3904,2110,1052,1345,3256,1585,5529, 809, // 4080\n5530,5531,5532, 575,2739,3524, 956,1552,1469,1144,2328,5533,2329,1560,2462,3635, // 4096\n3257,4108, 616,2210,4364,3180,2183,2294,5534,1833,5535,3525,4720,5536,1319,3770, // 4112\n3771,1211,3636,1023,3258,1293,2812,5537,5538,5539,3905, 607,2311,3906, 762,2892, // 4128\n1439,4365,1360,4721,1485,3072,5540,4722,1038,4366,1450,2062,2648,4367,1379,4723, // 4144\n2593,5541,5542,4368,1352,1414,2330,2935,1172,5543,5544,3907,3908,4724,1798,1451, // 4160\n5545,5546,5547,5548,2936,4109,4110,2492,2351, 411,4111,4112,3637,3333,3124,4725, // 4176\n1561,2674,1452,4113,1375,5549,5550,  47,2974, 316,5551,1406,1591,2937,3181,5552, // 4192\n1025,2142,3125,3182, 354,2740, 884,2228,4369,2412, 508,3772, 726,3638, 996,2433, // 4208\n3639, 729,5553, 392,2194,1453,4114,4726,3773,5554,5555,2463,3640,2618,1675,2813, // 4224\n 919,2352,2975,2353,1270,4727,4115,  73,5556,5557, 647,5558,3259,2856,2259,1550, // 4240\n1346,3024,5559,1332, 883,3526,5560,5561,5562,5563,3334,2775,5564,1212, 831,1347, // 4256\n4370,4728,2331,3909,1864,3073, 720,3910,4729,4730,3911,5565,4371,5566,5567,4731, // 4272\n5568,5569,1799,4732,3774,2619,4733,3641,1645,2376,4734,5570,2938, 669,2211,2675, // 4288\n2434,5571,2893,5572,5573,1028,3260,5574,4372,2413,5575,2260,1353,5576,5577,4735, // 4304\n3183, 518,5578,4116,5579,4373,1961,5580,2143,4374,5581,5582,3025,2354,2355,3912, // 4320\n 516,1834,1454,4117,2708,4375,4736,2229,2620,1972,1129,3642,5583,2776,5584,2976, // 4336\n1422, 577,1470,3026,1524,3410,5585,5586, 432,4376,3074,3527,5587,2594,1455,2515, // 4352\n2230,1973,1175,5588,1020,2741,4118,3528,4737,5589,2742,5590,1743,1361,3075,3529, // 4368\n2649,4119,4377,4738,2295, 895, 924,4378,2171, 331,2247,3076, 166,1627,3077,1098, // 4384\n5591,1232,2894,2231,3411,4739, 657, 403,1196,2377, 542,3775,3412,1600,4379,3530, // 4400\n5592,4740,2777,3261, 576, 530,1362,4741,4742,2540,2676,3776,4120,5593, 842,3913, // 4416\n5594,2814,2032,1014,4121, 213,2709,3413, 665, 621,4380,5595,3777,2939,2435,5596, // 4432\n2436,3335,3643,3414,4743,4381,2541,4382,4744,3644,1682,4383,3531,1380,5597, 724, // 4448\n2282, 600,1670,5598,1337,1233,4745,3126,2248,5599,1621,4746,5600, 651,4384,5601, // 4464\n1612,4385,2621,5602,2857,5603,2743,2312,3078,5604, 716,2464,3079, 174,1255,2710, // 4480\n4122,3645, 548,1320,1398, 728,4123,1574,5605,1891,1197,3080,4124,5606,3081,3082, // 4496\n3778,3646,3779, 747,5607, 635,4386,4747,5608,5609,5610,4387,5611,5612,4748,5613, // 4512\n3415,4749,2437, 451,5614,3780,2542,2073,4388,2744,4389,4125,5615,1764,4750,5616, // 4528\n4390, 350,4751,2283,2395,2493,5617,4391,4126,2249,1434,4127, 488,4752, 458,4392, // 4544\n4128,3781, 771,1330,2396,3914,2576,3184,2160,2414,1553,2677,3185,4393,5618,2494, // 4560\n2895,2622,1720,2711,4394,3416,4753,5619,2543,4395,5620,3262,4396,2778,5621,2016, // 4576\n2745,5622,1155,1017,3782,3915,5623,3336,2313, 201,1865,4397,1430,5624,4129,5625, // 4592\n5626,5627,5628,5629,4398,1604,5630, 414,1866, 371,2595,4754,4755,3532,2017,3127, // 4608\n4756,1708, 960,4399, 887, 389,2172,1536,1663,1721,5631,2232,4130,2356,2940,1580, // 4624\n5632,5633,1744,4757,2544,4758,4759,5634,4760,5635,2074,5636,4761,3647,3417,2896, // 4640\n4400,5637,4401,2650,3418,2815, 673,2712,2465, 709,3533,4131,3648,4402,5638,1148, // 4656\n 502, 634,5639,5640,1204,4762,3649,1575,4763,2623,3783,5641,3784,3128, 948,3263, // 4672\n 121,1745,3916,1110,5642,4403,3083,2516,3027,4132,3785,1151,1771,3917,1488,4133, // 4688\n1987,5643,2438,3534,5644,5645,2094,5646,4404,3918,1213,1407,2816, 531,2746,2545, // 4704\n3264,1011,1537,4764,2779,4405,3129,1061,5647,3786,3787,1867,2897,5648,2018, 120, // 4720\n4406,4407,2063,3650,3265,2314,3919,2678,3419,1955,4765,4134,5649,3535,1047,2713, // 4736\n1266,5650,1368,4766,2858, 649,3420,3920,2546,2747,1102,2859,2679,5651,5652,2000, // 4752\n5653,1111,3651,2977,5654,2495,3921,3652,2817,1855,3421,3788,5655,5656,3422,2415, // 4768\n2898,3337,3266,3653,5657,2577,5658,3654,2818,4135,1460, 856,5659,3655,5660,2899, // 4784\n2978,5661,2900,3922,5662,4408, 632,2517, 875,3923,1697,3924,2296,5663,5664,4767, // 4800\n3028,1239, 580,4768,4409,5665, 914, 936,2075,1190,4136,1039,2124,5666,5667,5668, // 4816\n5669,3423,1473,5670,1354,4410,3925,4769,2173,3084,4137, 915,3338,4411,4412,3339, // 4832\n1605,1835,5671,2748, 398,3656,4413,3926,4138, 328,1913,2860,4139,3927,1331,4414, // 4848\n3029, 937,4415,5672,3657,4140,4141,3424,2161,4770,3425, 524, 742, 538,3085,1012, // 4864\n5673,5674,3928,2466,5675, 658,1103, 225,3929,5676,5677,4771,5678,4772,5679,3267, // 4880\n1243,5680,4142, 963,2250,4773,5681,2714,3658,3186,5682,5683,2596,2332,5684,4774, // 4896\n5685,5686,5687,3536, 957,3426,2547,2033,1931,2941,2467, 870,2019,3659,1746,2780, // 4912\n2781,2439,2468,5688,3930,5689,3789,3130,3790,3537,3427,3791,5690,1179,3086,5691, // 4928\n3187,2378,4416,3792,2548,3188,3131,2749,4143,5692,3428,1556,2549,2297, 977,2901, // 4944\n2034,4144,1205,3429,5693,1765,3430,3189,2125,1271, 714,1689,4775,3538,5694,2333, // 4960\n3931, 533,4417,3660,2184, 617,5695,2469,3340,3539,2315,5696,5697,3190,5698,5699, // 4976\n3932,1988, 618, 427,2651,3540,3431,5700,5701,1244,1690,5702,2819,4418,4776,5703, // 4992\n3541,4777,5704,2284,1576, 473,3661,4419,3432, 972,5705,3662,5706,3087,5707,5708, // 5008\n4778,4779,5709,3793,4145,4146,5710, 153,4780, 356,5711,1892,2902,4420,2144, 408, // 5024\n 803,2357,5712,3933,5713,4421,1646,2578,2518,4781,4782,3934,5714,3935,4422,5715, // 5040\n2416,3433, 752,5716,5717,1962,3341,2979,5718, 746,3030,2470,4783,4423,3794, 698, // 5056\n4784,1893,4424,3663,2550,4785,3664,3936,5719,3191,3434,5720,1824,1302,4147,2715, // 5072\n3937,1974,4425,5721,4426,3192, 823,1303,1288,1236,2861,3542,4148,3435, 774,3938, // 5088\n5722,1581,4786,1304,2862,3939,4787,5723,2440,2162,1083,3268,4427,4149,4428, 344, // 5104\n1173, 288,2316, 454,1683,5724,5725,1461,4788,4150,2597,5726,5727,4789, 985, 894, // 5120\n5728,3436,3193,5729,1914,2942,3795,1989,5730,2111,1975,5731,4151,5732,2579,1194, // 5136\n 425,5733,4790,3194,1245,3796,4429,5734,5735,2863,5736, 636,4791,1856,3940, 760, // 5152\n1800,5737,4430,2212,1508,4792,4152,1894,1684,2298,5738,5739,4793,4431,4432,2213, // 5168\n 479,5740,5741, 832,5742,4153,2496,5743,2980,2497,3797, 990,3132, 627,1815,2652, // 5184\n4433,1582,4434,2126,2112,3543,4794,5744, 799,4435,3195,5745,4795,2113,1737,3031, // 5200\n1018, 543, 754,4436,3342,1676,4796,4797,4154,4798,1489,5746,3544,5747,2624,2903, // 5216\n4155,5748,5749,2981,5750,5751,5752,5753,3196,4799,4800,2185,1722,5754,3269,3270, // 5232\n1843,3665,1715, 481, 365,1976,1857,5755,5756,1963,2498,4801,5757,2127,3666,3271, // 5248\n 433,1895,2064,2076,5758, 602,2750,5759,5760,5761,5762,5763,3032,1628,3437,5764, // 5264\n3197,4802,4156,2904,4803,2519,5765,2551,2782,5766,5767,5768,3343,4804,2905,5769, // 5280\n4805,5770,2864,4806,4807,1221,2982,4157,2520,5771,5772,5773,1868,1990,5774,5775, // 5296\n5776,1896,5777,5778,4808,1897,4158, 318,5779,2095,4159,4437,5780,5781, 485,5782, // 5312\n 938,3941, 553,2680, 116,5783,3942,3667,5784,3545,2681,2783,3438,3344,2820,5785, // 5328\n3668,2943,4160,1747,2944,2983,5786,5787, 207,5788,4809,5789,4810,2521,5790,3033, // 5344\n 890,3669,3943,5791,1878,3798,3439,5792,2186,2358,3440,1652,5793,5794,5795, 941, // 5360\n2299, 208,3546,4161,2020, 330,4438,3944,2906,2499,3799,4439,4811,5796,5797,5798, // 5376  //last 512\n//Everything below is of no interest for detection purpose\n2522,1613,4812,5799,3345,3945,2523,5800,4162,5801,1637,4163,2471,4813,3946,5802, // 5392\n2500,3034,3800,5803,5804,2195,4814,5805,2163,5806,5807,5808,5809,5810,5811,5812, // 5408\n5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828, // 5424\n5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844, // 5440\n5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860, // 5456\n5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876, // 5472\n5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892, // 5488\n5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908, // 5504\n5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924, // 5520\n5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940, // 5536\n5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956, // 5552\n5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972, // 5568\n5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988, // 5584\n5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004, // 5600\n6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020, // 5616\n6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036, // 5632\n6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052, // 5648\n6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068, // 5664\n6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084, // 5680\n6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100, // 5696\n6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116, // 5712\n6117,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132, // 5728\n6133,6134,6135,6136,6137,6138,6139,6140,6141,6142,6143,6144,6145,6146,6147,6148, // 5744\n6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164, // 5760\n6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,6180, // 5776\n6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196, // 5792\n6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212, // 5808\n6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,3670,6224,6225,6226,6227, // 5824\n6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243, // 5840\n6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259, // 5856\n6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275, // 5872\n6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,4815,6286,6287,6288,6289,6290, // 5888\n6291,6292,4816,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,6303,6304,6305, // 5904\n6306,6307,6308,6309,6310,6311,4817,4818,6312,6313,6314,6315,6316,6317,6318,4819, // 5920\n6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,6334, // 5936\n6335,6336,6337,4820,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349, // 5952\n6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,6364,6365, // 5968\n6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,6380,6381, // 5984\n6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397, // 6000\n6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,3441,6411,6412, // 6016\n6413,6414,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,4440,6426,6427, // 6032\n6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443, // 6048\n6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,4821,6455,6456,6457,6458, // 6064\n6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,6473,6474, // 6080\n6475,6476,6477,3947,3948,6478,6479,6480,6481,3272,4441,6482,6483,6484,6485,4442, // 6096\n6486,6487,6488,6489,6490,6491,6492,6493,6494,6495,6496,4822,6497,6498,6499,6500, // 6112\n6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516, // 6128\n6517,6518,6519,6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532, // 6144\n6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548, // 6160\n6549,6550,6551,6552,6553,6554,6555,6556,2784,6557,4823,6558,6559,6560,6561,6562, // 6176\n6563,6564,6565,6566,6567,6568,6569,3949,6570,6571,6572,4824,6573,6574,6575,6576, // 6192\n6577,6578,6579,6580,6581,6582,6583,4825,6584,6585,6586,3950,2785,6587,6588,6589, // 6208\n6590,6591,6592,6593,6594,6595,6596,6597,6598,6599,6600,6601,6602,6603,6604,6605, // 6224\n6606,6607,6608,6609,6610,6611,6612,4826,6613,6614,6615,4827,6616,6617,6618,6619, // 6240\n6620,6621,6622,6623,6624,6625,4164,6626,6627,6628,6629,6630,6631,6632,6633,6634, // 6256\n3547,6635,4828,6636,6637,6638,6639,6640,6641,6642,3951,2984,6643,6644,6645,6646, // 6272\n6647,6648,6649,4165,6650,4829,6651,6652,4830,6653,6654,6655,6656,6657,6658,6659, // 6288\n6660,6661,6662,4831,6663,6664,6665,6666,6667,6668,6669,6670,6671,4166,6672,4832, // 6304\n3952,6673,6674,6675,6676,4833,6677,6678,6679,4167,6680,6681,6682,3198,6683,6684, // 6320\n6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,4834,6698,6699, // 6336\n6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715, // 6352\n6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731, // 6368\n6732,6733,6734,4443,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,4444, // 6384\n6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761, // 6400\n6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777, // 6416\n6778,6779,6780,6781,4168,6782,6783,3442,6784,6785,6786,6787,6788,6789,6790,6791, // 6432\n4169,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806, // 6448\n6807,6808,6809,6810,6811,4835,6812,6813,6814,4445,6815,6816,4446,6817,6818,6819, // 6464\n6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835, // 6480\n3548,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,4836,6847,6848,6849, // 6496\n6850,6851,6852,6853,6854,3953,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864, // 6512\n6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,3199,6878,6879, // 6528\n6880,6881,6882,4447,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894, // 6544\n6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,4170,6905,6906,6907,6908,6909, // 6560\n6910,6911,6912,6913,6914,6915,6916,6917,6918,6919,6920,6921,6922,6923,6924,6925, // 6576\n6926,6927,4837,6928,6929,6930,6931,6932,6933,6934,6935,6936,3346,6937,6938,4838, // 6592\n6939,6940,6941,4448,6942,6943,6944,6945,6946,4449,6947,6948,6949,6950,6951,6952, // 6608\n6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,6967,6968, // 6624\n6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,6981,6982,6983,6984, // 6640\n6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,3671,6995,6996,6997,6998,4839, // 6656\n6999,7000,7001,7002,3549,7003,7004,7005,7006,7007,7008,7009,7010,7011,7012,7013, // 6672\n7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,7028,7029, // 6688\n7030,4840,7031,7032,7033,7034,7035,7036,7037,7038,4841,7039,7040,7041,7042,7043, // 6704\n7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,7059, // 6720\n7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,2985,7071,7072,7073,7074, // 6736\n7075,7076,7077,7078,7079,7080,4842,7081,7082,7083,7084,7085,7086,7087,7088,7089, // 6752\n7090,7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105, // 6768\n7106,7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,4450,7119,7120, // 6784\n7121,7122,7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136, // 6800\n7137,7138,7139,7140,7141,7142,7143,4843,7144,7145,7146,7147,7148,7149,7150,7151, // 6816\n7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167, // 6832\n7168,7169,7170,7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183, // 6848\n7184,7185,7186,7187,7188,4171,4172,7189,7190,7191,7192,7193,7194,7195,7196,7197, // 6864\n7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213, // 6880\n7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229, // 6896\n7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245, // 6912\n7246,7247,7248,7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261, // 6928\n7262,7263,7264,7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277, // 6944\n7278,7279,7280,7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293, // 6960\n7294,7295,7296,4844,7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308, // 6976\n7309,7310,7311,7312,7313,7314,7315,7316,4451,7317,7318,7319,7320,7321,7322,7323, // 6992\n7324,7325,7326,7327,7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339, // 7008\n7340,7341,7342,7343,7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,4173,7354, // 7024\n7355,4845,7356,7357,7358,7359,7360,7361,7362,7363,7364,7365,7366,7367,7368,7369, // 7040\n7370,7371,7372,7373,7374,7375,7376,7377,7378,7379,7380,7381,7382,7383,7384,7385, // 7056\n7386,7387,7388,4846,7389,7390,7391,7392,7393,7394,7395,7396,7397,7398,7399,7400, // 7072\n7401,7402,7403,7404,7405,3672,7406,7407,7408,7409,7410,7411,7412,7413,7414,7415, // 7088\n7416,7417,7418,7419,7420,7421,7422,7423,7424,7425,7426,7427,7428,7429,7430,7431, // 7104\n7432,7433,7434,7435,7436,7437,7438,7439,7440,7441,7442,7443,7444,7445,7446,7447, // 7120\n7448,7449,7450,7451,7452,7453,4452,7454,3200,7455,7456,7457,7458,7459,7460,7461, // 7136\n7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,7472,7473,7474,4847,7475,7476, // 7152\n7477,3133,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491, // 7168\n7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,3347,7503,7504,7505,7506, // 7184\n7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,7520,7521,4848, // 7200\n7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,7536,7537, // 7216\n7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,3801,4849,7550,7551, // 7232\n7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567, // 7248\n7568,7569,3035,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582, // 7264\n7583,7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598, // 7280\n7599,7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614, // 7296\n7615,7616,4850,7617,7618,3802,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628, // 7312\n7629,7630,7631,7632,4851,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643, // 7328\n7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659, // 7344\n7660,7661,7662,7663,7664,7665,7666,7667,7668,7669,7670,4453,7671,7672,7673,7674, // 7360\n7675,7676,7677,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690, // 7376\n7691,7692,7693,7694,7695,7696,7697,3443,7698,7699,7700,7701,7702,4454,7703,7704, // 7392\n7705,7706,7707,7708,7709,7710,7711,7712,7713,2472,7714,7715,7716,7717,7718,7719, // 7408\n7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,3954,7732,7733,7734, // 7424\n7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750, // 7440\n3134,7751,7752,4852,7753,7754,7755,4853,7756,7757,7758,7759,7760,4174,7761,7762, // 7456\n7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778, // 7472\n7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794, // 7488\n7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,4854,7806,7807,7808,7809, // 7504\n7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825, // 7520\n4855,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840, // 7536\n7841,7842,7843,7844,7845,7846,7847,3955,7848,7849,7850,7851,7852,7853,7854,7855, // 7552\n7856,7857,7858,7859,7860,3444,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870, // 7568\n7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886, // 7584\n7887,7888,7889,7890,7891,4175,7892,7893,7894,7895,7896,4856,4857,7897,7898,7899, // 7600\n7900,2598,7901,7902,7903,7904,7905,7906,7907,7908,4455,7909,7910,7911,7912,7913, // 7616\n7914,3201,7915,7916,7917,7918,7919,7920,7921,4858,7922,7923,7924,7925,7926,7927, // 7632\n7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943, // 7648\n7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959, // 7664\n7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975, // 7680\n7976,7977,7978,7979,7980,7981,4859,7982,7983,7984,7985,7986,7987,7988,7989,7990, // 7696\n7991,7992,7993,7994,7995,7996,4860,7997,7998,7999,8000,8001,8002,8003,8004,8005, // 7712\n8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,4176,8017,8018,8019,8020, // 7728\n8021,8022,8023,4861,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035, // 7744\n8036,4862,4456,8037,8038,8039,8040,4863,8041,8042,8043,8044,8045,8046,8047,8048, // 7760\n8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064, // 7776\n8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080, // 7792\n8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096, // 7808\n8097,8098,8099,4864,4177,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110, // 7824\n8111,8112,8113,8114,8115,8116,8117,8118,8119,8120,4178,8121,8122,8123,8124,8125, // 7840\n8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141, // 7856\n8142,8143,8144,8145,4865,4866,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155, // 7872\n8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,4179,8166,8167,8168,8169,8170, // 7888\n8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,4457,8182,8183,8184,8185, // 7904\n8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201, // 7920\n8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217, // 7936\n8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233, // 7952\n8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249, // 7968\n8250,8251,8252,8253,8254,8255,8256,3445,8257,8258,8259,8260,8261,8262,4458,8263, // 7984\n8264,8265,8266,8267,8268,8269,8270,8271,8272,4459,8273,8274,8275,8276,3550,8277, // 8000\n8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,4460,8290,8291,8292, // 8016\n8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,4867, // 8032\n8308,8309,8310,8311,8312,3551,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322, // 8048\n8323,8324,8325,8326,4868,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337, // 8064\n8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353, // 8080\n8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,4869,4461,8364,8365,8366,8367, // 8096\n8368,8369,8370,4870,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382, // 8112\n8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398, // 8128\n8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,4871,8411,8412,8413, // 8144\n8414,8415,8416,8417,8418,8419,8420,8421,8422,4462,8423,8424,8425,8426,8427,8428, // 8160\n8429,8430,8431,8432,8433,2986,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443, // 8176\n8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459, // 8192\n8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475, // 8208\n8476,8477,8478,4180,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490, // 8224\n8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506, // 8240\n8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522, // 8256\n8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538, // 8272\n8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554, // 8288\n8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,4872,8565,8566,8567,8568,8569, // 8304\n8570,8571,8572,8573,4873,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584, // 8320\n8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600, // 8336\n8601,8602,8603,8604,8605,3803,8606,8607,8608,8609,8610,8611,8612,8613,4874,3804, // 8352\n8614,8615,8616,8617,8618,8619,8620,8621,3956,8622,8623,8624,8625,8626,8627,8628, // 8368\n8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,2865,8639,8640,8641,8642,8643, // 8384\n8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,4463,8657,8658, // 8400\n8659,4875,4876,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672, // 8416\n8673,8674,8675,8676,8677,8678,8679,8680,8681,4464,8682,8683,8684,8685,8686,8687, // 8432\n8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703, // 8448\n8704,8705,8706,8707,8708,8709,2261,8710,8711,8712,8713,8714,8715,8716,8717,8718, // 8464\n8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,4181, // 8480\n8734,8735,8736,8737,8738,8739,8740,8741,8742,8743,8744,8745,8746,8747,8748,8749, // 8496\n8750,8751,8752,8753,8754,8755,8756,8757,8758,8759,8760,8761,8762,8763,4877,8764, // 8512\n8765,8766,8767,8768,8769,8770,8771,8772,8773,8774,8775,8776,8777,8778,8779,8780, // 8528\n8781,8782,8783,8784,8785,8786,8787,8788,4878,8789,4879,8790,8791,8792,4880,8793, // 8544\n8794,8795,8796,8797,8798,8799,8800,8801,4881,8802,8803,8804,8805,8806,8807,8808, // 8560\n8809,8810,8811,8812,8813,8814,8815,3957,8816,8817,8818,8819,8820,8821,8822,8823, // 8576\n8824,8825,8826,8827,8828,8829,8830,8831,8832,8833,8834,8835,8836,8837,8838,8839, // 8592\n8840,8841,8842,8843,8844,8845,8846,8847,4882,8848,8849,8850,8851,8852,8853,8854, // 8608\n8855,8856,8857,8858,8859,8860,8861,8862,8863,8864,8865,8866,8867,8868,8869,8870, // 8624\n8871,8872,8873,8874,8875,8876,8877,8878,8879,8880,8881,8882,8883,8884,3202,8885, // 8640\n8886,8887,8888,8889,8890,8891,8892,8893,8894,8895,8896,8897,8898,8899,8900,8901, // 8656\n8902,8903,8904,8905,8906,8907,8908,8909,8910,8911,8912,8913,8914,8915,8916,8917, // 8672\n8918,8919,8920,8921,8922,8923,8924,4465,8925,8926,8927,8928,8929,8930,8931,8932, // 8688\n4883,8933,8934,8935,8936,8937,8938,8939,8940,8941,8942,8943,2214,8944,8945,8946, // 8704\n8947,8948,8949,8950,8951,8952,8953,8954,8955,8956,8957,8958,8959,8960,8961,8962, // 8720\n8963,8964,8965,4884,8966,8967,8968,8969,8970,8971,8972,8973,8974,8975,8976,8977, // 8736\n8978,8979,8980,8981,8982,8983,8984,8985,8986,8987,8988,8989,8990,8991,8992,4885, // 8752\n8993,8994,8995,8996,8997,8998,8999,9000,9001,9002,9003,9004,9005,9006,9007,9008, // 8768\n9009,9010,9011,9012,9013,9014,9015,9016,9017,9018,9019,9020,9021,4182,9022,9023, // 8784\n9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9036,9037,9038,9039, // 8800\n9040,9041,9042,9043,9044,9045,9046,9047,9048,9049,9050,9051,9052,9053,9054,9055, // 8816\n9056,9057,9058,9059,9060,9061,9062,9063,4886,9064,9065,9066,9067,9068,9069,4887, // 8832\n9070,9071,9072,9073,9074,9075,9076,9077,9078,9079,9080,9081,9082,9083,9084,9085, // 8848\n9086,9087,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,9100,9101, // 8864\n9102,9103,9104,9105,9106,9107,9108,9109,9110,9111,9112,9113,9114,9115,9116,9117, // 8880\n9118,9119,9120,9121,9122,9123,9124,9125,9126,9127,9128,9129,9130,9131,9132,9133, // 8896\n9134,9135,9136,9137,9138,9139,9140,9141,3958,9142,9143,9144,9145,9146,9147,9148, // 8912\n9149,9150,9151,4888,9152,9153,9154,9155,9156,9157,9158,9159,9160,9161,9162,9163, // 8928\n9164,9165,9166,9167,9168,9169,9170,9171,9172,9173,9174,9175,4889,9176,9177,9178, // 8944\n9179,9180,9181,9182,9183,9184,9185,9186,9187,9188,9189,9190,9191,9192,9193,9194, // 8960\n9195,9196,9197,9198,9199,9200,9201,9202,9203,4890,9204,9205,9206,9207,9208,9209, // 8976\n9210,9211,9212,9213,9214,9215,9216,9217,9218,9219,9220,9221,9222,4466,9223,9224, // 8992\n9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240, // 9008\n9241,9242,9243,9244,9245,4891,9246,9247,9248,9249,9250,9251,9252,9253,9254,9255, // 9024\n9256,9257,4892,9258,9259,9260,9261,4893,4894,9262,9263,9264,9265,9266,9267,9268, // 9040\n9269,9270,9271,9272,9273,4467,9274,9275,9276,9277,9278,9279,9280,9281,9282,9283, // 9056\n9284,9285,3673,9286,9287,9288,9289,9290,9291,9292,9293,9294,9295,9296,9297,9298, // 9072\n9299,9300,9301,9302,9303,9304,9305,9306,9307,9308,9309,9310,9311,9312,9313,9314, // 9088\n9315,9316,9317,9318,9319,9320,9321,9322,4895,9323,9324,9325,9326,9327,9328,9329, // 9104\n9330,9331,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345, // 9120\n9346,9347,4468,9348,9349,9350,9351,9352,9353,9354,9355,9356,9357,9358,9359,9360, // 9136\n9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9372,9373,4896,9374,4469, // 9152\n9375,9376,9377,9378,9379,4897,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389, // 9168\n9390,9391,9392,9393,9394,9395,9396,9397,9398,9399,9400,9401,9402,9403,9404,9405, // 9184\n9406,4470,9407,2751,9408,9409,3674,3552,9410,9411,9412,9413,9414,9415,9416,9417, // 9200\n9418,9419,9420,9421,4898,9422,9423,9424,9425,9426,9427,9428,9429,3959,9430,9431, // 9216\n9432,9433,9434,9435,9436,4471,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446, // 9232\n9447,9448,9449,9450,3348,9451,9452,9453,9454,9455,9456,9457,9458,9459,9460,9461, // 9248\n9462,9463,9464,9465,9466,9467,9468,9469,9470,9471,9472,4899,9473,9474,9475,9476, // 9264\n9477,4900,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,3349,9489,9490, // 9280\n9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506, // 9296\n9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,4901,9521, // 9312\n9522,9523,9524,9525,9526,4902,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536, // 9328\n9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,9548,9549,9550,9551,9552, // 9344\n9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568, // 9360\n9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584, // 9376\n3805,9585,9586,9587,9588,9589,9590,9591,9592,9593,9594,9595,9596,9597,9598,9599, // 9392\n9600,9601,9602,4903,9603,9604,9605,9606,9607,4904,9608,9609,9610,9611,9612,9613, // 9408\n9614,4905,9615,9616,9617,9618,9619,9620,9621,9622,9623,9624,9625,9626,9627,9628, // 9424\n9629,9630,9631,9632,4906,9633,9634,9635,9636,9637,9638,9639,9640,9641,9642,9643, // 9440\n4907,9644,9645,9646,9647,9648,9649,9650,9651,9652,9653,9654,9655,9656,9657,9658, // 9456\n9659,9660,9661,9662,9663,9664,9665,9666,9667,9668,9669,9670,9671,9672,4183,9673, // 9472\n9674,9675,9676,9677,4908,9678,9679,9680,9681,4909,9682,9683,9684,9685,9686,9687, // 9488\n9688,9689,9690,4910,9691,9692,9693,3675,9694,9695,9696,2945,9697,9698,9699,9700, // 9504\n9701,9702,9703,9704,9705,4911,9706,9707,9708,9709,9710,9711,9712,9713,9714,9715, // 9520\n9716,9717,9718,9719,9720,9721,9722,9723,9724,9725,9726,9727,9728,9729,9730,9731, // 9536\n9732,9733,9734,9735,4912,9736,9737,9738,9739,9740,4913,9741,9742,9743,9744,9745, // 9552\n9746,9747,9748,9749,9750,9751,9752,9753,9754,9755,9756,9757,9758,4914,9759,9760, // 9568\n9761,9762,9763,9764,9765,9766,9767,9768,9769,9770,9771,9772,9773,9774,9775,9776, // 9584\n9777,9778,9779,9780,9781,9782,4915,9783,9784,9785,9786,9787,9788,9789,9790,9791, // 9600\n9792,9793,4916,9794,9795,9796,9797,9798,9799,9800,9801,9802,9803,9804,9805,9806, // 9616\n9807,9808,9809,9810,9811,9812,9813,9814,9815,9816,9817,9818,9819,9820,9821,9822, // 9632\n9823,9824,9825,9826,9827,9828,9829,9830,9831,9832,9833,9834,9835,9836,9837,9838, // 9648\n9839,9840,9841,9842,9843,9844,9845,9846,9847,9848,9849,9850,9851,9852,9853,9854, // 9664\n9855,9856,9857,9858,9859,9860,9861,9862,9863,9864,9865,9866,9867,9868,4917,9869, // 9680\n9870,9871,9872,9873,9874,9875,9876,9877,9878,9879,9880,9881,9882,9883,9884,9885, // 9696\n9886,9887,9888,9889,9890,9891,9892,4472,9893,9894,9895,9896,9897,3806,9898,9899, // 9712\n9900,9901,9902,9903,9904,9905,9906,9907,9908,9909,9910,9911,9912,9913,9914,4918, // 9728\n9915,9916,9917,4919,9918,9919,9920,9921,4184,9922,9923,9924,9925,9926,9927,9928, // 9744\n9929,9930,9931,9932,9933,9934,9935,9936,9937,9938,9939,9940,9941,9942,9943,9944, // 9760\n9945,9946,4920,9947,9948,9949,9950,9951,9952,9953,9954,9955,4185,9956,9957,9958, // 9776\n9959,9960,9961,9962,9963,9964,9965,4921,9966,9967,9968,4473,9969,9970,9971,9972, // 9792\n9973,9974,9975,9976,9977,4474,9978,9979,9980,9981,9982,9983,9984,9985,9986,9987, // 9808\n9988,9989,9990,9991,9992,9993,9994,9995,9996,9997,9998,9999,10000,10001,10002,10003, // 9824\n10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019, // 9840\n10020,10021,4922,10022,4923,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033, // 9856\n10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,4924, // 9872\n10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064, // 9888\n10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080, // 9904\n10081,10082,10083,10084,10085,10086,10087,4475,10088,10089,10090,10091,10092,10093,10094,10095, // 9920\n10096,10097,4476,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110, // 9936\n10111,2174,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125, // 9952\n10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,3807, // 9968\n4186,4925,10141,10142,10143,10144,10145,10146,10147,4477,4187,10148,10149,10150,10151,10152, // 9984\n10153,4188,10154,10155,10156,10157,10158,10159,10160,10161,4926,10162,10163,10164,10165,10166, //10000\n10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182, //10016\n10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,3203,10193,10194,10195,10196,10197, //10032\n10198,10199,10200,4478,10201,10202,10203,10204,4479,10205,10206,10207,10208,10209,10210,10211, //10048\n10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227, //10064\n10228,10229,10230,10231,10232,10233,10234,4927,10235,10236,10237,10238,10239,10240,10241,10242, //10080\n10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258, //10096\n10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,4480, //10112\n4928,4929,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287, //10128\n10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303, //10144\n10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319, //10160\n10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,4930, //10176\n10335,10336,10337,10338,10339,10340,10341,10342,4931,10343,10344,10345,10346,10347,10348,10349, //10192\n10350,10351,10352,10353,10354,10355,3088,10356,2786,10357,10358,10359,10360,4189,10361,10362, //10208\n10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,4932,10376,10377, //10224\n10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,4933, //10240\n10393,10394,10395,4934,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407, //10256\n10408,10409,10410,10411,10412,3446,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422, //10272\n10423,4935,10424,10425,10426,10427,10428,10429,10430,4936,10431,10432,10433,10434,10435,10436, //10288\n10437,10438,10439,10440,10441,10442,10443,4937,10444,10445,10446,10447,4481,10448,10449,10450, //10304\n10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466, //10320\n10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482, //10336\n10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10498, //10352\n10499,10500,10501,10502,10503,10504,10505,4938,10506,10507,10508,10509,10510,2552,10511,10512, //10368\n10513,10514,10515,10516,3447,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527, //10384\n10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543, //10400\n4482,10544,4939,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554,10555,10556,10557, //10416\n10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,3676,4483,10568,10569,10570,10571, //10432\n10572,3448,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586, //10448\n10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602, //10464\n10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613,10614,10615,10616,10617,10618, //10480\n10619,10620,10621,10622,10623,10624,10625,10626,10627,4484,10628,10629,10630,10631,10632,4940, //10496\n10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648, //10512\n10649,10650,10651,10652,10653,10654,10655,10656,4941,10657,10658,10659,2599,10660,10661,10662, //10528\n10663,10664,10665,10666,3089,10667,10668,10669,10670,10671,10672,10673,10674,10675,10676,10677, //10544\n10678,10679,10680,4942,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692, //10560\n10693,10694,10695,10696,10697,4485,10698,10699,10700,10701,10702,10703,10704,4943,10705,3677, //10576\n10706,10707,10708,10709,10710,10711,10712,4944,10713,10714,10715,10716,10717,10718,10719,10720, //10592\n10721,10722,10723,10724,10725,10726,10727,10728,4945,10729,10730,10731,10732,10733,10734,10735, //10608\n10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751, //10624\n10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,4946,10762,10763,10764,10765,10766, //10640\n10767,4947,4948,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780, //10656\n10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793,10794,10795,10796, //10672\n10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812, //10688\n10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823,10824,10825,10826,10827,10828, //10704\n10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844, //10720\n10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10856,10857,10858,10859,10860, //10736\n10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876, //10752\n10877,10878,4486,10879,10880,10881,10882,10883,10884,10885,4949,10886,10887,10888,10889,10890, //10768\n10891,10892,10893,10894,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10905,10906, //10784\n10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,4487,10920,10921, //10800\n10922,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,4950,10933,10934,10935,10936, //10816\n10937,10938,10939,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,4488,10950,10951, //10832\n10952,10953,10954,10955,10956,10957,10958,10959,4190,10960,10961,10962,10963,10964,10965,10966, //10848\n10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,10981,10982, //10864\n10983,10984,10985,10986,10987,10988,10989,10990,10991,10992,10993,10994,10995,10996,10997,10998, //10880\n10999,11000,11001,11002,11003,11004,11005,11006,3960,11007,11008,11009,11010,11011,11012,11013, //10896\n11014,11015,11016,11017,11018,11019,11020,11021,11022,11023,11024,11025,11026,11027,11028,11029, //10912\n11030,11031,11032,4951,11033,11034,11035,11036,11037,11038,11039,11040,11041,11042,11043,11044, //10928\n11045,11046,11047,4489,11048,11049,11050,11051,4952,11052,11053,11054,11055,11056,11057,11058, //10944\n4953,11059,11060,11061,11062,11063,11064,11065,11066,11067,11068,11069,11070,11071,4954,11072, //10960\n11073,11074,11075,11076,11077,11078,11079,11080,11081,11082,11083,11084,11085,11086,11087,11088, //10976\n11089,11090,11091,11092,11093,11094,11095,11096,11097,11098,11099,11100,11101,11102,11103,11104, //10992\n11105,11106,11107,11108,11109,11110,11111,11112,11113,11114,11115,3808,11116,11117,11118,11119, //11008\n11120,11121,11122,11123,11124,11125,11126,11127,11128,11129,11130,11131,11132,11133,11134,4955, //11024\n11135,11136,11137,11138,11139,11140,11141,11142,11143,11144,11145,11146,11147,11148,11149,11150, //11040\n11151,11152,11153,11154,11155,11156,11157,11158,11159,11160,11161,4956,11162,11163,11164,11165, //11056\n11166,11167,11168,11169,11170,11171,11172,11173,11174,11175,11176,11177,11178,11179,11180,4957, //11072\n11181,11182,11183,11184,11185,11186,4958,11187,11188,11189,11190,11191,11192,11193,11194,11195, //11088\n11196,11197,11198,11199,11200,3678,11201,11202,11203,11204,11205,11206,4191,11207,11208,11209, //11104\n11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225, //11120\n11226,11227,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11240,11241, //11136\n11242,11243,11244,11245,11246,11247,11248,11249,11250,11251,4959,11252,11253,11254,11255,11256, //11152\n11257,11258,11259,11260,11261,11262,11263,11264,11265,11266,11267,11268,11269,11270,11271,11272, //11168\n11273,11274,11275,11276,11277,11278,11279,11280,11281,11282,11283,11284,11285,11286,11287,11288, //11184\n11289,11290,11291,11292,11293,11294,11295,11296,11297,11298,11299,11300,11301,11302,11303,11304, //11200\n11305,11306,11307,11308,11309,11310,11311,11312,11313,11314,3679,11315,11316,11317,11318,4490, //11216\n11319,11320,11321,11322,11323,11324,11325,11326,11327,11328,11329,11330,11331,11332,11333,11334, //11232\n11335,11336,11337,11338,11339,11340,11341,11342,11343,11344,11345,11346,11347,4960,11348,11349, //11248\n11350,11351,11352,11353,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365, //11264\n11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,3961,4961,11378,11379, //11280\n11380,11381,11382,11383,11384,11385,11386,11387,11388,11389,11390,11391,11392,11393,11394,11395, //11296\n11396,11397,4192,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410, //11312\n11411,4962,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425, //11328\n11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441, //11344\n11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457, //11360\n11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,4963,11470,11471,4491, //11376\n11472,11473,11474,11475,4964,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486, //11392\n11487,11488,11489,11490,11491,11492,4965,11493,11494,11495,11496,11497,11498,11499,11500,11501, //11408\n11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514,11515,11516,11517, //11424\n11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,3962,11530,11531,11532, //11440\n11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543,11544,11545,11546,11547,11548, //11456\n11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564, //11472\n4193,4194,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578, //11488\n11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,4966,4195,11592, //11504\n11593,11594,11595,11596,11597,11598,11599,11600,11601,11602,11603,11604,3090,11605,11606,11607, //11520\n11608,11609,11610,4967,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622, //11536\n11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638, //11552\n11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654, //11568\n11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670, //11584\n11671,11672,11673,11674,4968,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685, //11600\n11686,11687,11688,11689,11690,11691,11692,11693,3809,11694,11695,11696,11697,11698,11699,11700, //11616\n11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716, //11632\n11717,11718,3553,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,4969, //11648\n11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,4492,11741,11742,11743,11744,11745, //11664\n11746,11747,11748,11749,11750,11751,11752,4970,11753,11754,11755,11756,11757,11758,11759,11760, //11680\n11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776, //11696\n11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,4971,11791, //11712\n11792,11793,11794,11795,11796,11797,4972,11798,11799,11800,11801,11802,11803,11804,11805,11806, //11728\n11807,11808,11809,11810,4973,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821, //11744\n11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,3680,3810,11835, //11760\n11836,4974,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850, //11776\n11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866, //11792\n11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882, //11808\n11883,11884,4493,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897, //11824\n11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913, //11840\n11914,11915,4975,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928, //11856\n11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944, //11872\n11945,11946,11947,11948,11949,4976,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959, //11888\n11960,11961,11962,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,11975, //11904\n11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,4196,11988,11989,11990, //11920\n11991,11992,4977,11993,11994,11995,11996,11997,11998,11999,12000,12001,12002,12003,12004,12005, //11936\n12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021, //11952\n12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037, //11968\n12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051,12052,12053, //11984\n12054,12055,12056,12057,12058,12059,12060,12061,4978,12062,12063,12064,12065,12066,12067,12068, //12000\n12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084, //12016\n12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100, //12032\n12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116, //12048\n12117,12118,12119,12120,12121,12122,12123,4979,12124,12125,12126,12127,12128,4197,12129,12130, //12064\n12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146, //12080\n12147,12148,12149,12150,12151,12152,12153,12154,4980,12155,12156,12157,12158,12159,12160,4494, //12096\n12161,12162,12163,12164,3811,12165,12166,12167,12168,12169,4495,12170,12171,4496,12172,12173, //12112\n12174,12175,12176,3812,12177,12178,12179,12180,12181,12182,12183,12184,12185,12186,12187,12188, //12128\n12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204, //12144\n12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220, //12160\n12221,4981,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234,12235, //12176\n4982,12236,12237,12238,12239,12240,12241,12242,12243,12244,12245,4983,12246,12247,12248,12249, //12192\n4984,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263,12264, //12208\n4985,12265,4497,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278, //12224\n12279,12280,12281,12282,12283,12284,12285,12286,12287,4986,12288,12289,12290,12291,12292,12293, //12240\n12294,12295,12296,2473,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308, //12256\n12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,3963,12320,12321,12322,12323, //12272\n12324,12325,12326,12327,12328,12329,12330,12331,12332,4987,12333,12334,12335,12336,12337,12338, //12288\n12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350,12351,12352,12353,12354, //12304\n12355,12356,12357,12358,12359,3964,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369, //12320\n12370,3965,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384, //12336\n12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400, //12352\n12401,12402,12403,12404,12405,12406,12407,12408,4988,12409,12410,12411,12412,12413,12414,12415, //12368\n12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431, //12384\n12432,12433,12434,12435,12436,12437,12438,3554,12439,12440,12441,12442,12443,12444,12445,12446, //12400\n12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462, //12416\n12463,12464,4989,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477, //12432\n12478,12479,12480,4990,12481,12482,12483,12484,12485,12486,12487,12488,12489,4498,12490,12491, //12448\n12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507, //12464\n12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523, //12480\n12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539, //12496\n12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,4991,12552,12553,12554, //12512\n12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570, //12528\n12571,12572,12573,12574,12575,12576,12577,12578,3036,12579,12580,12581,12582,12583,3966,12584, //12544\n12585,12586,12587,12588,12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600, //12560\n12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616, //12576\n12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632, //12592\n12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,4499,12647, //12608\n12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663, //12624\n12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679, //12640\n12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695, //12656\n12696,12697,12698,4992,12699,12700,12701,12702,12703,12704,12705,12706,12707,12708,12709,12710, //12672\n12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726, //12688\n12727,12728,12729,12730,12731,12732,12733,12734,12735,12736,12737,12738,12739,12740,12741,12742, //12704\n12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758, //12720\n12759,12760,12761,12762,12763,12764,12765,12766,12767,12768,12769,12770,12771,12772,12773,12774, //12736\n12775,12776,12777,12778,4993,2175,12779,12780,12781,12782,12783,12784,12785,12786,4500,12787, //12752\n12788,12789,12790,12791,12792,12793,12794,12795,12796,12797,12798,12799,12800,12801,12802,12803, //12768\n12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819, //12784\n12820,12821,12822,12823,12824,12825,12826,4198,3967,12827,12828,12829,12830,12831,12832,12833, //12800\n12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849, //12816\n12850,12851,12852,12853,12854,12855,12856,12857,12858,12859,12860,12861,4199,12862,12863,12864, //12832\n12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880, //12848\n12881,12882,12883,12884,12885,12886,12887,4501,12888,12889,12890,12891,12892,12893,12894,12895, //12864\n12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911, //12880\n12912,4994,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,12924,12925,12926, //12896\n12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942, //12912\n12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,1772,12957, //12928\n12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973, //12944\n12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989, //12960\n12990,12991,12992,12993,12994,12995,12996,12997,4502,12998,4503,12999,13000,13001,13002,13003, //12976\n4504,13004,13005,13006,13007,13008,13009,13010,13011,13012,13013,13014,13015,13016,13017,13018, //12992\n13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,3449,13030,13031,13032,13033, //13008\n13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049, //13024\n13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065, //13040\n13066,13067,13068,13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081, //13056\n13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096,13097, //13072\n13098,13099,13100,13101,13102,13103,13104,13105,13106,13107,13108,13109,13110,13111,13112,13113, //13088\n13114,13115,13116,13117,13118,3968,13119,4995,13120,13121,13122,13123,13124,13125,13126,13127, //13104\n4505,13128,13129,13130,13131,13132,13133,13134,4996,4506,13135,13136,13137,13138,13139,4997, //13120\n13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155, //13136\n13156,13157,13158,13159,4998,13160,13161,13162,13163,13164,13165,13166,13167,13168,13169,13170, //13152\n13171,13172,13173,13174,13175,13176,4999,13177,13178,13179,13180,13181,13182,13183,13184,13185, //13168\n13186,13187,13188,13189,13190,13191,13192,13193,13194,13195,13196,13197,13198,13199,13200,13201, //13184\n13202,13203,13204,13205,13206,5000,13207,13208,13209,13210,13211,13212,13213,13214,13215,13216, //13200\n13217,13218,13219,13220,13221,13222,13223,13224,13225,13226,13227,4200,5001,13228,13229,13230, //13216\n13231,13232,13233,13234,13235,13236,13237,13238,13239,13240,3969,13241,13242,13243,13244,3970, //13232\n13245,13246,13247,13248,13249,13250,13251,13252,13253,13254,13255,13256,13257,13258,13259,13260, //13248\n13261,13262,13263,13264,13265,13266,13267,13268,3450,13269,13270,13271,13272,13273,13274,13275, //13264\n13276,5002,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290, //13280\n13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,3813,13303,13304,13305, //13296\n13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321, //13312\n13322,13323,13324,13325,13326,13327,13328,4507,13329,13330,13331,13332,13333,13334,13335,13336, //13328\n13337,13338,13339,13340,13341,5003,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351, //13344\n13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367, //13360\n5004,13368,13369,13370,13371,13372,13373,13374,13375,13376,13377,13378,13379,13380,13381,13382, //13376\n13383,13384,13385,13386,13387,13388,13389,13390,13391,13392,13393,13394,13395,13396,13397,13398, //13392\n13399,13400,13401,13402,13403,13404,13405,13406,13407,13408,13409,13410,13411,13412,13413,13414, //13408\n13415,13416,13417,13418,13419,13420,13421,13422,13423,13424,13425,13426,13427,13428,13429,13430, //13424\n13431,13432,4508,13433,13434,13435,4201,13436,13437,13438,13439,13440,13441,13442,13443,13444, //13440\n13445,13446,13447,13448,13449,13450,13451,13452,13453,13454,13455,13456,13457,5005,13458,13459, //13456\n13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,13470,4509,13471,13472,13473,13474, //13472\n13475,13476,13477,13478,13479,13480,13481,13482,13483,13484,13485,13486,13487,13488,13489,13490, //13488\n13491,13492,13493,13494,13495,13496,13497,13498,13499,13500,13501,13502,13503,13504,13505,13506, //13504\n13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522, //13520\n13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538, //13536\n13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554, //13552\n13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570, //13568\n13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586, //13584\n13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602, //13600\n13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618, //13616\n13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634, //13632\n13635,13636,13637,13638,13639,13640,13641,13642,5006,13643,13644,13645,13646,13647,13648,13649, //13648\n13650,13651,5007,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664, //13664\n13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680, //13680\n13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696, //13696\n13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712, //13712\n13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728, //13728\n13729,13730,13731,13732,13733,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744, //13744\n13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760, //13760\n13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,3273,13775, //13776\n13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791, //13792\n13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807, //13808\n13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823, //13824\n13824,13825,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839, //13840\n13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855, //13856\n13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871, //13872\n13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887, //13888\n13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903, //13904\n13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919, //13920\n13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935, //13936\n13936,13937,13938,13939,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951, //13952\n13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967, //13968\n13968,13969,13970,13971,13972]; //13973\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar stringSlice = uncurryThis(''.slice);\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? call(replacer, searchValue, O, replaceValue)\n        : call(nativeReplace, toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue == 'string' &&\n        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&\n        stringIndexOf(replaceValue, '$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        push(results, result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = concat([matched], captures, position, S);\n          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);\n          var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + stringSlice(S, nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Windows-1255 language model\n// Character Mapping Table:\nexports.win1255_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 69, 91, 79, 80, 92, 89, 97, 90, 68,111,112, 82, 73, 95, 85,  // 40\n 78,121, 86, 71, 67,102,107, 84,114,103,115,253,253,253,253,253,  // 50\n253, 50, 74, 60, 61, 42, 76, 70, 64, 53,105, 93, 56, 65, 54, 49,  // 60\n 66,110, 51, 43, 44, 63, 81, 77, 98, 75,108,253,253,253,253,253,  // 70\n124,202,203,204,205, 40, 58,206,207,208,209,210,211,212,213,214,\n215, 83, 52, 47, 46, 72, 32, 94,216,113,217,109,218,219,220,221,\n 34,116,222,118,100,223,224,117,119,104,125,225,226, 87, 99,227,\n106,122,123,228, 55,229,230,101,231,232,120,233, 48, 39, 57,234,\n 30, 59, 41, 88, 33, 37, 36, 31, 29, 35,235, 62, 28,236,126,237,\n238, 38, 45,239,240,241,242,243,127,244,245,246,247,248,249,250,\n  9,  8, 20, 16,  3,  2, 24, 14, 22,  1, 25, 15,  4, 11,  6, 23,\n 12, 19, 13, 26, 18, 27, 21, 17,  7, 10,  5,251,252,128, 96,253\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 98.4004%\n// first 1024 sequences: 1.5981%\n// rest  sequences:      0.087%\n// negative sequences:   0.0015%\nexports.HebrewLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,\n3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,\n1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,\n1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,\n1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,\n1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,\n1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,\n0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,\n0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,\n1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,\n0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,\n0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,\n0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,\n0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,\n0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,\n0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,\n0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,\n0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,\n0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,\n3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,\n0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,\n0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,\n0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,\n1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,\n0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\n3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,\n0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,\n0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,\n0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,\n0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,\n2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,\n0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\n3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,\n0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,\n1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,\n0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,\n2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,\n1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,\n2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,\n1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,\n2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,\n0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,\n1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,\n0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0\n];\n\nexports.Win1255HebrewModel = {\n    \"charToOrderMap\"        : exports.win1255_CharToOrderMap,\n    \"precedenceMatrix\"      : exports.HebrewLangModel,\n    \"mTypicalPositiveRatio\" : 0.984004,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"windows-1255\"\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n var CodingStateMachine = require('./codingstatemachine');\n var MultiByteCharSetProber = require('./mbcharsetprober');\n var EUCTWDistributionAnalysis = require('./chardistribution').EUCTWDistributionAnalysis;\n var EUCTWSMModel = require('./mbcssm/euctw');\n\nfunction EUCTWProber() {\n    MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(EUCTWSMModel);\n        self._mDistributionAnalyzer = new EUCTWDistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"EUC-TW\";\n    }\n\n    init();\n}\nEUCTWProber.prototype = new MultiByteCharSetProber();\n\nmodule.exports = EUCTWProber\n","var consts = require('../constants');\n\nvar UTF8_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07  //allow 0x00 as a legal value\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    1,1,1,1,1,1,1,1,  // 40 - 47\n    1,1,1,1,1,1,1,1,  // 48 - 4f\n    1,1,1,1,1,1,1,1,  // 50 - 57\n    1,1,1,1,1,1,1,1,  // 58 - 5f\n    1,1,1,1,1,1,1,1,  // 60 - 67\n    1,1,1,1,1,1,1,1,  // 68 - 6f\n    1,1,1,1,1,1,1,1,  // 70 - 77\n    1,1,1,1,1,1,1,1,  // 78 - 7f\n    2,2,2,2,3,3,3,3,  // 80 - 87\n    4,4,4,4,4,4,4,4,  // 88 - 8f\n    4,4,4,4,4,4,4,4,  // 90 - 97\n    4,4,4,4,4,4,4,4,  // 98 - 9f\n    5,5,5,5,5,5,5,5,  // a0 - a7\n    5,5,5,5,5,5,5,5,  // a8 - af\n    5,5,5,5,5,5,5,5,  // b0 - b7\n    5,5,5,5,5,5,5,5,  // b8 - bf\n    0,0,6,6,6,6,6,6,  // c0 - c7\n    6,6,6,6,6,6,6,6,  // c8 - cf\n    6,6,6,6,6,6,6,6,  // d0 - d7\n    6,6,6,6,6,6,6,6,  // d8 - df\n    7,8,8,8,8,8,8,8,  // e0 - e7\n    8,8,8,8,8,9,8,8,  // e8 - ef\n    10,11,11,11,11,11,11,11,  // f0 - f7\n    12,13,13,13,14,15,0,0    // f8 - ff\n];\n\nvar UTF8_st = [\n    consts.error,consts.start,consts.error,consts.error,consts.error,consts.error,    12,  10, //00-07\n        9,    11,    8,    7,    6,    5,    4,   3, //08-0f\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //10-17\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //18-1f\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //20-27\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //28-2f\n    consts.error,consts.error,    5,    5,    5,    5,consts.error,consts.error, //30-37\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //38-3f\n    consts.error,consts.error,consts.error,    5,    5,    5,consts.error,consts.error, //40-47\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //48-4f\n    consts.error,consts.error,    7,    7,    7,    7,consts.error,consts.error, //50-57\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //58-5f\n    consts.error,consts.error,consts.error,consts.error,    7,    7,consts.error,consts.error, //60-67\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //68-6f\n    consts.error,consts.error,    9,    9,    9,    9,consts.error,consts.error, //70-77\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //78-7f\n    consts.error,consts.error,consts.error,consts.error,    9,    9,consts.error,consts.error, //80-87\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //88-8f\n    consts.error,consts.error,   12,   12,   12,   12,consts.error,consts.error, //90-97\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //98-9f\n    consts.error,consts.error,consts.error,consts.error,consts.error,   12,consts.error,consts.error, //a0-a7\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //a8-af\n    consts.error,consts.error,   12,   12,   12,consts.error,consts.error,consts.error, //b0-b7\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //b8-bf\n    consts.error,consts.error,consts.start,consts.start,consts.start,consts.start,consts.error,consts.error, //c0-c7\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error  //c8-cf\n];\n\nvar UTF8CharLenTable = [0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6];\n\nmodule.exports = {\n    \"classTable\"    : UTF8_cls,\n    \"classFactor\"   : 16,\n    \"stateTable\"    : UTF8_st,\n    \"charLenTable\"  : UTF8CharLenTable,\n    \"name\"          : \"UTF-8\"\n};\n","var consts = require('../constants');\n\nvar GB2312_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    3,3,3,3,3,3,3,3,  // 30 - 37\n    3,3,1,1,1,1,1,1,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,4,  // 78 - 7f\n    5,6,6,6,6,6,6,6,  // 80 - 87\n    6,6,6,6,6,6,6,6,  // 88 - 8f\n    6,6,6,6,6,6,6,6,  // 90 - 97\n    6,6,6,6,6,6,6,6,  // 98 - 9f\n    6,6,6,6,6,6,6,6,  // a0 - a7\n    6,6,6,6,6,6,6,6,  // a8 - af\n    6,6,6,6,6,6,6,6,  // b0 - b7\n    6,6,6,6,6,6,6,6,  // b8 - bf\n    6,6,6,6,6,6,6,6,  // c0 - c7\n    6,6,6,6,6,6,6,6,  // c8 - cf\n    6,6,6,6,6,6,6,6,  // d0 - d7\n    6,6,6,6,6,6,6,6,  // d8 - df\n    6,6,6,6,6,6,6,6,  // e0 - e7\n    6,6,6,6,6,6,6,6,  // e8 - ef\n    6,6,6,6,6,6,6,6,  // f0 - f7\n    6,6,6,6,6,6,6,0   // f8 - ff\n];\n\nvar GB2312_st = [\n    consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,    3,consts.error, //00-07\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, //08-0f\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start, //10-17\n        4,consts.error,consts.start,consts.start,consts.error,consts.error,consts.error,consts.error, //18-1f\n    consts.error,consts.error,    5,consts.error,consts.error,consts.error,consts.itsMe,consts.error, //20-27\n    consts.error,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //28-2f\n];\n\n// To be accurate, the length of class 6 can be either 2 or 4.\n// But it is not necessary to discriminate between the two since\n// it is used for frequency analysis only, and we are validing\n// each code range there as well. So it is safe to set it to be\n// 2 here.\nvar GB2312CharLenTable = [0, 1, 1, 1, 1, 1, 2];\n\nmodule.exports = {\n    \"classTable\"    : GB2312_cls,\n    \"classFactor\"   : 7,\n    \"stateTable\"    : GB2312_st,\n    \"charLenTable\"  : GB2312CharLenTable,\n    \"name\"          : \"GB2312\"\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar constants = require('./constants');\nvar CharSetProber = require('./charsetprober');\nvar logger = require('./logger');\n\nfunction CharSetGroupProber() {\n    CharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mActiveNum = 0;\n        self._mProbers = [];\n        self._mBestGuessProber = null;\n    }\n\n    this.reset = function() {\n        CharSetGroupProber.prototype.reset.apply(this);\n        this._mActiveNum = 0;\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\n            if( prober ) {\n                prober.reset();\n                prober.active = true;\n                this._mActiveNum++;\n            }\n        }\n        this._mBestGuessProber = null;\n    }\n\n    this.getCharsetName = function() {\n        if( !this._mBestGuessProber ) {\n            this.getConfidence();\n            if( !this._mBestGuessProber ) return null;\n        }\n        return this._mBestGuessProber.getCharsetName();\n    }\n\n    this.feed = function(aBuf) {\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\n            if( !prober || !prober.active ) continue;\n            var st = prober.feed(aBuf);\n            if( !st ) continue;\n            if( st == constants.foundIt ) {\n                this._mBestGuessProber = prober;\n                return this.getState();\n            } else if( st == constants.notMe ) {\n                prober.active = false;\n                this._mActiveNum--;\n                if( this._mActiveNum <= 0 ) {\n                    this._mState = constants.notMe;\n                    return this.getState();\n                }\n            }\n        }\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var st = this.getState();\n        if( st == constants.foundIt ) {\n            return 0.99;\n        } else if( st == constants.notMe ) {\n            return 0.01;\n        }\n        var bestConf = 0.0;\n        this._mBestGuessProber = null;\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\n            if( !prober ) continue;\n            if( !prober.active ) {\n                logger.log(prober.getCharsetName() + \" not active\\n\");\n                continue;\n            }\n            var cf = prober.getConfidence();\n            logger.log(prober.getCharsetName() + \" confidence = \" + cf + \"\\n\");\n            if( bestConf < cf ) {\n                bestConf = cf;\n                this._mBestGuessProber = prober;\n            }\n        }\n        if( !this._mBestGuessProber ) return 0.0;\n        return bestConf;\n    }\n\n    init();\n}\nCharSetGroupProber.prototype = new CharSetProber();\n\nmodule.exports = CharSetGroupProber\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./volume.vue?vue&type=style&index=0&id=256fedce&lang=less&scoped=true&\"","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","var consts = require('../constants');\n\nvar EUCTW_cls = [\n    2,2,2,2,2,2,2,2,  // 00 - 07\n    2,2,2,2,2,2,0,0,  // 08 - 0f\n    2,2,2,2,2,2,2,2,  // 10 - 17\n    2,2,2,0,2,2,2,2,  // 18 - 1f\n    2,2,2,2,2,2,2,2,  // 20 - 27\n    2,2,2,2,2,2,2,2,  // 28 - 2f\n    2,2,2,2,2,2,2,2,  // 30 - 37\n    2,2,2,2,2,2,2,2,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,2,  // 78 - 7f\n    0,0,0,0,0,0,0,0,  // 80 - 87\n    0,0,0,0,0,0,6,0,  // 88 - 8f\n    0,0,0,0,0,0,0,0,  // 90 - 97\n    0,0,0,0,0,0,0,0,  // 98 - 9f\n    0,3,4,4,4,4,4,4,  // a0 - a7\n    5,5,1,1,1,1,1,1,  // a8 - af\n    1,1,1,1,1,1,1,1,  // b0 - b7\n    1,1,1,1,1,1,1,1,  // b8 - bf\n    1,1,3,1,3,3,3,3,  // c0 - c7\n    3,3,3,3,3,3,3,3,  // c8 - cf\n    3,3,3,3,3,3,3,3,  // d0 - d7\n    3,3,3,3,3,3,3,3,  // d8 - df\n    3,3,3,3,3,3,3,3,  // e0 - e7\n    3,3,3,3,3,3,3,3,  // e8 - ef\n    3,3,3,3,3,3,3,3,  // f0 - f7\n    3,3,3,3,3,3,3,0   // f8 - ff\n];\n\nvar EUCTW_st = [\n    consts.error,consts.error,consts.start,    3,    3,    3,    4,consts.error, //00-07\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, //08-0f\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.start,consts.error, //10-17\n    consts.start,consts.start,consts.start,consts.error,consts.error,consts.error,consts.error,consts.error, //18-1f\n        5,consts.error,consts.error,consts.error,consts.start,consts.error,consts.start,consts.start, //20-27\n    consts.start,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //28-2f\n];\n\nvar EUCTWCharLenTable = [0, 0, 1, 2, 2, 2, 3];\n\nmodule.exports = {\n    \"classTable\"    : EUCTW_cls,\n    \"classFactor\"   : 7,\n    \"stateTable\"    : EUCTW_st,\n    \"charLenTable\"  : EUCTWCharLenTable,\n    \"name\"          : \"x-euc-tw\"\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// GB2312 most frequently used character table\n//\n// Char to FreqOrder table , from hz6763\n\n// 512  --> 0.79  -- 0.79\n// 1024 --> 0.92  -- 0.13\n// 2048 --> 0.98  -- 0.06\n// 6768 --> 1.00  -- 0.02\n//\n// Ideal Distribution Ratio = 0.79135/(1-0.79135) = 3.79\n// Random Distribution Ration = 512 / (3755 - 512) = 0.157\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher that RDR\n\nexports.GB2312_TYPICAL_DISTRIBUTION_RATIO = 0.9;\n\nexports.GB2312_TABLE_SIZE = 3760;\n\nexports.GB2312CharToFreqOrder = [\n1671, 749,1443,2364,3924,3807,2330,3921,1704,3463,2691,1511,1515, 572,3191,2205,\n2361, 224,2558, 479,1711, 963,3162, 440,4060,1905,2966,2947,3580,2647,3961,3842,\n2204, 869,4207, 970,2678,5626,2944,2956,1479,4048, 514,3595, 588,1346,2820,3409,\n 249,4088,1746,1873,2047,1774, 581,1813, 358,1174,3590,1014,1561,4844,2245, 670,\n1636,3112, 889,1286, 953, 556,2327,3060,1290,3141, 613, 185,3477,1367, 850,3820,\n1715,2428,2642,2303,2732,3041,2562,2648,3566,3946,1349, 388,3098,2091,1360,3585,\n 152,1687,1539, 738,1559,  59,1232,2925,2267,1388,1249,1741,1679,2960, 151,1566,\n1125,1352,4271, 924,4296, 385,3166,4459, 310,1245,2850,  70,3285,2729,3534,3575,\n2398,3298,3466,1960,2265, 217,3647, 864,1909,2084,4401,2773,1010,3269,5152, 853,\n3051,3121,1244,4251,1895, 364,1499,1540,2313,1180,3655,2268, 562, 715,2417,3061,\n 544, 336,3768,2380,1752,4075, 950, 280,2425,4382, 183,2759,3272, 333,4297,2155,\n1688,2356,1444,1039,4540, 736,1177,3349,2443,2368,2144,2225, 565, 196,1482,3406,\n 927,1335,4147, 692, 878,1311,1653,3911,3622,1378,4200,1840,2969,3149,2126,1816,\n2534,1546,2393,2760, 737,2494,  13, 447, 245,2747,  38,2765,2129,2589,1079, 606,\n 360, 471,3755,2890, 404, 848, 699,1785,1236, 370,2221,1023,3746,2074,2026,2023,\n2388,1581,2119, 812,1141,3091,2536,1519, 804,2053, 406,1596,1090, 784, 548,4414,\n1806,2264,2936,1100, 343,4114,5096, 622,3358, 743,3668,1510,1626,5020,3567,2513,\n3195,4115,5627,2489,2991,  24,2065,2697,1087,2719,  48,1634, 315,  68, 985,2052,\n 198,2239,1347,1107,1439, 597,2366,2172, 871,3307, 919,2487,2790,1867, 236,2570,\n1413,3794, 906,3365,3381,1701,1982,1818,1524,2924,1205, 616,2586,2072,2004, 575,\n 253,3099,  32,1365,1182, 197,1714,2454,1201, 554,3388,3224,2748, 756,2587, 250,\n2567,1507,1517,3529,1922,2761,2337,3416,1961,1677,2452,2238,3153, 615, 911,1506,\n1474,2495,1265,1906,2749,3756,3280,2161, 898,2714,1759,3450,2243,2444, 563,  26,\n3286,2266,3769,3344,2707,3677, 611,1402, 531,1028,2871,4548,1375, 261,2948, 835,\n1190,4134, 353, 840,2684,1900,3082,1435,2109,1207,1674, 329,1872,2781,4055,2686,\n2104, 608,3318,2423,2957,2768,1108,3739,3512,3271,3985,2203,1771,3520,1418,2054,\n1681,1153, 225,1627,2929, 162,2050,2511,3687,1954, 124,1859,2431,1684,3032,2894,\n 585,4805,3969,2869,2704,2088,2032,2095,3656,2635,4362,2209, 256, 518,2042,2105,\n3777,3657, 643,2298,1148,1779, 190, 989,3544, 414,  11,2135,2063,2979,1471, 403,\n3678, 126, 770,1563, 671,2499,3216,2877, 600,1179, 307,2805,4937,1268,1297,2694,\n 252,4032,1448,1494,1331,1394, 127,2256, 222,1647,1035,1481,3056,1915,1048, 873,\n3651, 210,  33,1608,2516, 200,1520, 415, 102,   0,3389,1287, 817,  91,3299,2940,\n 836,1814, 549,2197,1396,1669,2987,3582,2297,2848,4528,1070, 687,  20,1819, 121,\n1552,1364,1461,1968,2617,3540,2824,2083, 177, 948,4938,2291, 110,4549,2066, 648,\n3359,1755,2110,2114,4642,4845,1693,3937,3308,1257,1869,2123, 208,1804,3159,2992,\n2531,2549,3361,2418,1350,2347,2800,2568,1291,2036,2680,  72, 842,1990, 212,1233,\n1154,1586,  75,2027,3410,4900,1823,1337,2710,2676, 728,2810,1522,3026,4995, 157,\n 755,1050,4022, 710, 785,1936,2194,2085,1406,2777,2400, 150,1250,4049,1206, 807,\n1910, 534, 529,3309,1721,1660, 274,  39,2827, 661,2670,1578, 925,3248,3815,1094,\n4278,4901,4252,  41,1150,3747,2572,2227,4501,3658,4902,3813,3357,3617,2884,2258,\n 887, 538,4187,3199,1294,2439,3042,2329,2343,2497,1255, 107, 543,1527, 521,3478,\n3568, 194,5062,  15, 961,3870,1241,1192,2664,  66,5215,3260,2111,1295,1127,2152,\n3805,4135, 901,1164,1976, 398,1278, 530,1460, 748, 904,1054,1966,1426,  53,2909,\n 509, 523,2279,1534, 536,1019, 239,1685, 460,2353, 673,1065,2401,3600,4298,2272,\n1272,2363, 284,1753,3679,4064,1695,  81, 815,2677,2757,2731,1386, 859, 500,4221,\n2190,2566, 757,1006,2519,2068,1166,1455, 337,2654,3203,1863,1682,1914,3025,1252,\n1409,1366, 847, 714,2834,2038,3209, 964,2970,1901, 885,2553,1078,1756,3049, 301,\n1572,3326, 688,2130,1996,2429,1805,1648,2930,3421,2750,3652,3088, 262,1158,1254,\n 389,1641,1812, 526,1719, 923,2073,1073,1902, 468, 489,4625,1140, 857,2375,3070,\n3319,2863, 380, 116,1328,2693,1161,2244, 273,1212,1884,2769,3011,1775,1142, 461,\n3066,1200,2147,2212, 790, 702,2695,4222,1601,1058, 434,2338,5153,3640,  67,2360,\n4099,2502, 618,3472,1329, 416,1132, 830,2782,1807,2653,3211,3510,1662, 192,2124,\n 296,3979,1739,1611,3684,  23, 118, 324, 446,1239,1225, 293,2520,3814,3795,2535,\n3116,  17,1074, 467,2692,2201, 387,2922,  45,1326,3055,1645,3659,2817, 958, 243,\n1903,2320,1339,2825,1784,3289, 356, 576, 865,2315,2381,3377,3916,1088,3122,1713,\n1655, 935, 628,4689,1034,1327, 441, 800, 720, 894,1979,2183,1528,5289,2702,1071,\n4046,3572,2399,1571,3281,  79, 761,1103, 327, 134, 758,1899,1371,1615, 879, 442,\n 215,2605,2579, 173,2048,2485,1057,2975,3317,1097,2253,3801,4263,1403,1650,2946,\n 814,4968,3487,1548,2644,1567,1285,   2, 295,2636,  97, 946,3576, 832, 141,4257,\n3273, 760,3821,3521,3156,2607, 949,1024,1733,1516,1803,1920,2125,2283,2665,3180,\n1501,2064,3560,2171,1592, 803,3518,1416, 732,3897,4258,1363,1362,2458, 119,1427,\n 602,1525,2608,1605,1639,3175, 694,3064,  10, 465,  76,2000,4846,4208, 444,3781,\n1619,3353,2206,1273,3796, 740,2483, 320,1723,2377,3660,2619,1359,1137,1762,1724,\n2345,2842,1850,1862, 912, 821,1866, 612,2625,1735,2573,3369,1093, 844,  89, 937,\n 930,1424,3564,2413,2972,1004,3046,3019,2011, 711,3171,1452,4178, 428, 801,1943,\n 432, 445,2811, 206,4136,1472, 730, 349,  73, 397,2802,2547, 998,1637,1167, 789,\n 396,3217, 154,1218, 716,1120,1780,2819,4826,1931,3334,3762,2139,1215,2627, 552,\n3664,3628,3232,1405,2383,3111,1356,2652,3577,3320,3101,1703, 640,1045,1370,1246,\n4996, 371,1575,2436,1621,2210, 984,4033,1734,2638,  16,4529, 663,2755,3255,1451,\n3917,2257,1253,1955,2234,1263,2951, 214,1229, 617, 485, 359,1831,1969, 473,2310,\n 750,2058, 165,  80,2864,2419, 361,4344,2416,2479,1134, 796,3726,1266,2943, 860,\n2715, 938, 390,2734,1313,1384, 248, 202, 877,1064,2854, 522,3907, 279,1602, 297,\n2357, 395,3740, 137,2075, 944,4089,2584,1267,3802,  62,1533,2285, 178, 176, 780,\n2440, 201,3707, 590, 478,1560,4354,2117,1075,  30,  74,4643,4004,1635,1441,2745,\n 776,2596, 238,1077,1692,1912,2844, 605, 499,1742,3947, 241,3053, 980,1749, 936,\n2640,4511,2582, 515,1543,2162,5322,2892,2993, 890,2148,1924, 665,1827,3581,1032,\n 968,3163, 339,1044,1896, 270, 583,1791,1720,4367,1194,3488,3669,  43,2523,1657,\n 163,2167, 290,1209,1622,3378, 550, 634,2508,2510, 695,2634,2384,2512,1476,1414,\n 220,1469,2341,2138,2852,3183,2900,4939,2865,3502,1211,3680, 854,3227,1299,2976,\n3172, 186,2998,1459, 443,1067,3251,1495, 321,1932,3054, 909, 753,1410,1828, 436,\n2441,1119,1587,3164,2186,1258, 227, 231,1425,1890,3200,3942, 247, 959, 725,5254,\n2741, 577,2158,2079, 929, 120, 174, 838,2813, 591,1115, 417,2024,  40,3240,1536,\n1037, 291,4151,2354, 632,1298,2406,2500,3535,1825,1846,3451, 205,1171, 345,4238,\n  18,1163, 811, 685,2208,1217, 425,1312,1508,1175,4308,2552,1033, 587,1381,3059,\n2984,3482, 340,1316,4023,3972, 792,3176, 519, 777,4690, 918, 933,4130,2981,3741,\n  90,3360,2911,2200,5184,4550, 609,3079,2030, 272,3379,2736, 363,3881,1130,1447,\n 286, 779, 357,1169,3350,3137,1630,1220,2687,2391, 747,1277,3688,2618,2682,2601,\n1156,3196,5290,4034,3102,1689,3596,3128, 874, 219,2783, 798, 508,1843,2461, 269,\n1658,1776,1392,1913,2983,3287,2866,2159,2372, 829,4076,  46,4253,2873,1889,1894,\n 915,1834,1631,2181,2318, 298, 664,2818,3555,2735, 954,3228,3117, 527,3511,2173,\n 681,2712,3033,2247,2346,3467,1652, 155,2164,3382, 113,1994, 450, 899, 494, 994,\n1237,2958,1875,2336,1926,3727, 545,1577,1550, 633,3473, 204,1305,3072,2410,1956,\n2471, 707,2134, 841,2195,2196,2663,3843,1026,4940, 990,3252,4997, 368,1092, 437,\n3212,3258,1933,1829, 675,2977,2893, 412, 943,3723,4644,3294,3283,2230,2373,5154,\n2389,2241,2661,2323,1404,2524, 593, 787, 677,3008,1275,2059, 438,2709,2609,2240,\n2269,2246,1446,  36,1568,1373,3892,1574,2301,1456,3962, 693,2276,5216,2035,1143,\n2720,1919,1797,1811,2763,4137,2597,1830,1699,1488,1198,2090, 424,1694, 312,3634,\n3390,4179,3335,2252,1214, 561,1059,3243,2295,2561, 975,5155,2321,2751,3772, 472,\n1537,3282,3398,1047,2077,2348,2878,1323,3340,3076, 690,2906,  51, 369, 170,3541,\n1060,2187,2688,3670,2541,1083,1683, 928,3918, 459, 109,4427, 599,3744,4286, 143,\n2101,2730,2490,  82,1588,3036,2121, 281,1860, 477,4035,1238,2812,3020,2716,3312,\n1530,2188,2055,1317, 843, 636,1808,1173,3495, 649, 181,1002, 147,3641,1159,2414,\n3750,2289,2795, 813,3123,2610,1136,4368,   5,3391,4541,2174, 420, 429,1728, 754,\n1228,2115,2219, 347,2223,2733, 735,1518,3003,2355,3134,1764,3948,3329,1888,2424,\n1001,1234,1972,3321,3363,1672,1021,1450,1584, 226, 765, 655,2526,3404,3244,2302,\n3665, 731, 594,2184, 319,1576, 621, 658,2656,4299,2099,3864,1279,2071,2598,2739,\n 795,3086,3699,3908,1707,2352,2402,1382,3136,2475,1465,4847,3496,3865,1085,3004,\n2591,1084, 213,2287,1963,3565,2250, 822, 793,4574,3187,1772,1789,3050, 595,1484,\n1959,2770,1080,2650, 456, 422,2996, 940,3322,4328,4345,3092,2742, 965,2784, 739,\n4124, 952,1358,2498,2949,2565, 332,2698,2378, 660,2260,2473,4194,3856,2919, 535,\n1260,2651,1208,1428,1300,1949,1303,2942, 433,2455,2450,1251,1946, 614,1269, 641,\n1306,1810,2737,3078,2912, 564,2365,1419,1415,1497,4460,2367,2185,1379,3005,1307,\n3218,2175,1897,3063, 682,1157,4040,4005,1712,1160,1941,1399, 394, 402,2952,1573,\n1151,2986,2404, 862, 299,2033,1489,3006, 346, 171,2886,3401,1726,2932, 168,2533,\n  47,2507,1030,3735,1145,3370,1395,1318,1579,3609,4560,2857,4116,1457,2529,1965,\n 504,1036,2690,2988,2405, 745,5871, 849,2397,2056,3081, 863,2359,3857,2096,  99,\n1397,1769,2300,4428,1643,3455,1978,1757,3718,1440,  35,4879,3742,1296,4228,2280,\n 160,5063,1599,2013, 166, 520,3479,1646,3345,3012, 490,1937,1545,1264,2182,2505,\n1096,1188,1369,1436,2421,1667,2792,2460,1270,2122, 727,3167,2143, 806,1706,1012,\n1800,3037, 960,2218,1882, 805, 139,2456,1139,1521, 851,1052,3093,3089, 342,2039,\n 744,5097,1468,1502,1585,2087, 223, 939, 326,2140,2577, 892,2481,1623,4077, 982,\n3708, 135,2131,  87,2503,3114,2326,1106, 876,1616, 547,2997,2831,2093,3441,4530,\n4314,   9,3256,4229,4148, 659,1462,1986,1710,2046,2913,2231,4090,4880,5255,3392,\n3274,1368,3689,4645,1477, 705,3384,3635,1068,1529,2941,1458,3782,1509, 100,1656,\n2548, 718,2339, 408,1590,2780,3548,1838,4117,3719,1345,3530, 717,3442,2778,3220,\n2898,1892,4590,3614,3371,2043,1998,1224,3483, 891, 635, 584,2559,3355, 733,1766,\n1729,1172,3789,1891,2307, 781,2982,2271,1957,1580,5773,2633,2005,4195,3097,1535,\n3213,1189,1934,5693,3262, 586,3118,1324,1598, 517,1564,2217,1868,1893,4445,3728,\n2703,3139,1526,1787,1992,3882,2875,1549,1199,1056,2224,1904,2711,5098,4287, 338,\n1993,3129,3489,2689,1809,2815,1997, 957,1855,3898,2550,3275,3057,1105,1319, 627,\n1505,1911,1883,3526, 698,3629,3456,1833,1431, 746,  77,1261,2017,2296,1977,1885,\n 125,1334,1600, 525,1798,1109,2222,1470,1945, 559,2236,1186,3443,2476,1929,1411,\n2411,3135,1777,3372,2621,1841,1613,3229, 668,1430,1839,2643,2916, 195,1989,2671,\n2358,1387, 629,3205,2293,5256,4439, 123,1310, 888,1879,4300,3021,3605,1003,1162,\n3192,2910,2010, 140,2395,2859,  55,1082,2012,2901, 662, 419,2081,1438, 680,2774,\n4654,3912,1620,1731,1625,5035,4065,2328, 512,1344, 802,5443,2163,2311,2537, 524,\n3399,  98,1155,2103,1918,2606,3925,2816,1393,2465,1504,3773,2177,3963,1478,4346,\n 180,1113,4655,3461,2028,1698, 833,2696,1235,1322,1594,4408,3623,3013,3225,2040,\n3022, 541,2881, 607,3632,2029,1665,1219, 639,1385,1686,1099,2803,3231,1938,3188,\n2858, 427, 676,2772,1168,2025, 454,3253,2486,3556, 230,1950, 580, 791,1991,1280,\n1086,1974,2034, 630, 257,3338,2788,4903,1017,  86,4790, 966,2789,1995,1696,1131,\n 259,3095,4188,1308, 179,1463,5257, 289,4107,1248,  42,3413,1725,2288, 896,1947,\n 774,4474,4254, 604,3430,4264, 392,2514,2588, 452, 237,1408,3018, 988,4531,1970,\n3034,3310, 540,2370,1562,1288,2990, 502,4765,1147,   4,1853,2708, 207, 294,2814,\n4078,2902,2509, 684,  34,3105,3532,2551, 644, 709,2801,2344, 573,1727,3573,3557,\n2021,1081,3100,4315,2100,3681, 199,2263,1837,2385, 146,3484,1195,2776,3949, 997,\n1939,3973,1008,1091,1202,1962,1847,1149,4209,5444,1076, 493, 117,5400,2521, 972,\n1490,2934,1796,4542,2374,1512,2933,2657, 413,2888,1135,2762,2314,2156,1355,2369,\n 766,2007,2527,2170,3124,2491,2593,2632,4757,2437, 234,3125,3591,1898,1750,1376,\n1942,3468,3138, 570,2127,2145,3276,4131, 962, 132,1445,4196,  19, 941,3624,3480,\n3366,1973,1374,4461,3431,2629, 283,2415,2275, 808,2887,3620,2112,2563,1353,3610,\n 955,1089,3103,1053,  96,  88,4097, 823,3808,1583, 399, 292,4091,3313, 421,1128,\n 642,4006, 903,2539,1877,2082, 596,  29,4066,1790, 722,2157, 130, 995,1569, 769,\n1485, 464, 513,2213, 288,1923,1101,2453,4316, 133, 486,2445,  50, 625, 487,2207,\n  57, 423, 481,2962, 159,3729,1558, 491, 303, 482, 501, 240,2837, 112,3648,2392,\n1783, 362,   8,3433,3422, 610,2793,3277,1390,1284,1654,  21,3823, 734, 367, 623,\n 193, 287, 374,1009,1483, 816, 476, 313,2255,2340,1262,2150,2899,1146,2581, 782,\n2116,1659,2018,1880, 255,3586,3314,1110,2867,2137,2564, 986,2767,5185,2006, 650,\n 158, 926, 762, 881,3157,2717,2362,3587, 306,3690,3245,1542,3077,2427,1691,2478,\n2118,2985,3490,2438, 539,2305, 983, 129,1754, 355,4201,2386, 827,2923, 104,1773,\n2838,2771, 411,2905,3919, 376, 767, 122,1114, 828,2422,1817,3506, 266,3460,1007,\n1609,4998, 945,2612,4429,2274, 726,1247,1964,2914,2199,2070,4002,4108, 657,3323,\n1422, 579, 455,2764,4737,1222,2895,1670, 824,1223,1487,2525, 558, 861,3080, 598,\n2659,2515,1967, 752,2583,2376,2214,4180, 977, 704,2464,4999,2622,4109,1210,2961,\n 819,1541, 142,2284,  44, 418, 457,1126,3730,4347,4626,1644,1876,3671,1864, 302,\n1063,5694, 624, 723,1984,3745,1314,1676,2488,1610,1449,3558,3569,2166,2098, 409,\n1011,2325,3704,2306, 818,1732,1383,1824,1844,3757, 999,2705,3497,1216,1423,2683,\n2426,2954,2501,2726,2229,1475,2554,5064,1971,1794,1666,2014,1343, 783, 724, 191,\n2434,1354,2220,5065,1763,2752,2472,4152, 131, 175,2885,3434,  92,1466,4920,2616,\n3871,3872,3866, 128,1551,1632, 669,1854,3682,4691,4125,1230, 188,2973,3290,1302,\n1213, 560,3266, 917, 763,3909,3249,1760, 868,1958, 764,1782,2097, 145,2277,3774,\n4462,  64,1491,3062, 971,2132,3606,2442, 221,1226,1617, 218, 323,1185,3207,3147,\n 571, 619,1473,1005,1744,2281, 449,1887,2396,3685, 275, 375,3816,1743,3844,3731,\n 845,1983,2350,4210,1377, 773, 967,3499,3052,3743,2725,4007,1697,1022,3943,1464,\n3264,2855,2722,1952,1029,2839,2467,  84,4383,2215, 820,1391,2015,2448,3672, 377,\n1948,2168, 797,2545,3536,2578,2645,  94,2874,1678, 405,1259,3071, 771, 546,1315,\n 470,1243,3083, 895,2468, 981, 969,2037, 846,4181, 653,1276,2928,  14,2594, 557,\n3007,2474, 156, 902,1338,1740,2574, 537,2518, 973,2282,2216,2433,1928, 138,2903,\n1293,2631,1612, 646,3457, 839,2935, 111, 496,2191,2847, 589,3186, 149,3994,2060,\n4031,2641,4067,3145,1870,  37,3597,2136,1025,2051,3009,3383,3549,1121,1016,3261,\n1301, 251,2446,2599,2153, 872,3246, 637, 334,3705, 831, 884, 921,3065,3140,4092,\n2198,1944, 246,2964, 108,2045,1152,1921,2308,1031, 203,3173,4170,1907,3890, 810,\n1401,2003,1690, 506, 647,1242,2828,1761,1649,3208,2249,1589,3709,2931,5156,1708,\n 498, 666,2613, 834,3817,1231, 184,2851,1124, 883,3197,2261,3710,1765,1553,2658,\n1178,2639,2351,  93,1193, 942,2538,2141,4402, 235,1821, 870,1591,2192,1709,1871,\n3341,1618,4126,2595,2334, 603, 651,  69, 701, 268,2662,3411,2555,1380,1606, 503,\n 448, 254,2371,2646, 574,1187,2309,1770, 322,2235,1292,1801, 305, 566,1133, 229,\n2067,2057, 706, 167, 483,2002,2672,3295,1820,3561,3067, 316, 378,2746,3452,1112,\n 136,1981, 507,1651,2917,1117, 285,4591, 182,2580,3522,1304, 335,3303,1835,2504,\n1795,1792,2248, 674,1018,2106,2449,1857,2292,2845, 976,3047,1781,2600,2727,1389,\n1281,  52,3152, 153, 265,3950, 672,3485,3951,4463, 430,1183, 365, 278,2169,  27,\n1407,1336,2304, 209,1340,1730,2202,1852,2403,2883, 979,1737,1062, 631,2829,2542,\n3876,2592, 825,2086,2226,3048,3625, 352,1417,3724, 542, 991, 431,1351,3938,1861,\n2294, 826,1361,2927,3142,3503,1738, 463,2462,2723, 582,1916,1595,2808, 400,3845,\n3891,2868,3621,2254,  58,2492,1123, 910,2160,2614,1372,1603,1196,1072,3385,1700,\n3267,1980, 696, 480,2430, 920, 799,1570,2920,1951,2041,4047,2540,1321,4223,2469,\n3562,2228,1271,2602, 401,2833,3351,2575,5157, 907,2312,1256, 410, 263,3507,1582,\n 996, 678,1849,2316,1480, 908,3545,2237, 703,2322, 667,1826,2849,1531,2604,2999,\n2407,3146,2151,2630,1786,3711, 469,3542, 497,3899,2409, 858, 837,4446,3393,1274,\n 786, 620,1845,2001,3311, 484, 308,3367,1204,1815,3691,2332,1532,2557,1842,2020,\n2724,1927,2333,4440, 567,  22,1673,2728,4475,1987,1858,1144,1597, 101,1832,3601,\n  12, 974,3783,4391, 951,1412,   1,3720, 453,4608,4041, 528,1041,1027,3230,2628,\n1129, 875,1051,3291,1203,2262,1069,2860,2799,2149,2615,3278, 144,1758,3040,  31,\n 475,1680, 366,2685,3184, 311,1642,4008,2466,5036,1593,1493,2809, 216,1420,1668,\n 233, 304,2128,3284, 232,1429,1768,1040,2008,3407,2740,2967,2543, 242,2133, 778,\n1565,2022,2620, 505,2189,2756,1098,2273, 372,1614, 708, 553,2846,2094,2278, 169,\n3626,2835,4161, 228,2674,3165, 809,1454,1309, 466,1705,1095, 900,3423, 880,2667,\n3751,5258,2317,3109,2571,4317,2766,1503,1342, 866,4447,1118,  63,2076, 314,1881,\n1348,1061, 172, 978,3515,1747, 532, 511,3970,   6, 601, 905,2699,3300,1751, 276,\n1467,3725,2668,  65,4239,2544,2779,2556,1604, 578,2451,1802, 992,2331,2624,1320,\n3446, 713,1513,1013, 103,2786,2447,1661, 886,1702, 916, 654,3574,2031,1556, 751,\n2178,2821,2179,1498,1538,2176, 271, 914,2251,2080,1325, 638,1953,2937,3877,2432,\n2754,  95,3265,1716, 260,1227,4083, 775, 106,1357,3254, 426,1607, 555,2480, 772,\n1985, 244,2546, 474, 495,1046,2611,1851,2061,  71,2089,1675,2590, 742,3758,2843,\n3222,1433, 267,2180,2576,2826,2233,2092,3913,2435, 956,1745,3075, 856,2113,1116,\n 451,   3,1988,2896,1398, 993,2463,1878,2049,1341,2718,2721,2870,2108, 712,2904,\n4363,2753,2324, 277,2872,2349,2649, 384, 987, 435, 691,3000, 922, 164,3939, 652,\n1500,1184,4153,2482,3373,2165,4848,2335,3775,3508,3154,2806,2830,1554,2102,1664,\n2530,1434,2408, 893,1547,2623,3447,2832,2242,2532,3169,2856,3223,2078,  49,3770,\n3469, 462, 318, 656,2259,3250,3069, 679,1629,2758, 344,1138,1104,3120,1836,1283,\n3115,2154,1437,4448, 934, 759,1999, 794,2862,1038, 533,2560,1722,2342, 855,2626,\n1197,1663,4476,3127,  85,4240,2528,  25,1111,1181,3673, 407,3470,4561,2679,2713,\n 768,1925,2841,3986,1544,1165, 932, 373,1240,2146,1930,2673, 721,4766, 354,4333,\n 391,2963, 187,  61,3364,1442,1102, 330,1940,1767, 341,3809,4118, 393,2496,2062,\n2211, 105, 331, 300, 439, 913,1332, 626, 379,3304,1557, 328, 689,3952, 309,1555,\n 931, 317,2517,3027, 325, 569, 686,2107,3084,  60,1042,1333,2794, 264,3177,4014,\n1628, 258,3712,   7,4464,1176,1043,1778, 683, 114,1975,  78,1492, 383,1886, 510,\n 386, 645,5291,2891,2069,3305,4138,3867,2939,2603,2493,1935,1066,1848,3588,1015,\n1282,1289,4609, 697,1453,3044,2666,3611,1856,2412,  54, 719,1330, 568,3778,2459,\n1748, 788, 492, 551,1191,1000, 488,3394,3763, 282,1799, 348,2016,1523,3155,2390,\n1049, 382,2019,1788,1170, 729,2968,3523, 897,3926,2785,2938,3292, 350,2319,3238,\n1718,1717,2655,3453,3143,4465, 161,2889,2980,2009,1421,  56,1908,1640,2387,2232,\n1917,1874,2477,4921, 148,  83,3438, 592,4245,2882,1822,1055, 741, 115,1496,1624,\n 381,1638,4592,1020, 516,3214, 458, 947,4575,1432, 211,1514,2926,1865,2142, 189,\n 852,1221,1400,1486, 882,2299,4036, 351,  28,1122, 700,6479,6480,6481,6482,6483,  // last 512\n//Everything below is of no interest for detection purpose\n5508,6484,3900,3414,3974,4441,4024,3537,4037,5628,5099,3633,6485,3148,6486,3636,\n5509,3257,5510,5973,5445,5872,4941,4403,3174,4627,5873,6276,2286,4230,5446,5874,\n5122,6102,6103,4162,5447,5123,5323,4849,6277,3980,3851,5066,4246,5774,5067,6278,\n3001,2807,5695,3346,5775,5974,5158,5448,6487,5975,5976,5776,3598,6279,5696,4806,\n4211,4154,6280,6488,6489,6490,6281,4212,5037,3374,4171,6491,4562,4807,4722,4827,\n5977,6104,4532,4079,5159,5324,5160,4404,3858,5359,5875,3975,4288,4610,3486,4512,\n5325,3893,5360,6282,6283,5560,2522,4231,5978,5186,5449,2569,3878,6284,5401,3578,\n4415,6285,4656,5124,5979,2506,4247,4449,3219,3417,4334,4969,4329,6492,4576,4828,\n4172,4416,4829,5402,6286,3927,3852,5361,4369,4830,4477,4867,5876,4173,6493,6105,\n4657,6287,6106,5877,5450,6494,4155,4868,5451,3700,5629,4384,6288,6289,5878,3189,\n4881,6107,6290,6495,4513,6496,4692,4515,4723,5100,3356,6497,6291,3810,4080,5561,\n3570,4430,5980,6498,4355,5697,6499,4724,6108,6109,3764,4050,5038,5879,4093,3226,\n6292,5068,5217,4693,3342,5630,3504,4831,4377,4466,4309,5698,4431,5777,6293,5778,\n4272,3706,6110,5326,3752,4676,5327,4273,5403,4767,5631,6500,5699,5880,3475,5039,\n6294,5562,5125,4348,4301,4482,4068,5126,4593,5700,3380,3462,5981,5563,3824,5404,\n4970,5511,3825,4738,6295,6501,5452,4516,6111,5881,5564,6502,6296,5982,6503,4213,\n4163,3454,6504,6112,4009,4450,6113,4658,6297,6114,3035,6505,6115,3995,4904,4739,\n4563,4942,4110,5040,3661,3928,5362,3674,6506,5292,3612,4791,5565,4149,5983,5328,\n5259,5021,4725,4577,4564,4517,4364,6298,5405,4578,5260,4594,4156,4157,5453,3592,\n3491,6507,5127,5512,4709,4922,5984,5701,4726,4289,6508,4015,6116,5128,4628,3424,\n4241,5779,6299,4905,6509,6510,5454,5702,5780,6300,4365,4923,3971,6511,5161,3270,\n3158,5985,4100, 867,5129,5703,6117,5363,3695,3301,5513,4467,6118,6512,5455,4232,\n4242,4629,6513,3959,4478,6514,5514,5329,5986,4850,5162,5566,3846,4694,6119,5456,\n4869,5781,3779,6301,5704,5987,5515,4710,6302,5882,6120,4392,5364,5705,6515,6121,\n6516,6517,3736,5988,5457,5989,4695,2457,5883,4551,5782,6303,6304,6305,5130,4971,\n6122,5163,6123,4870,3263,5365,3150,4871,6518,6306,5783,5069,5706,3513,3498,4409,\n5330,5632,5366,5458,5459,3991,5990,4502,3324,5991,5784,3696,4518,5633,4119,6519,\n4630,5634,4417,5707,4832,5992,3418,6124,5993,5567,4768,5218,6520,4595,3458,5367,\n6125,5635,6126,4202,6521,4740,4924,6307,3981,4069,4385,6308,3883,2675,4051,3834,\n4302,4483,5568,5994,4972,4101,5368,6309,5164,5884,3922,6127,6522,6523,5261,5460,\n5187,4164,5219,3538,5516,4111,3524,5995,6310,6311,5369,3181,3386,2484,5188,3464,\n5569,3627,5708,6524,5406,5165,4677,4492,6312,4872,4851,5885,4468,5996,6313,5709,\n5710,6128,2470,5886,6314,5293,4882,5785,3325,5461,5101,6129,5711,5786,6525,4906,\n6526,6527,4418,5887,5712,4808,2907,3701,5713,5888,6528,3765,5636,5331,6529,6530,\n3593,5889,3637,4943,3692,5714,5787,4925,6315,6130,5462,4405,6131,6132,6316,5262,\n6531,6532,5715,3859,5716,5070,4696,5102,3929,5788,3987,4792,5997,6533,6534,3920,\n4809,5000,5998,6535,2974,5370,6317,5189,5263,5717,3826,6536,3953,5001,4883,3190,\n5463,5890,4973,5999,4741,6133,6134,3607,5570,6000,4711,3362,3630,4552,5041,6318,\n6001,2950,2953,5637,4646,5371,4944,6002,2044,4120,3429,6319,6537,5103,4833,6538,\n6539,4884,4647,3884,6003,6004,4758,3835,5220,5789,4565,5407,6540,6135,5294,4697,\n4852,6320,6321,3206,4907,6541,6322,4945,6542,6136,6543,6323,6005,4631,3519,6544,\n5891,6545,5464,3784,5221,6546,5571,4659,6547,6324,6137,5190,6548,3853,6549,4016,\n4834,3954,6138,5332,3827,4017,3210,3546,4469,5408,5718,3505,4648,5790,5131,5638,\n5791,5465,4727,4318,6325,6326,5792,4553,4010,4698,3439,4974,3638,4335,3085,6006,\n5104,5042,5166,5892,5572,6327,4356,4519,5222,5573,5333,5793,5043,6550,5639,5071,\n4503,6328,6139,6551,6140,3914,3901,5372,6007,5640,4728,4793,3976,3836,4885,6552,\n4127,6553,4451,4102,5002,6554,3686,5105,6555,5191,5072,5295,4611,5794,5296,6556,\n5893,5264,5894,4975,5466,5265,4699,4976,4370,4056,3492,5044,4886,6557,5795,4432,\n4769,4357,5467,3940,4660,4290,6141,4484,4770,4661,3992,6329,4025,4662,5022,4632,\n4835,4070,5297,4663,4596,5574,5132,5409,5895,6142,4504,5192,4664,5796,5896,3885,\n5575,5797,5023,4810,5798,3732,5223,4712,5298,4084,5334,5468,6143,4052,4053,4336,\n4977,4794,6558,5335,4908,5576,5224,4233,5024,4128,5469,5225,4873,6008,5045,4729,\n4742,4633,3675,4597,6559,5897,5133,5577,5003,5641,5719,6330,6560,3017,2382,3854,\n4406,4811,6331,4393,3964,4946,6561,2420,3722,6562,4926,4378,3247,1736,4442,6332,\n5134,6333,5226,3996,2918,5470,4319,4003,4598,4743,4744,4485,3785,3902,5167,5004,\n5373,4394,5898,6144,4874,1793,3997,6334,4085,4214,5106,5642,4909,5799,6009,4419,\n4189,3330,5899,4165,4420,5299,5720,5227,3347,6145,4081,6335,2876,3930,6146,3293,\n3786,3910,3998,5900,5300,5578,2840,6563,5901,5579,6147,3531,5374,6564,6565,5580,\n4759,5375,6566,6148,3559,5643,6336,6010,5517,6337,6338,5721,5902,3873,6011,6339,\n6567,5518,3868,3649,5722,6568,4771,4947,6569,6149,4812,6570,2853,5471,6340,6341,\n5644,4795,6342,6012,5723,6343,5724,6013,4349,6344,3160,6150,5193,4599,4514,4493,\n5168,4320,6345,4927,3666,4745,5169,5903,5005,4928,6346,5725,6014,4730,4203,5046,\n4948,3395,5170,6015,4150,6016,5726,5519,6347,5047,3550,6151,6348,4197,4310,5904,\n6571,5581,2965,6152,4978,3960,4291,5135,6572,5301,5727,4129,4026,5905,4853,5728,\n5472,6153,6349,4533,2700,4505,5336,4678,3583,5073,2994,4486,3043,4554,5520,6350,\n6017,5800,4487,6351,3931,4103,5376,6352,4011,4321,4311,4190,5136,6018,3988,3233,\n4350,5906,5645,4198,6573,5107,3432,4191,3435,5582,6574,4139,5410,6353,5411,3944,\n5583,5074,3198,6575,6354,4358,6576,5302,4600,5584,5194,5412,6577,6578,5585,5413,\n5303,4248,5414,3879,4433,6579,4479,5025,4854,5415,6355,4760,4772,3683,2978,4700,\n3797,4452,3965,3932,3721,4910,5801,6580,5195,3551,5907,3221,3471,3029,6019,3999,\n5908,5909,5266,5267,3444,3023,3828,3170,4796,5646,4979,4259,6356,5647,5337,3694,\n6357,5648,5338,4520,4322,5802,3031,3759,4071,6020,5586,4836,4386,5048,6581,3571,\n4679,4174,4949,6154,4813,3787,3402,3822,3958,3215,3552,5268,4387,3933,4950,4359,\n6021,5910,5075,3579,6358,4234,4566,5521,6359,3613,5049,6022,5911,3375,3702,3178,\n4911,5339,4521,6582,6583,4395,3087,3811,5377,6023,6360,6155,4027,5171,5649,4421,\n4249,2804,6584,2270,6585,4000,4235,3045,6156,5137,5729,4140,4312,3886,6361,4330,\n6157,4215,6158,3500,3676,4929,4331,3713,4930,5912,4265,3776,3368,5587,4470,4855,\n3038,4980,3631,6159,6160,4132,4680,6161,6362,3923,4379,5588,4255,6586,4121,6587,\n6363,4649,6364,3288,4773,4774,6162,6024,6365,3543,6588,4274,3107,3737,5050,5803,\n4797,4522,5589,5051,5730,3714,4887,5378,4001,4523,6163,5026,5522,4701,4175,2791,\n3760,6589,5473,4224,4133,3847,4814,4815,4775,3259,5416,6590,2738,6164,6025,5304,\n3733,5076,5650,4816,5590,6591,6165,6592,3934,5269,6593,3396,5340,6594,5804,3445,\n3602,4042,4488,5731,5732,3525,5591,4601,5196,6166,6026,5172,3642,4612,3202,4506,\n4798,6366,3818,5108,4303,5138,5139,4776,3332,4304,2915,3415,4434,5077,5109,4856,\n2879,5305,4817,6595,5913,3104,3144,3903,4634,5341,3133,5110,5651,5805,6167,4057,\n5592,2945,4371,5593,6596,3474,4182,6367,6597,6168,4507,4279,6598,2822,6599,4777,\n4713,5594,3829,6169,3887,5417,6170,3653,5474,6368,4216,2971,5228,3790,4579,6369,\n5733,6600,6601,4951,4746,4555,6602,5418,5475,6027,3400,4665,5806,6171,4799,6028,\n5052,6172,3343,4800,4747,5006,6370,4556,4217,5476,4396,5229,5379,5477,3839,5914,\n5652,5807,4714,3068,4635,5808,6173,5342,4192,5078,5419,5523,5734,6174,4557,6175,\n4602,6371,6176,6603,5809,6372,5735,4260,3869,5111,5230,6029,5112,6177,3126,4681,\n5524,5915,2706,3563,4748,3130,6178,4018,5525,6604,6605,5478,4012,4837,6606,4534,\n4193,5810,4857,3615,5479,6030,4082,3697,3539,4086,5270,3662,4508,4931,5916,4912,\n5811,5027,3888,6607,4397,3527,3302,3798,2775,2921,2637,3966,4122,4388,4028,4054,\n1633,4858,5079,3024,5007,3982,3412,5736,6608,3426,3236,5595,3030,6179,3427,3336,\n3279,3110,6373,3874,3039,5080,5917,5140,4489,3119,6374,5812,3405,4494,6031,4666,\n4141,6180,4166,6032,5813,4981,6609,5081,4422,4982,4112,3915,5653,3296,3983,6375,\n4266,4410,5654,6610,6181,3436,5082,6611,5380,6033,3819,5596,4535,5231,5306,5113,\n6612,4952,5918,4275,3113,6613,6376,6182,6183,5814,3073,4731,4838,5008,3831,6614,\n4888,3090,3848,4280,5526,5232,3014,5655,5009,5737,5420,5527,6615,5815,5343,5173,\n5381,4818,6616,3151,4953,6617,5738,2796,3204,4360,2989,4281,5739,5174,5421,5197,\n3132,5141,3849,5142,5528,5083,3799,3904,4839,5480,2880,4495,3448,6377,6184,5271,\n5919,3771,3193,6034,6035,5920,5010,6036,5597,6037,6378,6038,3106,5422,6618,5423,\n5424,4142,6619,4889,5084,4890,4313,5740,6620,3437,5175,5307,5816,4199,5198,5529,\n5817,5199,5656,4913,5028,5344,3850,6185,2955,5272,5011,5818,4567,4580,5029,5921,\n3616,5233,6621,6622,6186,4176,6039,6379,6380,3352,5200,5273,2908,5598,5234,3837,\n5308,6623,6624,5819,4496,4323,5309,5201,6625,6626,4983,3194,3838,4167,5530,5922,\n5274,6381,6382,3860,3861,5599,3333,4292,4509,6383,3553,5481,5820,5531,4778,6187,\n3955,3956,4324,4389,4218,3945,4325,3397,2681,5923,4779,5085,4019,5482,4891,5382,\n5383,6040,4682,3425,5275,4094,6627,5310,3015,5483,5657,4398,5924,3168,4819,6628,\n5925,6629,5532,4932,4613,6041,6630,4636,6384,4780,4204,5658,4423,5821,3989,4683,\n5822,6385,4954,6631,5345,6188,5425,5012,5384,3894,6386,4490,4104,6632,5741,5053,\n6633,5823,5926,5659,5660,5927,6634,5235,5742,5824,4840,4933,4820,6387,4859,5928,\n4955,6388,4143,3584,5825,5346,5013,6635,5661,6389,5014,5484,5743,4337,5176,5662,\n6390,2836,6391,3268,6392,6636,6042,5236,6637,4158,6638,5744,5663,4471,5347,3663,\n4123,5143,4293,3895,6639,6640,5311,5929,5826,3800,6189,6393,6190,5664,5348,3554,\n3594,4749,4603,6641,5385,4801,6043,5827,4183,6642,5312,5426,4761,6394,5665,6191,\n4715,2669,6643,6644,5533,3185,5427,5086,5930,5931,5386,6192,6044,6645,4781,4013,\n5745,4282,4435,5534,4390,4267,6045,5746,4984,6046,2743,6193,3501,4087,5485,5932,\n5428,4184,4095,5747,4061,5054,3058,3862,5933,5600,6646,5144,3618,6395,3131,5055,\n5313,6396,4650,4956,3855,6194,3896,5202,4985,4029,4225,6195,6647,5828,5486,5829,\n3589,3002,6648,6397,4782,5276,6649,6196,6650,4105,3803,4043,5237,5830,6398,4096,\n3643,6399,3528,6651,4453,3315,4637,6652,3984,6197,5535,3182,3339,6653,3096,2660,\n6400,6654,3449,5934,4250,4236,6047,6401,5831,6655,5487,3753,4062,5832,6198,6199,\n6656,3766,6657,3403,4667,6048,6658,4338,2897,5833,3880,2797,3780,4326,6659,5748,\n5015,6660,5387,4351,5601,4411,6661,3654,4424,5935,4339,4072,5277,4568,5536,6402,\n6662,5238,6663,5349,5203,6200,5204,6201,5145,4536,5016,5056,4762,5834,4399,4957,\n6202,6403,5666,5749,6664,4340,6665,5936,5177,5667,6666,6667,3459,4668,6404,6668,\n6669,4543,6203,6670,4276,6405,4480,5537,6671,4614,5205,5668,6672,3348,2193,4763,\n6406,6204,5937,5602,4177,5669,3419,6673,4020,6205,4443,4569,5388,3715,3639,6407,\n6049,4058,6206,6674,5938,4544,6050,4185,4294,4841,4651,4615,5488,6207,6408,6051,\n5178,3241,3509,5835,6208,4958,5836,4341,5489,5278,6209,2823,5538,5350,5206,5429,\n6675,4638,4875,4073,3516,4684,4914,4860,5939,5603,5389,6052,5057,3237,5490,3791,\n6676,6409,6677,4821,4915,4106,5351,5058,4243,5539,4244,5604,4842,4916,5239,3028,\n3716,5837,5114,5605,5390,5940,5430,6210,4332,6678,5540,4732,3667,3840,6053,4305,\n3408,5670,5541,6410,2744,5240,5750,6679,3234,5606,6680,5607,5671,3608,4283,4159,\n4400,5352,4783,6681,6411,6682,4491,4802,6211,6412,5941,6413,6414,5542,5751,6683,\n4669,3734,5942,6684,6415,5943,5059,3328,4670,4144,4268,6685,6686,6687,6688,4372,\n3603,6689,5944,5491,4373,3440,6416,5543,4784,4822,5608,3792,4616,5838,5672,3514,\n5391,6417,4892,6690,4639,6691,6054,5673,5839,6055,6692,6056,5392,6212,4038,5544,\n5674,4497,6057,6693,5840,4284,5675,4021,4545,5609,6418,4454,6419,6213,4113,4472,\n5314,3738,5087,5279,4074,5610,4959,4063,3179,4750,6058,6420,6214,3476,4498,4716,\n5431,4960,4685,6215,5241,6694,6421,6216,6695,5841,5945,6422,3748,5946,5179,3905,\n5752,5545,5947,4374,6217,4455,6423,4412,6218,4803,5353,6696,3832,5280,6219,4327,\n4702,6220,6221,6059,4652,5432,6424,3749,4751,6425,5753,4986,5393,4917,5948,5030,\n5754,4861,4733,6426,4703,6697,6222,4671,5949,4546,4961,5180,6223,5031,3316,5281,\n6698,4862,4295,4934,5207,3644,6427,5842,5950,6428,6429,4570,5843,5282,6430,6224,\n5088,3239,6060,6699,5844,5755,6061,6431,2701,5546,6432,5115,5676,4039,3993,3327,\n4752,4425,5315,6433,3941,6434,5677,4617,4604,3074,4581,6225,5433,6435,6226,6062,\n4823,5756,5116,6227,3717,5678,4717,5845,6436,5679,5846,6063,5847,6064,3977,3354,\n6437,3863,5117,6228,5547,5394,4499,4524,6229,4605,6230,4306,4500,6700,5951,6065,\n3693,5952,5089,4366,4918,6701,6231,5548,6232,6702,6438,4704,5434,6703,6704,5953,\n4168,6705,5680,3420,6706,5242,4407,6066,3812,5757,5090,5954,4672,4525,3481,5681,\n4618,5395,5354,5316,5955,6439,4962,6707,4526,6440,3465,4673,6067,6441,5682,6708,\n5435,5492,5758,5683,4619,4571,4674,4804,4893,4686,5493,4753,6233,6068,4269,6442,\n6234,5032,4705,5146,5243,5208,5848,6235,6443,4963,5033,4640,4226,6236,5849,3387,\n6444,6445,4436,4437,5850,4843,5494,4785,4894,6709,4361,6710,5091,5956,3331,6237,\n4987,5549,6069,6711,4342,3517,4473,5317,6070,6712,6071,4706,6446,5017,5355,6713,\n6714,4988,5436,6447,4734,5759,6715,4735,4547,4456,4754,6448,5851,6449,6450,3547,\n5852,5318,6451,6452,5092,4205,6716,6238,4620,4219,5611,6239,6072,4481,5760,5957,\n5958,4059,6240,6453,4227,4537,6241,5761,4030,4186,5244,5209,3761,4457,4876,3337,\n5495,5181,6242,5959,5319,5612,5684,5853,3493,5854,6073,4169,5613,5147,4895,6074,\n5210,6717,5182,6718,3830,6243,2798,3841,6075,6244,5855,5614,3604,4606,5496,5685,\n5118,5356,6719,6454,5960,5357,5961,6720,4145,3935,4621,5119,5962,4261,6721,6455,\n4786,5963,4375,4582,6245,6246,6247,6076,5437,4877,5856,3376,4380,6248,4160,6722,\n5148,6456,5211,6457,6723,4718,6458,6724,6249,5358,4044,3297,6459,6250,5857,5615,\n5497,5245,6460,5498,6725,6251,6252,5550,3793,5499,2959,5396,6461,6462,4572,5093,\n5500,5964,3806,4146,6463,4426,5762,5858,6077,6253,4755,3967,4220,5965,6254,4989,\n5501,6464,4352,6726,6078,4764,2290,5246,3906,5438,5283,3767,4964,2861,5763,5094,\n6255,6256,4622,5616,5859,5860,4707,6727,4285,4708,4824,5617,6257,5551,4787,5212,\n4965,4935,4687,6465,6728,6466,5686,6079,3494,4413,2995,5247,5966,5618,6729,5967,\n5764,5765,5687,5502,6730,6731,6080,5397,6467,4990,6258,6732,4538,5060,5619,6733,\n4719,5688,5439,5018,5149,5284,5503,6734,6081,4607,6259,5120,3645,5861,4583,6260,\n4584,4675,5620,4098,5440,6261,4863,2379,3306,4585,5552,5689,4586,5285,6735,4864,\n6736,5286,6082,6737,4623,3010,4788,4381,4558,5621,4587,4896,3698,3161,5248,4353,\n4045,6262,3754,5183,4588,6738,6263,6739,6740,5622,3936,6741,6468,6742,6264,5095,\n6469,4991,5968,6743,4992,6744,6083,4897,6745,4256,5766,4307,3108,3968,4444,5287,\n3889,4343,6084,4510,6085,4559,6086,4898,5969,6746,5623,5061,4919,5249,5250,5504,\n5441,6265,5320,4878,3242,5862,5251,3428,6087,6747,4237,5624,5442,6266,5553,4539,\n6748,2585,3533,5398,4262,6088,5150,4736,4438,6089,6267,5505,4966,6749,6268,6750,\n6269,5288,5554,3650,6090,6091,4624,6092,5690,6751,5863,4270,5691,4277,5555,5864,\n6752,5692,4720,4865,6470,5151,4688,4825,6753,3094,6754,6471,3235,4653,6755,5213,\n5399,6756,3201,4589,5865,4967,6472,5866,6473,5019,3016,6757,5321,4756,3957,4573,\n6093,4993,5767,4721,6474,6758,5625,6759,4458,6475,6270,6760,5556,4994,5214,5252,\n6271,3875,5768,6094,5034,5506,4376,5769,6761,2120,6476,5253,5770,6762,5771,5970,\n3990,5971,5557,5558,5772,6477,6095,2787,4641,5972,5121,6096,6097,6272,6763,3703,\n5867,5507,6273,4206,6274,4789,6098,6764,3619,3646,3833,3804,2394,3788,4936,3978,\n4866,4899,6099,6100,5559,6478,6765,3599,5868,6101,5869,5870,6275,6766,4527,6767\n];\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\nvar TypeError = global.TypeError;\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CodingStateMachine = require('./codingstatemachine');\nvar CharSetProber = require('./charsetprober');\nvar constants = require('./constants');\nvar UTF8SMModel = require('./mbcssm/utf8');\n\nfunction UTF8Prober() {\n    CharSetProber.apply(this);\n\n    var ONE_CHAR_PROB = 0.5;\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(UTF8SMModel);\n        self.reset();\n    }\n\n    this.reset = function() {\n        UTF8Prober.prototype.reset.apply(this);\n        this._mCodingSM.reset();\n        this._mNumOfMBChar = 0;\n        this._mMBCharLen = 0;\n        this._mFullLen = 0;\n        this._mBasicAsciiLen = 0;\n    }\n\n    this.getCharsetName = function() {\n        return \"UTF-8\";\n    }\n\n    this.feed = function(aBuf) {\n        this._mFullLen += aBuf.length;\n        for( var i = 0, c; i < aBuf.length; i++ ) {\n            c = aBuf[i];\n            var codingState = this._mCodingSM.nextState(c);\n            if( codingState == constants.error ) {\n                this._mState = constants.notMe;\n                break;\n            } else if( codingState == constants.itsMe ) {\n                this._mState = constants.foundIt;\n                break;\n            } else if( codingState == constants.start ) {\n                if( this._mCodingSM.getCurrentCharLen() >= 2 ) {\n                    this._mNumOfMBChar++;\n                    this._mMBCharLen += this._mCodingSM.getCurrentCharLen();\n                } else if( c.charCodeAt(0) < 128 ) { // codes higher than 127 are extended ASCII\n                    this._mBasicAsciiLen++;\n                }\n            }\n        }\n\n        if( this.getState() == constants.detecting ) {\n            if( this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\n                this._mState = constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var unlike = 0.99;\n        var mbCharRatio = 0;\n        var nonBasciAsciiLen = (this._mFullLen - this._mBasicAsciiLen);\n        if( nonBasciAsciiLen > 0 ) {\n            mbCharRatio = this._mMBCharLen / nonBasciAsciiLen;\n        }\n        if( this._mNumOfMBChar < 6 && mbCharRatio <= 0.6 ) {\n            unlike *= Math.pow(ONE_CHAR_PROB, this._mNumOfMBChar);\n            return 1 - unlike;\n        } else {\n            return unlike;\n        }\n    }\n\n    init();\n}\nUTF8Prober.prototype = new CharSetProber();\n\nmodule.exports = UTF8Prober;\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar constants = require('./constants')\n\nfunction CodingStateMachine(sm) {\n    var self = this;\n\n    function init(sm) {\n        self._mModel = sm;\n        self._mCurrentBytePos = 0;\n        self._mCurrentCharLen = 0;\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mCurrentState = constants.start;\n    }\n\n    this.nextState = function(c) {\n        // for each byte we get its class\n        // if it is first byte, we also get byte length\n        var byteCls = this._mModel.classTable[c.charCodeAt(0)];\n        if( this._mCurrentState == constants.start ) {\n            this._mCurrentBytePos = 0;\n            this._mCurrentCharLen = this._mModel.charLenTable[byteCls];\n        }\n        // from byte's class and stateTable, we get its next state\n        this._mCurrentState = this._mModel.stateTable[this._mCurrentState * this._mModel.classFactor + byteCls];\n        this._mCurrentBytePos++;\n        return this._mCurrentState;\n    }\n\n    this.getCurrentCharLen = function() {\n        return this._mCurrentCharLen;\n    }\n\n    this.getCodingStateMachine = function() {\n        return this._mModel.name;\n    }\n\n    init(sm);\n}\n\nmodule.exports = CodingStateMachine\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar un$Join = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n\n// Character Mapping Table:\nexports.Latin7_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  // 40\n 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  // 50\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  // 60\n 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  // 70\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 80\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 90\n253,233, 90,253,253,253,253,253,253,253,253,253,253, 74,253,253,  // a0\n253,253,253,253,247,248, 61, 36, 46, 71, 73,253, 54,253,108,123,  // b0\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  // c0\n 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  // d0\n124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  // e0\n  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253   // f0\n];\n\nexports.win1253_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  // 40\n 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  // 50\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  // 60\n 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  // 70\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 80\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 90\n253,233, 61,253,253,253,253,253,253,253,253,253,253, 74,253,253,  // a0\n253,253,253,253,247,253,253, 36, 46, 71, 73,253, 54,253,108,123,  // b0\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  // c0\n 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  // d0\n124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  // e0\n  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253   // f0\n]\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 98.2851%\n// first 1024 sequences:1.7001%\n// rest  sequences:     0.0359%\n// negative sequences:  0.0148%\nexports.GreekLangModel = [\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,\n3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\n0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,\n2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,\n0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,\n2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,\n2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,\n0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,\n2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,\n0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,\n3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,\n3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,\n2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,\n2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,\n0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,\n0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,\n0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,\n0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,\n0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,\n0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,\n0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,\n0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,\n0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,\n0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,\n0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,\n0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,\n0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,\n0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,\n0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,\n0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,\n0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,\n0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,\n0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,\n0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,\n0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,\n0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,\n0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,\n0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,\n0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,\n0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,\n0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,\n0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,\n0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,\n0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\n0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,\n0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,\n0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n];\n\nexports.Latin7GreekModel = {\n    \"charToOrderMap\"        : exports.Latin7_CharToOrderMap,\n    \"precedenceMatrix\"      : exports.GreekLangModel,\n    \"mTypicalPositiveRatio\" : 0.982851,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"ISO-8859-7\"\n};\n\nexports.Win1253GreekModel = {\n    \"charToOrderMap\"        : exports.win1253_CharToOrderMap,\n    \"precedenceMatrix\"      : exports.GreekLangModel,\n    \"mTypicalPositiveRatio\" : 0.982851,\n    \"keepEnglishLetter\"     : false,\n    \"charsetName\"           : \"windows-1253\"\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar UniversalDetector = require('./universaldetector');\nvar setLogger = require('./logger').setLogger;\n\nexports.detect = function(buffer, options) {\n    var u = runUniversalDetector(buffer, options);\n    return u.result;\n}\nexports.detectAll = function(buffer, options) {\n    var u = runUniversalDetector(buffer, options);\n    return u.results;\n}\nexports.UniversalDetector = UniversalDetector;\nexports.enableDebug = function() {\n    setLogger(console.log.bind(console));\n}\n\nfunction runUniversalDetector(buffer, options) {\n    var u = new UniversalDetector(options);\n    u.reset();\n    if( typeof Buffer == 'function' && buffer instanceof Buffer ) {\n        u.feed(buffer.toString('binary'));\n    } else {\n        u.feed(buffer);\n    }\n    u.close();\n    return u;\n}","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar jisfreq = require('./jisfreq');\nvar euctwfreq = require('./euctwfreq');\nvar euckrfreq = require('./euckrfreq');\nvar gb2312freq = require('./gb2312freq');\nvar big5freq = require('./big5freq');\n\nfunction CharDistributionAnalysis() {\n    var ENOUGH_DATA_THRESHOLD = 1024;\n    var SURE_YES = 0.99;\n    var SURE_NO = 0.01;\n    var MINIMUM_DATA_THRESHOLD = 3;\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = null; // Mapping table to get frequency order from char order (get from GetOrder())\n        self._mTableSize = null; // Size of above table\n        self._mTypicalDistributionRatio = null; // This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail.\n        self.reset();\n    }\n\n    /**\n     * reset analyser, clear any state\n     */\n    this.reset = function() {\n        this._mDone = false; // If this flag is set to constants.True, detection is done and conclusion has been made\n        this._mTotalChars = 0; // Total characters encountered\n        this._mFreqChars = 0; // The number of characters whose frequency order is less than 512\n    }\n\n    /**\n     * feed a character with known length\n     */\n    this.feed = function(aStr, aCharLen) {\n        if( aCharLen == 2 ) {\n            // we only care about 2-bytes character in our distribution analysis\n            var order = this.getOrder(aStr);\n        } else {\n            order = -1;\n        }\n        if( order >= 0 ) {\n            this._mTotalChars++;\n            // order is valid\n            if( order < this._mTableSize ) {\n                if( 512 > this._mCharToFreqOrder[order] ) {\n                    this._mFreqChars++;\n                }\n            }\n        }\n    }\n\n    /**\n     * return confidence based on existing data\n     */\n    this.getConfidence = function() {\n        // if we didn't receive any character in our consideration range, return negative answer\n        if( this._mTotalChars <= 0 || this._mFreqChars <= MINIMUM_DATA_THRESHOLD) {\n            return SURE_NO;\n        }\n        if( this._mTotalChars != this._mFreqChars ) {\n            var r = this._mFreqChars / ((this._mTotalChars - this._mFreqChars) * this._mTypicalDistributionRatio);\n            if( r < SURE_YES ) {\n                return r;\n            }\n        }\n\n        // normalize confidence (we don't want to be 100% sure)\n        return SURE_YES;\n    }\n\n    this.gotEnoughData = function() {\n        // It is not necessary to receive all data to draw conclusion. For charset detection,\n        // certain amount of data is enough\n        return this._mTotalChars > ENOUGH_DATA_THRESHOLD;\n    }\n\n    this.getOrder = function(aStr) {\n        // We do not handle characters based on the original encoding string, but\n        // convert this encoding string to a number, here called order.\n        // This allows multiple encodings of a language to share one frequency table.\n        return -1;\n    }\n\n    init();\n}\n\nexports.CharDistributionAnalysis = CharDistributionAnalysis\n\nfunction EUCTWDistributionAnalysis() {\n    CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = euctwfreq.EUCTWCharToFreqOrder;\n        self._mTableSize = euctwfreq.EUCTW_TABLE_SIZE;\n        self._mTypicalDistributionRatio = euctwfreq.EUCTW_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for euc-TW encoding, we are interested\n        //   first  byte range: 0xc4 -- 0xfe\n        //   second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xC4 ) {\n            return 94 * (aStr.charCodeAt(0) - 0xC4) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\nEUCTWDistributionAnalysis.prototype = new CharDistributionAnalysis();\n\nexports.EUCTWDistributionAnalysis = EUCTWDistributionAnalysis\n\nfunction EUCKRDistributionAnalysis() {\n    CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = euckrfreq.EUCKRCharToFreqOrder;\n        self._mTableSize = euckrfreq.EUCKR_TABLE_SIZE;\n        self._mTypicalDistributionRatio = euckrfreq.EUCKR_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for euc-KR encoding, we are interested\n        //   first  byte range: 0xb0 -- 0xfe\n        //   second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xB0 ) {\n            return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\nEUCKRDistributionAnalysis.prototype = new CharDistributionAnalysis();\n\nexports.EUCKRDistributionAnalysis = EUCKRDistributionAnalysis\n\nfunction GB2312DistributionAnalysis() {\n    CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = gb2312freq.GB2312CharToFreqOrder;\n        self._mTableSize = gb2312freq.GB2312_TABLE_SIZE;\n        self._mTypicalDistributionRatio = gb2312freq.GB2312_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for GB2312 encoding, we are interested\n        //  first  byte range: 0xb0 -- 0xfe\n        //  second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xB0 && aStr.charCodeAt(1) >= 0xA1 ) {\n            return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\nGB2312DistributionAnalysis.prototype = new CharDistributionAnalysis();\n\nexports.GB2312DistributionAnalysis = GB2312DistributionAnalysis\n\nfunction Big5DistributionAnalysis() {\n    CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = big5freq.Big5CharToFreqOrder;\n        self._mTableSize = big5freq.BIG5_TABLE_SIZE;\n        self._mTypicalDistributionRatio = big5freq.BIG5_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for big5 encoding, we are interested\n        //   first  byte range: 0xa4 -- 0xfe\n        //   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0xA4 ) {\n            if( aStr.charCodeAt(1) >= 0xA1 ) {\n                return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0xA1 + 63;\n            } else {\n                return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0x40;\n            }\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\nBig5DistributionAnalysis.prototype = new CharDistributionAnalysis();\n\nexports.Big5DistributionAnalysis = Big5DistributionAnalysis\n\nfunction SJISDistributionAnalysis() {\n    CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jisfreq.JISCharToFreqOrder;\n        self._mTableSize = jisfreq.JIS_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for sjis encoding, we are interested\n        //   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xef\n        //   second byte range: 0x40 -- 0x7e,  0x80 -- 0xfc\n        // no validation needed here. State machine has done that\n        if( aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F ) {\n            var order = 188 * (aStr.charCodeAt(0) - 0x81);\n        } else if( aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xEF ) {\n            order = 188 * (aStr.charCodeAt(0) - 0xE0 + 31);\n        } else {\n            return -1;\n        }\n        order += aStr.charCodeAt(1) - 0x40;\n        if( aStr.charCodeAt(1) < 0x40 || aStr.charCodeAt(1) === 0x7F || aStr.charCodeAt(1) > 0xFC) {\n            order = -1;\n        }\n        return order;\n    }\n\n    init();\n}\nSJISDistributionAnalysis.prototype = new CharDistributionAnalysis();\n\nexports.SJISDistributionAnalysis = SJISDistributionAnalysis\n\nfunction EUCJPDistributionAnalysis() {\n    CharDistributionAnalysis.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCharToFreqOrder = jisfreq.JISCharToFreqOrder;\n        self._mTableSize = jisfreq.JIS_TABLE_SIZE;\n        self._mTypicalDistributionRatio = jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO;\n    }\n\n    this.getOrder = function(aStr) {\n        // for euc-JP encoding, we are interested\n        //   first  byte range: 0xa0 -- 0xfe\n        //   second byte range: 0xa1 -- 0xfe\n        // no validation needed here. State machine has done that\n        if( aStr[0] >= \"\\xA0\" ) {\n            return 94 * (aStr.charCodeAt(0) - 0xA1) + aStr.charCodeAt(1) - 0xA1;\n        } else {\n            return -1;\n        }\n    }\n\n    init();\n}\nEUCJPDistributionAnalysis.prototype = new CharDistributionAnalysis();\n\nexports.EUCJPDistributionAnalysis = EUCJPDistributionAnalysis\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar String = global.String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar un$ToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return un$ToFixed(0.00008, 3) !== '0.000' ||\n    un$ToFixed(0.9, 0) !== '1' ||\n    un$ToFixed(1.255, 2) !== '1.25' ||\n    un$ToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  un$ToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"music\"},[_c('div',{staticClass:\"music-content\"},[_c('div',{staticClass:\"music-left\"},[_c('music-btn',{on:{\"onClickLyric\":_vm.handleOpenLyric}}),_c('keep-alive',[(_vm.$route.meta.keepAlive)?_c('router-view',{staticClass:\"music-list\"}):_vm._e()],1),(!_vm.$route.meta.keepAlive)?_c('router-view',{key:_vm.$route.path,staticClass:\"music-list\"}):_vm._e()],1)]),_c('div',{staticClass:\"music-bar\",class:{ disable: !_vm.musicReady || !_vm.currentMusic.id }},[_c('div',{staticClass:\"music-bar-btns\"},[_c('mm-icon',{staticClass:\"pointer\",attrs:{\"type\":\"prev\",\"size\":36,\"title\":\"上一曲 Ctrl + Left\"},on:{\"click\":_vm.prev}}),_c('div',{staticClass:\"control-play pointer\",attrs:{\"title\":\"播放暂停 Ctrl + Space\"},on:{\"click\":_vm.play}},[_c('mm-icon',{attrs:{\"type\":_vm.playing ? 'pause' : 'play',\"size\":24}})],1),_c('mm-icon',{staticClass:\"pointer\",attrs:{\"type\":\"next\",\"size\":36,\"title\":\"下一曲 Ctrl + Right\"},on:{\"click\":_vm.next}})],1),_c('div',{staticClass:\"music-music\"},[(_vm.currentMusic && _vm.currentMusic.id)?_c('div',{staticClass:\"music-bar-info\"},[(_vm.currentMusic && _vm.currentMusic.id)?[_vm._v(\" \"+_vm._s(_vm.currentMusic.name)+\" \"),(_vm.currentMusic.singer)?_c('span',[_vm._v(\"- \"+_vm._s(_vm.currentMusic.singer))]):_vm._e()]:_vm._e()],2):_vm._e(),(_vm.currentMusic.id && _vm.currentMusic.duration)?_c('div',{staticClass:\"music-bar-time\"},[_vm._v(\" \"+_vm._s(_vm._f(\"format\")(_vm.currentTime))+\"/\"+_vm._s(_vm._f(\"format\")(_vm.currentMusic.duration % 3600))+\" \")]):_vm._e(),_c('mm-progress',{staticClass:\"music-progress\",attrs:{\"percent\":_vm.percentMusic,\"percent-progress\":_vm.currentProgress},on:{\"percentChange\":_vm.progressMusic,\"percentChangeEnd\":_vm.progressMusicEnd}})],1),_c('mm-icon',{staticClass:\"icon-color pointer mode\",attrs:{\"type\":_vm.getModeIconType(),\"title\":_vm.getModeIconTitle(),\"size\":30},on:{\"click\":_vm.modeChange}}),_c('div',{staticClass:\"music-bar-volume\",attrs:{\"title\":\"音量加减 [Ctrl + Up / Down]\"}},[_c('volume',{attrs:{\"volume\":_vm.volume},on:{\"volumeChange\":_vm.volumeChange}})],1)],1),_c('div',{staticClass:\"mmPlayer-bg\",style:({ backgroundImage: _vm.picUrl })}),_c('div',{staticClass:\"mmPlayer-mask\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import axios from 'axios'\r\nimport Vue from 'vue'\r\n\r\nconst request = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API_URL\r\n})\r\n\r\nrequest.interceptors.response.use(\r\n  response => {\r\n    window.response = response\r\n\r\n    if (response.status === 200 && response.data.code === 200) {\r\n      return response.data\r\n    }\r\n    return Promise.reject(response)\r\n  },\r\n  error => {\r\n    Vue.prototype.$mmToast(\r\n      error.response ? error.response.data.message : error.message\r\n    )\r\n    return error\r\n  }\r\n)\r\n\r\nexport default request\r\n","import axios from '@/utils/axios'\r\nimport { defaultLimit } from '@/config'\r\nimport { formatTopSongs } from '@/utils/song'\r\n\r\naxios.defaults.baseURL = process.env.VUE_APP_BASE_API_URL\r\n\r\n// 排行榜列表\r\nexport function getToplistDetail() {\r\n  return axios.get('/toplist/detail')\r\n}\r\n\r\n// 推荐歌单\r\nexport function getPersonalized() {\r\n  return axios.get('/personalized')\r\n}\r\n\r\n// 歌单详情\r\nexport function getPlaylistDetail(id) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get('/playlist/detail', {\r\n        params: { id }\r\n      })\r\n      .then(({ playlist }) => playlist || {})\r\n      .then(playlist => {\r\n        const { trackIds, tracks } = playlist\r\n        if (!Array.isArray(trackIds)) {\r\n          reject(new Error('获取歌单详情失败'))\r\n          return\r\n        }\r\n        // 过滤完整歌单 如排行榜\r\n        if (tracks.length === trackIds.length) {\r\n          playlist.tracks = formatTopSongs(playlist.tracks)\r\n          resolve(playlist)\r\n          return\r\n        }\r\n        // 限制歌单详情最大 500\r\n        const ids = trackIds\r\n          .slice(0, 500)\r\n          .map(v => v.id)\r\n          .toString()\r\n        getMusicDetail(ids).then(({ songs }) => {\r\n          playlist.tracks = formatTopSongs(songs)\r\n          resolve(playlist)\r\n        })\r\n      })\r\n  })\r\n}\r\n\r\n// 搜索\r\nexport function search(keywords, page = 0, limit = defaultLimit) {\r\n  return axios.get('/search', {\r\n    params: {\r\n      offset: page * limit,\r\n      limit: limit,\r\n      keywords\r\n    }\r\n  })\r\n}\r\n\r\n// 热搜\r\nexport function searchHot() {\r\n  return axios.get('/search/hot')\r\n}\r\n\r\n// 获取用户歌单详情\r\nexport function getUserPlaylist(uid) {\r\n  return axios.get('/user/playlist', {\r\n    params: {\r\n      uid\r\n    }\r\n  })\r\n}\r\n\r\n// 获取歌曲详情\r\nexport function getMusicDetail(ids) {\r\n  return axios.get('/song/detail', {\r\n    params: {\r\n      ids\r\n    }\r\n  })\r\n}\r\n\r\n// 获取音乐是否可以用\r\nexport function getCheckMusic(id) {\r\n  return axios.get('/check/music', {\r\n    params: {\r\n      id\r\n    }\r\n  })\r\n}\r\n\r\n// 获取音乐地址\r\nexport function getMusicUrl(id) {\r\n  return axios.get('/song/url', {\r\n    params: {\r\n      id\r\n    }\r\n  })\r\n}\r\n\r\n// 获取歌词\r\nexport function getLyric(id) {\r\n  const url = '/lyric'\r\n  return axios.get(url, {\r\n    params: {\r\n      id\r\n    }\r\n  })\r\n}\r\n\r\n// 获取音乐评论\r\nexport function getComment(id, page, limit = defaultLimit) {\r\n  return axios.get('/comment/music', {\r\n    params: {\r\n      offset: page * limit,\r\n      limit: limit,\r\n      id\r\n    }\r\n  })\r\n}\r\n","import { playMode } from '@/config'\r\n\r\n// 重试次数\r\nlet retry = 1\r\n\r\nconst mmPlayerMusic = {\r\n  initAudio(that) {\r\n    const ele = that.audioEle\r\n    // 音频缓冲事件\r\n    ele.onprogress = () => {\r\n      try {\r\n        if (ele.buffered.length > 0) {\r\n          const duration = that.currentMusic.duration\r\n          let buffered = 0\r\n          ele.buffered.end(0)\r\n          buffered =\r\n            ele.buffered.end(0) > duration ? duration : ele.buffered.end(0)\r\n          that.currentProgress = buffered / duration\r\n        }\r\n      } catch (e) {}\r\n    }\r\n    // 开始播放音乐\r\n    ele.onplay = () => {\r\n      let timer\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => {\r\n        that.musicReady = true\r\n      }, 100)\r\n    }\r\n    // 获取当前播放时间\r\n    ele.ontimeupdate = () => {\r\n      that.currentTime = ele.currentTime\r\n    }\r\n    // 当前音乐播放完毕\r\n    ele.onended = () => {\r\n      if (that.mode === playMode.loop) {\r\n        that.loop()\r\n      } else {\r\n        that.next()\r\n      }\r\n    }\r\n    // 音乐播放出错\r\n    ele.onerror = () => {\r\n      if (retry === 0) {\r\n        let toastText = '当前音乐不可播放，已自动播放下一曲'\r\n        if (that.playlist.length === 1) {\r\n          toastText = '没有可播放的音乐哦~'\r\n        }\r\n        that.$mmToast(toastText)\r\n        that.next(true)\r\n      } else {\r\n        // eslint-disable-next-line no-console\r\n        console.log('重试一次')\r\n        retry -= 1\r\n        ele.url = that.currentMusic.url\r\n        ele.load()\r\n      }\r\n      // console.log('播放出错啦！')\r\n    }\r\n    // 音乐进度拖动大于加载时重载音乐\r\n    ele.onstalled = () => {\r\n      ele.load()\r\n      that.setPlaying(false)\r\n      let timer\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => {\r\n        that.setPlaying(true)\r\n      }, 10)\r\n    }\r\n    // 将能播放的音乐加入播放历史\r\n    ele.oncanplay = () => {\r\n      retry = 1\r\n      if (\r\n        that.historyList.length === 0 ||\r\n        that.currentMusic.id !== that.historyList[0].id\r\n      ) {\r\n        that.setHistory(that.currentMusic)\r\n      }\r\n    }\r\n    // 音频数据不可用时\r\n    ele.onstalled = () => {\r\n      ele.load()\r\n      that.setPlaying(false)\r\n      let timer\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => {\r\n        that.setPlaying(true)\r\n      }, 10)\r\n    }\r\n    // 当音频已暂停时\r\n    ele.onpause = () => {\r\n      that.setPlaying(false)\r\n    }\r\n  }\r\n}\r\n\r\nexport default mmPlayerMusic\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"mmProgress\",staticClass:\"mmProgress\",on:{\"click\":_vm.barClick}},[_c('div',{staticClass:\"mmProgress-bar\"}),_c('div',{ref:\"mmPercentProgress\",staticClass:\"mmProgress-outer\"}),_c('div',{ref:\"mmProgressInner\",staticClass:\"mmProgress-inner\"},[_c('div',{staticClass:\"mmProgress-dot\",on:{\"mousedown\":_vm.barDown,\"touchstart\":function($event){$event.preventDefault();return _vm.barDown.apply(null, arguments)}}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!--进度条拖动-->\n  <div ref=\"mmProgress\" class=\"mmProgress\" @click=\"barClick\">\n    <div class=\"mmProgress-bar\"></div>\n    <div ref=\"mmPercentProgress\" class=\"mmProgress-outer\"></div>\n    <div ref=\"mmProgressInner\" class=\"mmProgress-inner\">\n      <div\n        class=\"mmProgress-dot\"\n        @mousedown=\"barDown\"\n        @touchstart.prevent=\"barDown\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst dotWidth = 10\nexport default {\n  name: 'MmProgress',\n  props: {\n    // 进度值一\n    percent: {\n      type: [Number],\n      default: 0\n    },\n    // 进度值二（歌曲缓冲进度用）\n    percentProgress: {\n      type: [Number],\n      default: 0\n    }\n  },\n  data() {\n    return {\n      move: {\n        status: false, // 是否可拖动\n        startX: 0, // 记录最开始点击的X坐标\n        left: 0 // 记录当前已经移动的距离\n      }\n    }\n  },\n  watch: {\n    percent(newPercent) {\n      if (newPercent >= 0 && !this.move.status) {\n        const barWidth = this.$refs.mmProgress.clientWidth - dotWidth\n        const offsetWidth = newPercent * barWidth\n        this.moveSilde(offsetWidth)\n      }\n    },\n    percentProgress(newValue) {\n      let offsetWidth = this.$refs.mmProgress.clientWidth * newValue\n      this.$refs.mmPercentProgress.style.width = `${offsetWidth}px`\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.bindEvents()\n      const barWidth = this.$refs.mmProgress.clientWidth - dotWidth\n      const offsetWidth = this.percent * barWidth\n      this.moveSilde(offsetWidth)\n    })\n  },\n  beforeDestroy() {\n    this.unbindEvents()\n  },\n  methods: {\n    // 添加绑定事件\n    bindEvents() {\n      document.addEventListener('mousemove', this.barMove)\n      document.addEventListener('mouseup', this.barUp)\n\n      document.addEventListener('touchmove', this.barMove)\n      document.addEventListener('touchend', this.barUp)\n    },\n    // 移除绑定事件\n    unbindEvents() {\n      document.removeEventListener('mousemove', this.barMove)\n      document.removeEventListener('mouseup', this.barUp)\n\n      document.removeEventListener('touchmove', this.barMove)\n      document.removeEventListener('touchend', this.barUp)\n    },\n    // 点击事件\n    barClick(e) {\n      let rect = this.$refs.mmProgress.getBoundingClientRect()\n      let offsetWidth = Math.min(\n        this.$refs.mmProgress.clientWidth - dotWidth,\n        Math.max(0, e.clientX - rect.left)\n      )\n      this.moveSilde(offsetWidth)\n      this.commitPercent(true)\n    },\n    // 鼠标按下事件\n    barDown(e) {\n      this.move.status = true\n      this.move.startX = e.clientX || e.touches[0].pageX\n      this.move.left = this.$refs.mmProgressInner.clientWidth\n    },\n    // 鼠标/触摸移动事件\n    barMove(e) {\n      if (!this.move.status) {\n        return false\n      }\n      e.preventDefault()\n      let endX = e.clientX || e.touches[0].pageX\n      let dist = endX - this.move.startX\n      let offsetWidth = Math.min(\n        this.$refs.mmProgress.clientWidth - dotWidth,\n        Math.max(0, this.move.left + dist)\n      )\n      this.moveSilde(offsetWidth)\n      this.commitPercent()\n    },\n    // 鼠标/触摸释放事件\n    barUp(e) {\n      if (this.move.status) {\n        this.commitPercent(true)\n        this.move.status = false\n      }\n    },\n    // 移动滑块\n    moveSilde(offsetWidth) {\n      this.$refs.mmProgressInner.style.width = `${offsetWidth}px`\n    },\n    // 修改 percent\n    commitPercent(isEnd = false) {\n      const { mmProgress, mmProgressInner } = this.$refs\n      const lineWidth = mmProgress.clientWidth - dotWidth\n      const percent = mmProgressInner.clientWidth / lineWidth\n      this.$emit(isEnd ? 'percentChangeEnd' : 'percentChange', percent)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.mmProgress {\n  position: relative;\n  padding: 5px;\n  user-select: none;\n  cursor: pointer;\n  overflow: hidden;\n  .mmProgress-bar {\n    height: 2px;\n    width: 100%;\n    background: @bar_color;\n  }\n  .mmProgress-outer {\n    position: absolute;\n    top: 50%;\n    left: 5px;\n    display: inline-block;\n    width: 0;\n    height: 2px;\n    margin-top: -1px;\n    background: rgba(255, 255, 255, 0.2);\n  }\n  .mmProgress-inner {\n    position: absolute;\n    top: 50%;\n    left: 5px;\n    display: inline-block;\n    width: 0;\n    height: 2px;\n    margin-top: -1px;\n    background: @line_color;\n    .mmProgress-dot {\n      position: absolute;\n      top: 50%;\n      right: -5px;\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background-color: @dot_color;\n      transform: translateY(-50%);\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mm-progress.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mm-progress.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mm-progress.vue?vue&type=template&id=5e1c992b&\"\nimport script from \"./mm-progress.vue?vue&type=script&lang=js&\"\nexport * from \"./mm-progress.vue?vue&type=script&lang=js&\"\nimport style0 from \"./mm-progress.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"music-btn\"},[_c('input',{ref:\"file\",staticClass:\"input-file\",attrs:{\"id\":\"file\",\"type\":\"file\",\"name\":\"file\",\"accept\":\".csv\"},on:{\"change\":_vm.uploadFile}}),_c('label',{attrs:{\"for\":\"file\"}},[_vm._v(\"添加歌曲\")]),_c('router-link',{attrs:{\"to\":\"/music/playlist\",\"tag\":\"span\"}},[_vm._v(\"正在播放\")]),_c('router-link',{attrs:{\"to\":\"/music/historylist\",\"tag\":\"span\"}},[_vm._v(\"我听过的\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!--选项-->\r\n  <div class=\"music-btn\">\r\n    <input id=\"file\" ref=\"file\" class=\"input-file\" type=\"file\" name=\"file\" accept=\".csv\" @change=\"uploadFile\" />\r\n    <label for=\"file\">添加歌曲</label>\r\n    <router-link to=\"/music/playlist\" tag=\"span\">正在播放</router-link>\r\n    <router-link to=\"/music/historylist\" tag=\"span\">我听过的</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\nimport Papa from 'papaparse' // 解析cvs插件 市面上使用较多的\r\nimport jschardet from 'jschardet' // 编码识别\r\n\r\nexport default {\r\n  methods: {\r\n    // 检查编排\r\n    checkEncoding(base64Str) {\r\n      // 这种方式得到的是一种二进制串\r\n      const str = atob(base64Str.split(';base64,')[1]) // atob  方法 Window 对象 定义和用法 atob() 方法用于解码使用 base-64 编码的字符\r\n      // 要用二进制格式\r\n      let encoding = jschardet.detect(str)\r\n      encoding = encoding.encoding\r\n      // 有时候会识别错误\r\n      if (encoding === 'windows-1252') {\r\n        encoding = 'ANSI'\r\n      }\r\n      return encoding\r\n    },\r\n    uploadFile() {\r\n      let reads = new FileReader()\r\n      const file = document.getElementById('file').files[0]\r\n      const _this = this;\r\n      reads.readAsDataURL(file, 'utf-8')\r\n      reads.onload = function(e) {\r\n        // const data = e.target.result.replace(/\\r\\n/g, '\\n').split('\\n').filter(a => a).map(item => item.split(',').filter(a => a))\r\n        // console.log(data)\r\n        const data = e.target.result\r\n        const encoding = _this.checkEncoding(data)\r\n\r\n        Papa.parse(file, {\r\n          encoding: encoding,\r\n          complete: function(results) {\r\n            const res = results.data\r\n            if (res[res.length - 1] === '') { // 去除最后的空行 有些解析数据尾部会多出空格\r\n              res.pop()\r\n            }\r\n\r\n            const data = res.filter(item => item.some(content => content)).map(item => item.map(content => content.replace(/\\n/g, '').replace(/\\r\\n/g, '')));\r\n            data.shift()\r\n\r\n            _this.setPlaylist({\r\n              list: data.map((item) => ({ name: item[0], url: item[1], id: item[1] }))\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    ...mapActions(['setPlaylist'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.input-file {\r\n  width: 0.1px;\r\n  height: 0.1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  z-index: -1;\r\n}\r\n.music-btn {\r\n  width: 100%;\r\n  height: 60px;\r\n  font-size: 0;\r\n  white-space: nowrap;\r\n  overflow-x: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n  label, span {\r\n    display: inline-block;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    margin-right: 8px;\r\n    padding: 0 23px;\r\n    border: 1px solid @btn_color;\r\n    color: @btn_color;\r\n    border-radius: 2px;\r\n    font-size: 14px;\r\n    line-height: 40px;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    &:hover,\r\n    &.active {\r\n      border-color: @btn_color_active;\r\n      color: @btn_color_active;\r\n    }\r\n  }\r\n  span {\r\n    &:nth-last-of-type(1) {\r\n      margin: 0;\r\n    }\r\n  }\r\n  @media (min-width: 960px) {\r\n    span.show-960,\r\n    label.show-960 {\r\n      display: none;\r\n    }\r\n  }\r\n  @media (max-width: 960px) {\r\n    span.show-960\r\n    label.show-960 {\r\n      display: inline-block;\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    height: 50px;\r\n    span, label {\r\n      height: 35px;\r\n      padding: 0 10px;\r\n      margin-right: 6px;\r\n      line-height: 35px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./music-btn.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./music-btn.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./music-btn.vue?vue&type=template&id=1d83fc82&scoped=true&\"\nimport script from \"./music-btn.vue?vue&type=script&lang=js&\"\nexport * from \"./music-btn.vue?vue&type=script&lang=js&\"\nimport style0 from \"./music-btn.vue?vue&type=style&index=0&id=1d83fc82&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1d83fc82\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"volume\"},[_c('mm-icon',{staticClass:\"pointer volume-icon\",attrs:{\"type\":_vm.getVolumeIconType(),\"size\":30},on:{\"click\":_vm.handleToggleVolume}}),_c('div',{staticClass:\"volume-progress-wrapper\"},[_c('mm-progress',{attrs:{\"percent\":_vm.volumeProgress},on:{\"percentChangeEnd\":_vm.handleVolumeChange,\"percentChange\":_vm.handleVolumeChange}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- 音量控制组件 -->\n<template>\n  <div class=\"volume\">\n    <mm-icon\n      class=\"pointer volume-icon\"\n      :type=\"getVolumeIconType()\"\n      :size=\"30\"\n      @click=\"handleToggleVolume\"\n    />\n    <div class=\"volume-progress-wrapper\">\n      <mm-progress\n        :percent=\"volumeProgress\"\n        @percentChangeEnd=\"handleVolumeChange\"\n        @percentChange=\"handleVolumeChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MmProgress from 'base/mm-progress/mm-progress'\n\nexport default {\n  name: 'Volume',\n  components: {\n    MmProgress\n  },\n  props: {\n    volume: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    volumeProgress() {\n      return this.volume\n    },\n    isMute: {\n      get() {\n        return this.volumeProgress === 0\n      },\n      set(newMute) {\n        const volume = newMute ? 0 : this.lastVolume\n        if (newMute) {\n          this.lastVolume = this.volumeProgress\n        }\n        this.handleVolumeChange(volume)\n      }\n    }\n  },\n  methods: {\n    getVolumeIconType() {\n      return this.isMute ? 'volume-off' : 'volume'\n    },\n    // 是否静音\n    handleToggleVolume() {\n      this.isMute = !this.isMute\n    },\n    handleVolumeChange(percent) {\n      this.$emit('volumeChange', percent)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.volume {\n  display: flex;\n  align-items: center;\n  width: 150px;\n  &-icon {\n    margin-right: 5px;\n    color: #fff;\n  }\n  &-progress-wrapper {\n    flex: 1;\n  }\n  @media (max-width: 768px) {\n    top: 2px;\n    width: 36px;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./volume.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./volume.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./volume.vue?vue&type=template&id=256fedce&scoped=true&\"\nimport script from \"./volume.vue?vue&type=script&lang=js&\"\nexport * from \"./volume.vue?vue&type=script&lang=js&\"\nimport style0 from \"./volume.vue?vue&type=style&index=0&id=256fedce&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"256fedce\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"music\">\r\n    <div class=\"music-content\">\r\n      <div class=\"music-left\">\r\n        <music-btn @onClickLyric=\"handleOpenLyric\" />\r\n        <keep-alive>\r\n          <router-view v-if=\"$route.meta.keepAlive\" class=\"music-list\" />\r\n        </keep-alive>\r\n        <router-view\r\n          v-if=\"!$route.meta.keepAlive\"\r\n          :key=\"$route.path\"\r\n          class=\"music-list\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!--播放器-->\r\n    <div\r\n      class=\"music-bar\"\r\n      :class=\"{ disable: !musicReady || !currentMusic.id }\"\r\n    >\r\n      <div class=\"music-bar-btns\">\r\n        <mm-icon\r\n          class=\"pointer\"\r\n          type=\"prev\"\r\n          :size=\"36\"\r\n          title=\"上一曲 Ctrl + Left\"\r\n          @click=\"prev\"\r\n        />\r\n        <div\r\n          class=\"control-play pointer\"\r\n          title=\"播放暂停 Ctrl + Space\"\r\n          @click=\"play\"\r\n        >\r\n          <mm-icon :type=\"playing ? 'pause' : 'play'\" :size=\"24\" />\r\n        </div>\r\n        <mm-icon\r\n          class=\"pointer\"\r\n          type=\"next\"\r\n          :size=\"36\"\r\n          title=\"下一曲 Ctrl + Right\"\r\n          @click=\"next\"\r\n        />\r\n      </div>\r\n      <div class=\"music-music\">\r\n        <div v-if=\"currentMusic && currentMusic.id\" class=\"music-bar-info\">\r\n          <template v-if=\"currentMusic && currentMusic.id\">\r\n            {{ currentMusic.name }}\r\n            <span v-if=\"currentMusic.singer\">- {{ currentMusic.singer }}</span>\r\n          </template>\r\n        </div>\r\n        <div v-if=\"currentMusic.id && currentMusic.duration\" class=\"music-bar-time\">\r\n          {{ currentTime | format }}/{{ currentMusic.duration % 3600 | format }}\r\n        </div>\r\n        <mm-progress\r\n          class=\"music-progress\"\r\n          :percent=\"percentMusic\"\r\n          :percent-progress=\"currentProgress\"\r\n          @percentChange=\"progressMusic\"\r\n          @percentChangeEnd=\"progressMusicEnd\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 播放模式 -->\r\n      <mm-icon\r\n        class=\"icon-color pointer mode\"\r\n        :type=\"getModeIconType()\"\r\n        :title=\"getModeIconTitle()\"\r\n        :size=\"30\"\r\n        @click=\"modeChange\"\r\n      />\r\n\r\n      <!-- 音量控制 -->\r\n      <div class=\"music-bar-volume\" title=\"音量加减 [Ctrl + Up / Down]\">\r\n        <volume :volume=\"volume\" @volumeChange=\"volumeChange\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!--遮罩-->\r\n    <div class=\"mmPlayer-bg\" :style=\"{ backgroundImage: picUrl }\"></div>\r\n    <div class=\"mmPlayer-mask\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLyric } from 'api'\r\nimport mmPlayerMusic from './mmPlayer'\r\nimport {\r\n  randomSortArray,\r\n  parseLyric,\r\n  format,\r\n  silencePromise\r\n} from '@/utils/util'\r\nimport { playMode, defaultBG } from '@/config'\r\nimport { getVolume, setVolume } from '@/utils/storage'\r\nimport { mapGetters, mapMutations, mapActions } from 'vuex'\r\n\r\nimport MmProgress from 'base/mm-progress/mm-progress'\r\nimport MusicBtn from 'components/music-btn/music-btn'\r\nimport Volume from 'components/volume/volume'\r\n\r\nexport default {\r\n  name: 'Music',\r\n  components: {\r\n    MmProgress,\r\n    MusicBtn,\r\n    Volume\r\n  },\r\n  filters: {\r\n    // 时间格式化\r\n    format\r\n  },\r\n  data() {\r\n    const volume = getVolume()\r\n    return {\r\n      musicReady: false, // 是否可以使用播放器\r\n      currentTime: 0, // 当前播放时间\r\n      currentProgress: 0, // 当前缓冲进度\r\n      lyricVisible: false, // 移动端歌词显示\r\n      lyric: [], // 歌词\r\n      nolyric: false, // 是否有歌词\r\n      lyricIndex: 0, // 当前播放歌词下标\r\n      isMute: false, // 是否静音\r\n      volume // 音量大小\r\n    }\r\n  },\r\n  computed: {\r\n    picUrl() {\r\n      return this.currentMusic.id && this.currentMusic.image\r\n        ? `url(${this.currentMusic.image}?param=300y300)`\r\n        : `url(${defaultBG})`\r\n    },\r\n    percentMusic() {\r\n      const duration = this.currentMusic.duration\r\n      return this.currentTime && duration ? this.currentTime / duration : 0\r\n    },\r\n    ...mapGetters([\r\n      'audioEle',\r\n      'mode',\r\n      'playing',\r\n      'playlist',\r\n      'orderList',\r\n      'currentIndex',\r\n      'currentMusic',\r\n      'historyList'\r\n    ])\r\n  },\r\n  watch: {\r\n    currentMusic(newMusic, oldMusic) {\r\n      if (!newMusic.id) {\r\n        this.lyric = []\r\n        return\r\n      }\r\n      if (newMusic.id === oldMusic.id) {\r\n        return\r\n      }\r\n      this.audioEle.src = newMusic.url\r\n      // 重置相关参数\r\n      this.lyricIndex = this.currentTime = this.currentProgress = 0\r\n      silencePromise(this.audioEle.play())\r\n      // this.$nextTick(() => {\r\n      //   this._getLyric(newMusic.id)\r\n      // })\r\n    },\r\n    playing(newPlaying) {\r\n      const audio = this.audioEle\r\n      this.$nextTick(() => {\r\n        newPlaying ? silencePromise(audio.play()) : audio.pause()\r\n        this.musicReady = true\r\n      })\r\n    },\r\n    currentTime(newTime) {\r\n      if (this.nolyric) {\r\n        return\r\n      }\r\n      let lyricIndex = 0\r\n      for (let i = 0; i < this.lyric.length; i++) {\r\n        if (newTime > this.lyric[i].time) {\r\n          lyricIndex = i\r\n        }\r\n      }\r\n      this.lyricIndex = lyricIndex\r\n    },\r\n    $route() {\r\n      this.lyricVisible = false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      mmPlayerMusic.initAudio(this)\r\n      this.initKeyDown()\r\n      this.volumeChange(this.volume)\r\n    })\r\n  },\r\n  methods: {\r\n    // 按键事件\r\n    initKeyDown() {\r\n      document.onkeydown = e => {\r\n        switch (e.ctrlKey && e.keyCode) {\r\n          case 32: // 播放暂停Ctrl + Space\r\n            this.play()\r\n            break\r\n          case 37: // 上一曲Ctrl + Left\r\n            this.prev()\r\n            break\r\n          case 38: // 音量加Ctrl + Up\r\n            let plus = Number((this.volume += 0.1).toFixed(1))\r\n            if (plus > 1) {\r\n              plus = 1\r\n            }\r\n            this.volumeChange(plus)\r\n            break\r\n          case 39: // 下一曲Ctrl + Right\r\n            this.next()\r\n            break\r\n          case 40: // 音量减Ctrl + Down\r\n            let reduce = Number((this.volume -= 0.1).toFixed(1))\r\n            if (reduce < 0) {\r\n              reduce = 0\r\n            }\r\n            this.volumeChange(reduce)\r\n            break\r\n          case 79: // 切换播放模式Ctrl + O\r\n            this.modeChange()\r\n            break\r\n        }\r\n      }\r\n    },\r\n    // 上一曲\r\n    prev() {\r\n      if (!this.musicReady) {\r\n        return\r\n      }\r\n      if (this.playlist.length === 1) {\r\n        this.loop()\r\n      } else {\r\n        let index = this.currentIndex - 1\r\n        if (index < 0) {\r\n          index = this.playlist.length - 1\r\n        }\r\n        this.setCurrentIndex(index)\r\n        if (!this.playing && this.musicReady) {\r\n          this.setPlaying(true)\r\n        }\r\n        this.musicReady = false\r\n      }\r\n    },\r\n    // 播放暂停\r\n    play() {\r\n      if (!this.musicReady) {\r\n        return\r\n      }\r\n      this.setPlaying(!this.playing)\r\n    },\r\n    // 下一曲\r\n    // 当 flag 为 true 时，表示上一曲播放失败\r\n    next(flag = false) {\r\n      if (!this.musicReady) {\r\n        return\r\n      }\r\n      const {\r\n        playlist: { length }\r\n      } = this\r\n      if (\r\n        (length - 1 === this.currentIndex && this.mode === playMode.order) ||\r\n        (length === 1 && flag)\r\n      ) {\r\n        this.setCurrentIndex(-1)\r\n        this.setPlaying(false)\r\n        return\r\n      }\r\n      if (length === 1) {\r\n        this.loop()\r\n      } else {\r\n        let index = this.currentIndex + 1\r\n        if (index === length) {\r\n          index = 0\r\n        }\r\n        if (!this.playing && this.musicReady) {\r\n          this.setPlaying(true)\r\n        }\r\n        this.setCurrentIndex(index)\r\n        this.musicReady = false\r\n      }\r\n    },\r\n    // 循环\r\n    loop() {\r\n      this.audioEle.currentTime = 0\r\n      silencePromise(this.audioEle.play())\r\n      this.setPlaying(true)\r\n      if (this.lyric.length > 0) {\r\n        this.lyricIndex = 0\r\n      }\r\n    },\r\n    // 修改音乐显示时长\r\n    progressMusic(percent) {\r\n      this.currentTime = this.currentMusic.duration * percent\r\n    },\r\n    // 修改音乐进度\r\n    progressMusicEnd(percent) {\r\n      this.audioEle.currentTime = this.currentMusic.duration * percent\r\n    },\r\n    // 切换播放顺序\r\n    modeChange() {\r\n      const mode = (this.mode + 1) % 4\r\n      this.setPlayMode(mode)\r\n      if (mode === playMode.loop) {\r\n        return\r\n      }\r\n      let list = []\r\n      switch (mode) {\r\n        case playMode.listLoop:\r\n        case playMode.order:\r\n          list = this.orderList\r\n          break\r\n        case playMode.random:\r\n          list = randomSortArray(this.orderList)\r\n          break\r\n      }\r\n      this.resetCurrentIndex(list)\r\n      this.setPlaylist(list)\r\n    },\r\n    // 修改当前歌曲索引\r\n    resetCurrentIndex(list) {\r\n      const index = list.findIndex(item => {\r\n        return item.id === this.currentMusic.id\r\n      })\r\n      this.setCurrentIndex(index)\r\n    },\r\n    // 打开音乐评论\r\n    openComment() {\r\n      if (!this.currentMusic.id) {\r\n        this.$mmToast('还没有播放歌曲哦！')\r\n        return false\r\n      }\r\n      this.$router.push(`/music/comment/${this.currentMusic.id}`)\r\n    },\r\n    // 修改音量大小\r\n    volumeChange(percent) {\r\n      percent === 0 ? (this.isMute = true) : (this.isMute = false)\r\n      this.volume = percent\r\n      this.audioEle.volume = percent\r\n      setVolume(percent)\r\n    },\r\n    // 获取播放模式 icon\r\n    getModeIconType() {\r\n      return {\r\n        [playMode.listLoop]: 'loop',\r\n        [playMode.order]: 'sequence',\r\n        [playMode.random]: 'random',\r\n        [playMode.loop]: 'loop-one'\r\n      }[this.mode]\r\n    },\r\n    // 获取播放模式 title\r\n    getModeIconTitle() {\r\n      const key = 'Ctrl + O'\r\n      return {\r\n        [playMode.listLoop]: `列表循环 ${key}`,\r\n        [playMode.order]: `顺序播放 ${key}`,\r\n        [playMode.random]: `随机播放 ${key}`,\r\n        [playMode.loop]: `单曲循环 ${key}`\r\n      }[this.mode]\r\n    },\r\n    // 查看歌词\r\n    handleOpenLyric() {\r\n      this.lyricVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.lyric.clacTop()\r\n      })\r\n    },\r\n    // 关闭歌词\r\n    handleCloseLyric() {\r\n      this.lyricVisible = false\r\n    },\r\n    // 获取歌词\r\n    _getLyric(id) {\r\n      getLyric(id).then(res => {\r\n        if (res.nolyric) {\r\n          this.nolyric = true\r\n        } else {\r\n          this.nolyric = false\r\n          this.lyric = parseLyric(res.lrc.lyric)\r\n        }\r\n        silencePromise(this.audioEle.play())\r\n      })\r\n    },\r\n    ...mapMutations({\r\n      setPlaying: 'SET_PLAYING',\r\n      setPlaylist: 'SET_PLAYLIST',\r\n      setCurrentIndex: 'SET_CURRENTINDEX'\r\n    }),\r\n    ...mapActions(['setHistory', 'setPlayMode'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.music {\r\n  padding: 75px 25px 25px 25px;\r\n  width: 100%;\r\n  max-width: 1750px;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  .music-content {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(~'100% - 80px');\r\n    .music-left {\r\n      flex: 1;\r\n      height: 100%;\r\n      overflow: hidden;\r\n      .music-list {\r\n        height: calc(~'100% - 60px');\r\n      }\r\n    }\r\n    .music-right {\r\n      position: relative;\r\n      width: 310px;\r\n      margin-left: 10px;\r\n      .close-lyric {\r\n        position: absolute;\r\n        top: 0;\r\n        z-index: 1;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*底部mmPlayer-bar*/\r\n  .music-bar {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 80px;\r\n    box-sizing: border-box;\r\n    padding-bottom: 15px;\r\n    color: #fff;\r\n    &.disable {\r\n      pointer-events: none;\r\n      opacity: 0.6;\r\n    }\r\n    .icon-color {\r\n      color: #fff;\r\n    }\r\n    .music-bar-btns {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 180px;\r\n      .control-play {\r\n        .flex-center;\r\n        border-radius: 50%;\r\n        width: 40px;\r\n        height: 40px;\r\n        color: #fff;\r\n        background-color: rgba(255, 255, 255, 0.3);\r\n        .icon-bofang101 {\r\n          transform: translateX(2px);\r\n        }\r\n      }\r\n    }\r\n\r\n    .flex-center;\r\n    .btn-prev {\r\n      width: 19px;\r\n      min-width: 19px;\r\n      height: 20px;\r\n      background-position: 0 -30px;\r\n    }\r\n    .btn-play {\r\n      width: 21px;\r\n      min-width: 21px;\r\n      height: 29px;\r\n      margin: 0 50px;\r\n      background-position: 0 0;\r\n      &.btn-play-pause {\r\n        background-position: -30px 0;\r\n      }\r\n    }\r\n    .btn-next {\r\n      width: 19px;\r\n      min-width: 19px;\r\n      height: 20px;\r\n      background-position: 0 -52px;\r\n    }\r\n    .music-music {\r\n      position: relative;\r\n      width: 100%;\r\n      flex: 1;\r\n      box-sizing: border-box;\r\n      padding-left: 40px;\r\n      font-size: @font_size_small;\r\n      color: @text_color_active;\r\n      .music-bar-info {\r\n        height: 15px;\r\n        padding-right: 80px;\r\n        line-height: 15px;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 1;\r\n        -webkit-box-orient: vertical;\r\n      }\r\n      .music-bar-time {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 5px;\r\n      }\r\n    }\r\n    .mode,\r\n    .comment,\r\n    .music-bar-volume {\r\n      margin-left: 20px;\r\n    }\r\n\r\n    // 音量控制\r\n    .volume-wrapper {\r\n      margin-left: 20px;\r\n      width: 150px;\r\n    }\r\n  }\r\n\r\n  /*遮罩*/\r\n  .mmPlayer-mask,\r\n  .mmPlayer-bg {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n  .mmPlayer-mask {\r\n    z-index: -1;\r\n    background-color: @mask_color;\r\n  }\r\n\r\n  .mmPlayer-bg {\r\n    z-index: -2;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: 50%;\r\n    filter: blur(12px);\r\n    opacity: 0.7;\r\n    transition: all 0.8s;\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    .close-lyric {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  //当屏幕小于960时\r\n  @media (max-width: 960px) {\r\n    .music-right {\r\n      display: none;\r\n      &.show {\r\n        display: block;\r\n        margin-left: 0;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  //当屏幕小于768时\r\n  @media (max-width: 768px) {\r\n    & {\r\n      padding: 75px 15px 5px 15px;\r\n    }\r\n\r\n    .music-content .music-left {\r\n      .music-list {\r\n        font-size: @font_size_medium;\r\n      }\r\n    }\r\n\r\n    .music-bar {\r\n      .music-bar-info span,\r\n      .music-bar-volume .mmProgress {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n  //当屏幕小于520时\r\n  @media (max-width: 520px) {\r\n    .music-bar {\r\n      position: relative;\r\n      flex-direction: column;\r\n      .music-bar-btns {\r\n        width: 60%;\r\n        margin-top: 15px;\r\n        order: 2;\r\n      }\r\n      .music-music {\r\n        padding-left: 0;\r\n        order: 1;\r\n      }\r\n      & > i.mode {\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 5px;\r\n        margin: 0;\r\n      }\r\n      .comment {\r\n        position: absolute;\r\n        top: 40px;\r\n        right: 5px;\r\n      }\r\n      .music-bar-volume {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./music.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./music.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./music.vue?vue&type=template&id=60b8be11&\"\nimport script from \"./music.vue?vue&type=script&lang=js&\"\nexport * from \"./music.vue?vue&type=script&lang=js&\"\nimport style0 from \"./music.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = require('./lib/axios');","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CodingStateMachine = require('./codingstatemachine')\nvar MultiByteCharSetProber = require('./mbcharsetprober')\nvar Big5SMModel = require('./mbcssm/big5')\nvar Big5DistributionAnalysis = require('./chardistribution').Big5DistributionAnalysis\n\nfunction Big5Prober() {\n    MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(Big5SMModel);\n        self._mDistributionAnalyzer = new Big5DistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"Big5\";\n    }\n\n    init();\n}\nBig5Prober.prototype = new MultiByteCharSetProber();\n\nmodule.exports = Big5Prober\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CodingStateMachine = require('./codingstatemachine');\nvar MultiByteCharSetProber = require('./mbcharsetprober');\nvar SJISSMModel = require('./mbcssm/sjis');\nvar SJISDistributionAnalysis = require('./chardistribution').SJISDistributionAnalysis;\nvar SJISContextAnalysis = require('./jpcntx').SJISContextAnalysis;\nvar constants = require('./constants');\nvar logger = require('./logger');\n\nfunction SJISProber() {\n    MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(SJISSMModel);\n        self._mDistributionAnalyzer = new SJISDistributionAnalysis();\n        self._mContextAnalyzer = new SJISContextAnalysis();\n        self.reset();\n    }\n\n    this.reset = function() {\n        SJISProber.prototype.reset.apply(this);\n        this._mContextAnalyzer.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"SHIFT_JIS\";\n    }\n\n    this.feed = function(aBuf) {\n        var aLen = aBuf.length;\n        for( var i = 0; i < aLen; i++ ) {\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\n            if( codingState == constants.error ) {\n                logger.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n                this._mState = constants.notMe;\n                break;\n            } else if( codingState == constants.itsMe ) {\n                this._mState = constants.foundIt;\n                break;\n            } else if( codingState == constants.start ) {\n                var charLen = this._mCodingSM.getCurrentCharLen();\n                if( i == 0 ) {\n                    this._mLastChar[1] = aBuf[0];\n                    this._mContextAnalyzer.feed(this._mLastChar.slice(2 - charLen), charLen);\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n                } else {\n                    this._mContextAnalyzer.feed(aBuf.slice(i + 1 - charLen, i + 3 - charLen), charLen);\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\n                }\n            }\n        }\n\n        this._mLastChar[0] = aBuf[aLen - 1];\n\n        if( this.getState() == constants.detecting ) {\n            if( this._mContextAnalyzer.gotEnoughData() &&\n                this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\n                this._mState = constants.foundIt;\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var contxtCf = this._mContextAnalyzer.getConfidence();\n        var distribCf = this._mDistributionAnalyzer.getConfidence();\n        return Math.max(contxtCf, distribCf);\n    }\n\n    init();\n}\nSJISProber.prototype = new MultiByteCharSetProber();\n\nmodule.exports = SJISProber\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// This is hiragana 2-char sequence table, the number in each cell represents its frequency category\nexports.jp2CharContext = [\n[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],\n[2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4],\n[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],\n[0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4],\n[1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4],\n[0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3],\n[0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3],\n[0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3],\n[0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4],\n[0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3],\n[2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4],\n[0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3],\n[0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5],\n[0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3],\n[2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5],\n[0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4],\n[1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4],\n[0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3],\n[0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3],\n[0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3],\n[0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5],\n[0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4],\n[0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5],\n[0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3],\n[0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4],\n[0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4],\n[0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4],\n[0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1],\n[0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\n[1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3],\n[0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0],\n[0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3],\n[0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3],\n[0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5],\n[0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4],\n[2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5],\n[0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3],\n[0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3],\n[0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3],\n[0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3],\n[0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4],\n[0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4],\n[0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2],\n[0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3],\n[0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3],\n[0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3],\n[0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3],\n[0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4],\n[0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3],\n[0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4],\n[0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3],\n[0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3],\n[0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4],\n[0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4],\n[0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3],\n[2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4],\n[0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4],\n[0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3],\n[0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4],\n[0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4],\n[1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4],\n[0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3],\n[0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2],\n[0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2],\n[0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3],\n[0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3],\n[0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5],\n[0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3],\n[0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4],\n[1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4],\n[0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n[0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3],\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1],\n[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2],\n[0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3],\n[0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1]\n];\n\nfunction JapaneseContextAnalysis() {\n    var NUM_OF_CATEGORY = 6;\n    var DONT_KNOW = -1;\n    var ENOUGH_REL_THRESHOLD = 100;\n    var MAX_REL_THRESHOLD = 1000;\n    var MINIMUM_DATA_THRESHOLD = 4;\n    var self = this;\n\n    function init() {\n        self.reset();\n    }\n\n    this.reset = function() {\n        this._mTotalRel = 0; // total sequence received\n        this._mRelSample = []; // category counters, each interger counts sequence in its category\n        for( var i = 0; i < NUM_OF_CATEGORY; this._mRelSample[i++] = 0 );\n        this._mNeedToSkipCharNum = 0; // if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer\n        this._mLastCharOrder = -1; // The order of previous char\n        this._mDone = false; // If this flag is set to true, detection is done and conclusion has been made\n    }\n\n    this.feed = function(aBuf, aLen) {\n        if( this._mDone ) return;\n\n        // The buffer we got is byte oriented, and a character may span in more than one\n        // buffers. In case the last one or two byte in last buffer is not complete, we\n        // record how many byte needed to complete that character and skip these bytes here.\n        // We can choose to record those bytes as well and analyse the character once it\n        // is complete, but since a character will not make much difference, by simply skipping\n        // this character will simply our logic and improve performance.\n        var i = this._mNeedToSkipCharNum;\n        while( i < aLen ) {\n            var rets = this.getOrder(aBuf.slice(i,i+2));\n            var order = rets[0];\n            var charLen = rets[1];\n            i += charLen;\n            if( i > aLen ) {\n                this._mNeedToSkipCharNum = i - aLen;\n                this._mLastCharOrder = -1;\n            } else {\n                if( order != -1 && this._mLastCharOrder != -1 ) {\n                    this._mTotalRel += 1;\n                    if( this._mTotalRel > MAX_REL_THRESHOLD ) {\n                        this._mDone = true;\n                        break;\n                    }\n                    this._mRelSample[exports.jp2CharContext[this._mLastCharOrder][order]] += 1;\n                }\n                this._mLastCharOrder = order;\n            }\n        }\n    }\n\n    this.gotEnoughData = function() {\n        return this._mTotalRel > ENOUGH_REL_THRESHOLD;\n    }\n\n    this.getConfidence = function() {\n        // This is just one way to calculate confidence. It works well for me.\n        if( this._mTotalRel > MINIMUM_DATA_THRESHOLD ) {\n            return (this._mTotalRel - this._mRelSample[0]) / this._mTotalRel;\n        } else {\n            return DONT_KNOW;\n        }\n    }\n\n    this.getOrder = function(aStr) {\n        return [-1, 1];\n    }\n\n    init();\n}\n\nfunction SJISContextAnalysis() {\n    this.getOrder = function(aStr) {\n        if( !aStr ) return [-1, 1];\n        // find out current char's byte length\n        if( (aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F) ||\n            (aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xFC) ) {\n            var charLen = 2;\n        } else {\n            charLen = 1;\n        }\n\n        // return its order if it is hiragana\n        if( aStr.length > 1 ) {\n            if( aStr.charCodeAt(0) == 0x82 && aStr.charCodeAt(1) >= 0x9F &&\n                aStr.charCodeAt(0) <= 0xF1 ) {\n                return [aStr.charCodeAt(1) - 0x9F, charLen];\n            }\n        }\n\n        return [-1, charLen];\n    }\n}\nSJISContextAnalysis.prototype = new JapaneseContextAnalysis();\n\nexports.SJISContextAnalysis = SJISContextAnalysis\n\nfunction EUCJPContextAnalysis() {\n    this.getOrder = function(aStr) {\n        if( !aStr ) return [-1, 1];\n        // find out current char's byte length\n        if( aStr.charCodeAt(0) >= 0x8E ||\n            (aStr.charCodeAt(0) >= 0xA1 && aStr.charCodeAt(0) <= 0xFE) ) {\n            var charLen = 2;\n        } else if( aStr.charCodeAt(0) == 0x8F ) {\n            charLen = 3;\n        } else {\n            charLen = 1;\n        }\n\n        // return its order if it is hiragana\n        if( aStr.length > 1 ) {\n            if( aStr.charCodeAt(0) == 0xA4 && aStr.charCodeAt(1) >= 0xA1 &&\n                aStr.charCodeAt(1) <= 0xF3 ) {\n                return [aStr.charCodeAt(1) - 0xA1, charLen];\n            }\n        }\n\n        return [-1, charLen];\n    }\n}\nEUCJPContextAnalysis.prototype = new JapaneseContextAnalysis();\n\nexports.EUCJPContextAnalysis = EUCJPContextAnalysis\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","var consts = require('../constants');\n\nvar SJIS_cls = [\n    1,1,1,1,1,1,1,1,  // 00 - 07\n    1,1,1,1,1,1,0,0,  // 08 - 0f\n    1,1,1,1,1,1,1,1,  // 10 - 17\n    1,1,1,0,1,1,1,1,  // 18 - 1f\n    1,1,1,1,1,1,1,1,  // 20 - 27\n    1,1,1,1,1,1,1,1,  // 28 - 2f\n    1,1,1,1,1,1,1,1,  // 30 - 37\n    1,1,1,1,1,1,1,1,  // 38 - 3f\n    2,2,2,2,2,2,2,2,  // 40 - 47\n    2,2,2,2,2,2,2,2,  // 48 - 4f\n    2,2,2,2,2,2,2,2,  // 50 - 57\n    2,2,2,2,2,2,2,2,  // 58 - 5f\n    2,2,2,2,2,2,2,2,  // 60 - 67\n    2,2,2,2,2,2,2,2,  // 68 - 6f\n    2,2,2,2,2,2,2,2,  // 70 - 77\n    2,2,2,2,2,2,2,1,  // 78 - 7f\n    3,3,3,3,3,3,3,3,  // 80 - 87\n    3,3,3,3,3,3,3,3,  // 88 - 8f\n    3,3,3,3,3,3,3,3,  // 90 - 97\n    3,3,3,3,3,3,3,3,  // 98 - 9f\n    // 0xa0 is illegal in sjis encoding, but some pages does\n    // contain such byte. We need to be more consts.error forgiven.\n    2,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    3,3,3,3,3,3,3,3,  // e0 - e7\n    3,3,3,3,3,4,4,4,  // e8 - ef\n    3,3,3,3,3,3,3,3,  // f0 - f7\n    3,3,3,3,3,0,0,0   // f8 - ff\n];\n\nvar SJIS_st = [\n    consts.error,consts.start,consts.start,    3,consts.error,consts.error,consts.error,consts.error, //00-07\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start,consts.start,consts.start  //10-17\n];\n\nvar SJISCharLenTable = [0, 1, 1, 2, 0, 0];\n\nmodule.exports = {\n    \"classTable\"    : SJIS_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : SJIS_st,\n    \"charLenTable\"  : SJISCharLenTable,\n    \"name\"          : \"Shift_JIS\"\n};\n","// 随机排序数组/洗牌函数 https://github.com/lodash/lodash/blob/master/shuffle.js\nfunction copyArray(source, array) {\n  let index = -1\n  const length = source.length\n  array || (array = new Array(length))\n  while (++index < length) {\n    array[index] = source[index]\n  }\n  return array\n}\n\nexport const randomSortArray = function shuffle(array) {\n  const length = array == null ? 0 : array.length\n  if (!length) {\n    return []\n  }\n  let index = -1\n  const lastIndex = length - 1\n  const result = copyArray(array)\n  while (++index < length) {\n    const rand = index + Math.floor(Math.random() * (lastIndex - index + 1))\n    const value = result[rand]\n    result[rand] = result[index]\n    result[index] = value\n  }\n  return result\n}\n\n// 防抖函数\nexport function debounce(func, delay) {\n  let timer\n  return function(...args) {\n    if (timer) {\n      clearTimeout(timer)\n    }\n    timer = setTimeout(() => {\n      func.apply(this, args)\n    }, delay)\n  }\n}\n\n// 补0函数\nexport function addZero(s) {\n  return s < 10 ? '0' + s : s\n}\n\n// 歌词解析\nconst timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g\nexport function parseLyric(lrc) {\n  const lines = lrc.split('\\n')\n  const lyric = []\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i]\n    const result = timeExp.exec(line)\n    if (!result) {\n      continue\n    }\n    const text = line.replace(timeExp, '').trim()\n    if (text) {\n      lyric.push({\n        time: (result[1] * 6e4 + result[2] * 1e3 + (result[3] || 0) * 1) / 1e3,\n        text\n      })\n    }\n  }\n  return lyric\n}\n\n// 时间格式化\nexport function format(value) {\n  let minute = Math.floor(value / 60)\n  let second = Math.floor(value % 60)\n  return `${addZero(minute)}:${addZero(second)}`\n}\n\n/**\n * https://github.com/videojs/video.js/blob/master/src/js/utils/promise.js\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nexport function isPromise(v) {\n  return v !== undefined && v !== null && typeof v.then === 'function'\n}\n\nexport function silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, () => {})\n  }\n}\n\n// 判断 string 类型\nexport function isString(v) {\n  return typeof v === 'string'\n}\n\n// http 链接转化成 https\nexport function toHttps(url) {\n  if (!isString(url)) {\n    return url\n  }\n  return url.replace('http://', 'https://')\n}\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n/**\n * This is a port from the python port, version \"2.0.1\"\n */\n\nvar constants = require('./constants');\nvar MBCSGroupProber = require('./mbcsgroupprober');\nvar SBCSGroupProber = require('./sbcsgroupprober');\nvar Latin1Prober = require('./latin1prober');\nvar EscCharSetProber = require('./escprober')\nvar logger = require('./logger');\n\nfunction UniversalDetector(options) {\n    if (!options) options = {};\n    if (!options.minimumThreshold)  options.minimumThreshold = 0.20;\n\n    var _state = {\n        pureAscii   : 0,\n        escAscii    : 1,\n        highbyte    : 2\n    };\n    var self = this;\n\n    function init() {\n        self._highBitDetector = /[\\x80-\\xFF]/;\n        self._escDetector = /(\\x1B|~\\{)/;\n        self._mEscCharsetProber = null;\n        self._mCharsetProbers = [];\n        self.reset();\n    }\n\n    this.reset = function() {\n        this.result = {\"encoding\": null, \"confidence\": 0.0};\n        this.results = []\n        this.done = false;\n        this._mStart = true;\n        this._mGotData = false;\n        this._mInputState = _state.pureAscii;\n        this._mLastChar = \"\";\n        this._mBOM = \"\";\n        if( this._mEscCharsetProber ) {\n            this._mEscCharsetProber.reset();\n        }\n        for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n            prober.reset();\n        }\n    }\n\n    this.feed = function(aBuf) {\n        if( this.done ) return;\n\n        var aLen = aBuf.length;\n        if( !aLen ) return;\n\n        if( !this._mGotData ) {\n            this._mBOM += aBuf;\n            // If the data starts with BOM, we know it is UTF\n            if( this._mBOM.slice(0,3) == \"\\xEF\\xBB\\xBF\" ) {\n                // EF BB BF  UTF-8 with BOM\n                this.result = {\"encoding\": \"UTF-8\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\xFF\\xFE\\x00\\x00\" ) {\n                // FF FE 00 00  UTF-32, little-endian BOM\n                this.result = {\"encoding\": \"UTF-32LE\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\x00\\x00\\xFE\\xFF\" ) {\n                // 00 00 FE FF  UTF-32, big-endian BOM\n                this.result = {\"encoding\": \"UTF-32BE\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\xFE\\xFF\\x00\\x00\" ) {\n                // FE FF 00 00  UCS-4, unusual octet order BOM (3412)\n                this.result = {\"encoding\": \"X-ISO-10646-UCS-4-3412\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,4) == \"\\x00\\x00\\xFF\\xFE\" ) {\n                // 00 00 FF FE  UCS-4, unusual octet order BOM (2143)\n                this.result = {\"encoding\": \"X-ISO-10646-UCS-4-2143\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,2) == \"\\xFF\\xFE\" ) {\n                // FF FE  UTF-16, little endian BOM\n                this.result = {\"encoding\": \"UTF-16LE\", \"confidence\": 1.0};\n            } else if( this._mBOM.slice(0,2) == \"\\xFE\\xFF\" ) {\n                // FE FF  UTF-16, big endian BOM\n                this.result = {\"encoding\": \"UTF-16BE\", \"confidence\": 1.0};\n            }\n\n            if (this.result.confidence > 0) {\n                this.results = [this.result];\n            }\n\n            // If we got to 4 chars without being able to detect a BOM we\n            // stop trying.\n            if( this._mBOM.length > 3 ) {\n                this._mGotData = true;\n            }\n        }\n\n        if( this.result.encoding && (this.result.confidence > 0.0) ) {\n            this.done = true;\n            return;\n        }\n\n        if( this._mInputState == _state.pureAscii ) {\n            if( this._highBitDetector.test(aBuf) ) {\n                this._mInputState = _state.highbyte;\n            } else if( this._escDetector.test(this._mLastChar + aBuf) ) {\n                this._mInputState = _state.escAscii;\n            }\n        }\n\n        this._mLastChar = aBuf.slice(-1);\n\n        if( this._mInputState == _state.escAscii ) {\n            if( !this._mEscCharsetProber ) {\n                this._mEscCharsetProber = new EscCharSetProber();\n            }\n            if( this._mEscCharsetProber.feed(aBuf) == constants.foundIt ) {\n                this.result = {\n                    \"encoding\": this._mEscCharsetProber.getCharsetName(),\n                    \"confidence\": this._mEscCharsetProber.getConfidence()\n                };\n                this.results = [this.result];\n                this.done = true;\n            }\n        } else if( this._mInputState == _state.highbyte ) {\n            if( this._mCharsetProbers.length == 0 ) {\n                this._mCharsetProbers = [\n                    new MBCSGroupProber(),\n                    new SBCSGroupProber(),\n                    new Latin1Prober()\n                ];\n            }\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n                if( prober.feed(aBuf) == constants.foundIt ) {\n                    this.result = {\n                        \"encoding\": prober.getCharsetName(),\n                        \"confidence\": prober.getConfidence()\n                    };\n                    this.results = [this.result];\n                    this.done = true;\n                    break;\n                }\n            }\n        }\n    }\n\n    this.close = function() {\n        if( this.done ) return;\n        if( this._mBOM.length === 0 ) {\n            logger.log(\"no data received!\\n\");\n            return;\n        }\n        this.done = true;\n\n        if( this._mInputState == _state.pureAscii ) {\n            logger.log(\"pure ascii\")\n            this.result = {\"encoding\": \"ascii\", \"confidence\": 1.0};\n            this.results.push(this.result);\n            return this.result;\n        }\n\n        if( this._mInputState == _state.highbyte ) {\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n                if( !prober || !prober.getCharsetName()) continue;\n                this.results.push({\n                    \"encoding\": prober.getCharsetName(),\n                    \"confidence\": prober.getConfidence()\n                });\n                logger.log(prober.getCharsetName() + \" confidence \" + prober.getConfidence());\n            }\n            this.results.sort(function(a, b) {\n                return b.confidence - a.confidence;\n            });\n            if (this.results.length > 0) {\n                var topResult = this.results[0];\n                if (topResult.confidence >= options.minimumThreshold) {\n                    this.result = topResult;\n                    return topResult;\n                }\n            }\n        }\n\n        if( logger.enabled ) {\n            logger.log(\"no probers hit minimum threshhold\\n\");\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\n                if( !prober ) continue;\n                logger.log(prober.getCharsetName() + \" confidence = \" +\n                    prober.getConfidence() + \"\\n\");\n            }\n        }\n    }\n\n    init();\n}\n\nmodule.exports = UniversalDetector;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar constants = require('./constants')\n\nfunction CharSetProber() {\n    this.reset = function() {\n        this._mState = constants.detecting;\n    }\n\n    this.getCharsetName = function() {\n        return null;\n    }\n\n    this.feed = function(aBuf) {\n    }\n\n    this.getState = function() {\n        return this._mState;\n    }\n\n    this.getConfidence = function() {\n        return 0.0;\n    }\n\n    this.filterHighBitOnly = function(aBuf) {\n        aBuf = aBuf.replace(/[\\x00-\\x7F]+/g, \" \");\n        return aBuf;\n    }\n\n    this.filterWithoutEnglishLetters = function(aBuf) {\n        aBuf = aBuf.replace(/[A-Za-z]+/g, \" \");\n        return aBuf;\n    }\n\n    // Input: aBuf is a string containing all different types of characters\n    // Output: a string that contains all alphabetic letters, high-byte characters, and word immediately preceding `>`, but nothing else within `<>`\n    // Ex: input - '¡£º <div blah blah> abcdef</div> apples! * and oranges 9jd93jd>'\n    //     output - '¡£º blah div apples and oranges jd jd '\n    this.filterWithEnglishLetters = function(aBuf) {\n        var result = '';\n        var inTag = false;\n        var prev = 0;\n\n        for (var curr = 0; curr < aBuf.length; curr++) {\n          var c = aBuf[curr];\n\n          if (c == '>') {\n            inTag = false;\n          } else if (c == '<') {\n            inTag = true;\n          }\n\n          var isAlpha = /[a-zA-Z]/.test(c);\n          var isASCII = /^[\\x00-\\x7F]*$/.test(c);\n\n          if (isASCII && !isAlpha) {\n            if (curr > prev && !inTag) {\n              result = result + aBuf.substring(prev, curr) + ' ';\n            }\n\n            prev = curr + 1;\n          }\n        }\n\n        if (!inTag) {\n          result = result + aBuf.substring(prev);\n        }\n\n        return result;\n    }\n}\n\nmodule.exports = CharSetProber\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./music-btn.vue?vue&type=style&index=0&id=1d83fc82&lang=less&scoped=true&\"","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var uncurriedNativeMethod = uncurryThis(nativeMethod);\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };\n        }\n        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    redefine(String.prototype, KEY, methods[0]);\n    redefine(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var consts = require('../constants');\n\nvar EUCJP_cls = [\n    4,4,4,4,4,4,4,4,  // 00 - 07\n    4,4,4,4,4,4,5,5,  // 08 - 0f\n    4,4,4,4,4,4,4,4,  // 10 - 17\n    4,4,4,5,4,4,4,4,  // 18 - 1f\n    4,4,4,4,4,4,4,4,  // 20 - 27\n    4,4,4,4,4,4,4,4,  // 28 - 2f\n    4,4,4,4,4,4,4,4,  // 30 - 37\n    4,4,4,4,4,4,4,4,  // 38 - 3f\n    4,4,4,4,4,4,4,4,  // 40 - 47\n    4,4,4,4,4,4,4,4,  // 48 - 4f\n    4,4,4,4,4,4,4,4,  // 50 - 57\n    4,4,4,4,4,4,4,4,  // 58 - 5f\n    4,4,4,4,4,4,4,4,  // 60 - 67\n    4,4,4,4,4,4,4,4,  // 68 - 6f\n    4,4,4,4,4,4,4,4,  // 70 - 77\n    4,4,4,4,4,4,4,4,  // 78 - 7f\n    5,5,5,5,5,5,5,5,  // 80 - 87\n    5,5,5,5,5,5,1,3,  // 88 - 8f\n    5,5,5,5,5,5,5,5,  // 90 - 97\n    5,5,5,5,5,5,5,5,  // 98 - 9f\n    5,2,2,2,2,2,2,2,  // a0 - a7\n    2,2,2,2,2,2,2,2,  // a8 - af\n    2,2,2,2,2,2,2,2,  // b0 - b7\n    2,2,2,2,2,2,2,2,  // b8 - bf\n    2,2,2,2,2,2,2,2,  // c0 - c7\n    2,2,2,2,2,2,2,2,  // c8 - cf\n    2,2,2,2,2,2,2,2,  // d0 - d7\n    2,2,2,2,2,2,2,2,  // d8 - df\n    0,0,0,0,0,0,0,0,  // e0 - e7\n    0,0,0,0,0,0,0,0,  // e8 - ef\n    0,0,0,0,0,0,0,0,  // f0 - f7\n    0,0,0,0,0,0,0,5   // f8 - ff\n];\n\nvar EUCJP_st = [\n         3,    4,    3,    5,consts.start,consts.error,consts.error,consts.error, //00-07\n     consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\n     consts.itsMe,consts.itsMe,consts.start,consts.error,consts.start,consts.error,consts.error,consts.error, //10-17\n     consts.error,consts.error,consts.start,consts.error,consts.error,consts.error,    3,consts.error, //18-1f\n         3,consts.error,consts.error,consts.error,consts.start,consts.start,consts.start,consts.start  //20-27\n];\n\nvar EUCJPCharLenTable = [2, 2, 2, 3, 1, 0];\n\nmodule.exports = {\n    \"classTable\"    : EUCJP_cls,\n    \"classFactor\"   : 6,\n    \"stateTable\"    : EUCJP_st,\n    \"charLenTable\"  : EUCJPCharLenTable,\n    \"name\"          : \"EUC-JP\"\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CharSetProber = require('./charsetprober');\nvar constants = require('./constants');\nvar logger = require('./logger');\n\nfunction SingleByteCharSetProber(model, reversed, nameProber) {\n    CharSetProber.apply(this);\n\n    var SAMPLE_SIZE = 64;\n    var SB_ENOUGH_REL_THRESHOLD = 1024;\n    var POSITIVE_SHORTCUT_THRESHOLD = 0.95;\n    var NEGATIVE_SHORTCUT_THRESHOLD = 0.05;\n    var SYMBOL_CAT_ORDER = 250;\n    var NUMBER_OF_SEQ_CAT = 4;\n    var POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1;\n    //var NEGATIVE_CAT = 0;\n\n    var self = this;\n\n    function init(model, reversed, nameProber) {\n        self._mModel = model;\n        self._mReversed = reversed; // \"true\" if we need to reverse every pair in the model lookup\n        self._mNameProber = nameProber; // Optional auxiliary prober for name decision\n        self.reset();\n    }\n\n    this.reset = function() {\n        SingleByteCharSetProber.prototype.reset.apply(this);\n        this._mLastOrder = 255; // char order of last character\n        this._mSeqCounters = [];\n        for( var i = 0; i < NUMBER_OF_SEQ_CAT; this._mSeqCounters[i++] = 0 );\n        this._mTotalSeqs = 0;\n        this._mTotalChar = 0;\n        this._mFreqChar = 0; // characters that fall in our sampling range\n    }\n\n    this.getCharsetName = function() {\n        if( this._mNameProber ) {\n            return this._mNameProber.getCharsetName();\n        } else {\n            return this._mModel.charsetName;\n        }\n    }\n\n    this.feed = function(aBuf) {\n        if( ! this._mModel.keepEnglishLetter ) {\n            aBuf = this.filterWithoutEnglishLetters(aBuf);\n        }\n        var aLen = aBuf.length;\n        if( !aLen ) {\n            return this.getState();\n        }\n        for( var i = 0, c; i < aLen; i++ )\n        {\n            c = aBuf.charCodeAt(i);\n            var order = this._mModel.charToOrderMap[c];\n            if( order < SYMBOL_CAT_ORDER ) {\n                this._mTotalChar++;\n            }\n            if( order < SAMPLE_SIZE ) {\n                this._mFreqChar++;\n                if( this._mLastOrder < SAMPLE_SIZE ) {\n                    this._mTotalSeqs++;\n                    if( !this._mReversed ) {\n                        this._mSeqCounters[this._mModel.precedenceMatrix[(this._mLastOrder * SAMPLE_SIZE) + order]]++;\n                    } else { // reverse the order of the letters in the lookup\n                        this._mSeqCounters[this._mModel.precedenceMatrix[(order * SAMPLE_SIZE) + this._mLastOrder]]++;\n                    }\n                }\n            }\n            this._mLastOrder = order;\n        }\n\n        if( this.getState() == constants.detecting ) {\n            if( self._mTotalSeqs > SB_ENOUGH_REL_THRESHOLD ) {\n                var cf = this.getConfidence();\n                if( cf > POSITIVE_SHORTCUT_THRESHOLD ) {\n                    logger.log(this._mModel.charsetName + \" confidence = \" + cf + \", we have a winner\\n\");\n                } else if( cf < NEGATIVE_SHORTCUT_THRESHOLD ) {\n                    logger.log(this._mModel.charsetName + \" confidence = \" + cf + \", below negative shortcut threshhold \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\");\n                    this._mState = constants.notMe;\n                }\n            }\n        }\n\n        return this.getState();\n    }\n\n    this.getConfidence = function() {\n        var r = 0.01;\n        if( this._mTotalSeqs > 0 ) {\n            //logger.log(this._mSeqCounters[POSITIVE_CAT] + \" \" + this._mTotalSeqs + \" \" + this._mModel.mTypicalPositiveRatio);\n            r = (1.0 * this._mSeqCounters[POSITIVE_CAT]) / this._mTotalSeqs / this._mModel.mTypicalPositiveRatio;\n            //logger.log(r + \" \" + this._mFreqChar + \" \" + this._mTotalChar);\n            r *= this._mFreqChar / this._mTotalChar;\n            if( r >= 1.0 ) {\n                r = 0.99;\n            }\n        }\n        return r;\n    }\n\n    reversed = reversed !== undefined ? reversed : false;\n    nameProber = nameProber !== undefined ? nameProber : null;\n    init(model, reversed, nameProber);\n}\nSingleByteCharSetProber.prototype = new CharSetProber();\n\nmodule.exports = SingleByteCharSetProber\n","module.exports = require('./src')","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar CharSetGroupProber = require('./charsetgroupprober');\nvar Big5Prober = require('./big5prober');\nvar UTF8Prober = require('./utf8prober');\nvar SJISProber = require('./sjisprober');\nvar EUCJPProber = require('./eucjpprober');\nvar GB2312Prober = require('./gb2312prober');\nvar EUCKRProber = require('./euckrprober');\nvar EUCTWProber = require('./euctwprober');\n\nfunction MBCSGroupProber() {\n    CharSetGroupProber.apply(this);\n    this._mProbers = [\n        new UTF8Prober(),\n        new SJISProber(),\n        new EUCJPProber(),\n        new GB2312Prober(),\n        new EUCKRProber(),\n        new Big5Prober(),\n        new EUCTWProber()\n    ];\n    this.reset();\n}\nMBCSGroupProber.prototype = new CharSetGroupProber();\n\nmodule.exports = MBCSGroupProber\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar MultiByteCharSetProber = require('./mbcharsetprober');\nvar CodingStateMachine = require('./codingstatemachine');\nvar GB2312SMModel = require('./mbcssm/gb2312');\nvar GB2312DistributionAnalysis = require('./chardistribution').GB2312DistributionAnalysis;\n\nfunction GB2312Prober() {\n    MultiByteCharSetProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mCodingSM = new CodingStateMachine(GB2312SMModel);\n        self._mDistributionAnalyzer = new GB2312DistributionAnalysis();\n        self.reset();\n    }\n\n    this.getCharsetName = function() {\n        return \"GB2312\";\n    }\n\n    init();\n}\nGB2312Prober.prototype = new MultiByteCharSetProber();\n\nmodule.exports = GB2312Prober\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n// KOI8-R language model\n// Character Mapping Table:\nexports.KOI8R_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,  // 80\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,  // 90\n223,224,225, 68,226,227,228,229,230,231,232,233,234,235,236,237,  // a0\n238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,  // b0\n 27,  3, 21, 28, 13,  2, 39, 19, 26,  4, 23, 11,  8, 12,  5,  1,  // c0\n 15, 16,  9,  7,  6, 14, 24, 10, 17, 18, 20, 25, 30, 29, 22, 54,  // d0\n 59, 37, 44, 58, 41, 48, 53, 46, 55, 42, 60, 36, 49, 38, 31, 34,  // e0\n 35, 43, 45, 32, 40, 52, 56, 33, 61, 62, 51, 57, 47, 63, 50, 70   // f0\n];\n\nexports.win1251_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n239,240,241,242,243,244,245,246, 68,247,248,249,250,251,252,253,\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16\n];\n\nexports.latin5_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,\n239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255\n];\n\nexports.macCyrillic_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n239,240,241,242,243,244,245,246,247,248,249,250,251,252, 68, 16,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27,255\n];\n\nexports.IBM855_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n191,192,193,194, 68,195,196,197,198,199,200,201,202,203,204,205,\n206,207,208,209,210,211,212,213,214,215,216,217, 27, 59, 54, 70,\n  3, 37, 21, 44, 28, 58, 13, 41,  2, 48, 39, 53, 19, 46,218,219,\n220,221,222,223,224, 26, 55,  4, 42,225,226,227,228, 23, 60,229,\n230,231,232,233,234,235, 11, 36,236,237,238,239,240,241,242,243,\n  8, 49, 12, 38,  5, 31,  1, 34, 15,244,245,246,247, 35, 16,248,\n 43,  9, 45,  7, 32,  6, 40, 14, 52, 24, 56, 10, 33, 17, 61,249,\n250, 18, 62, 20, 51, 25, 57, 30, 47, 29, 63, 22, 50,251,252,255\n];\n\nexports.IBM866_CharToOrderMap = [\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,\n239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255\n];\n\n// Model Table:\n// total sequences: 100%\n// first 512 sequences: 97.6601%\n// first 1024 sequences: 2.3389%\n// rest  sequences:      0.1237%\n// negative sequences:   0.0009%\nexports.RussianLangModel = [\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,\n3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,\n0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,\n0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\n2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\n3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,\n1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,\n1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,\n2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,\n1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,\n3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,\n1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,\n2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,\n1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,\n1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,\n1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,\n2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,\n1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,\n3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,\n1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,\n2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,\n1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,\n2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,\n1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,\n1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,\n1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,\n3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,\n2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,\n3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,\n1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,\n1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,\n0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\n2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,\n1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,\n1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,\n0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,\n1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\n2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,\n2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,\n1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,\n1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,\n2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,\n1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,\n0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,\n2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,\n1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,\n1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,\n0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,\n0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,\n0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\n1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,\n0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,\n0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\n1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,\n0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,\n2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\n1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,\n0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0\n];\n\nexports.Koi8rModel = {\n    \"charToOrderMap\"          : exports.KOI8R_CharToOrderMap,\n    \"precedenceMatrix\"        : exports.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"KOI8-R\"\n};\n\nexports.Win1251CyrillicModel = {\n    \"charToOrderMap\"          : exports.win1251_CharToOrderMap,\n    \"precedenceMatrix\"        : exports.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"windows-1251\"\n};\n\nexports.Latin5CyrillicModel = {\n    \"charToOrderMap\"          : exports.latin5_CharToOrderMap,\n    \"precedenceMatrix\"        : exports.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"ISO-8859-5\"\n};\n\nexports.MacCyrillicModel = {\n    \"charToOrderMap\"          : exports.macCyrillic_CharToOrderMap,\n    \"precedenceMatrix\"        : exports.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"x-mac-cyrillic\"\n};\n\nexports.Ibm866Model = {\n    \"charToOrderMap\"          : exports.IBM866_CharToOrderMap,\n    \"precedenceMatrix\"        : exports.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"IBM866\"\n};\n\nexports.Ibm855Model = {\n    \"charToOrderMap\"          : exports.IBM855_CharToOrderMap,\n    \"precedenceMatrix\"        : exports.RussianLangModel,\n    \"mTypicalPositiveRatio\"   : 0.976601,\n    \"keepEnglishLetter\"       : false,\n    \"charsetName\"             : \"IBM855\"\n};\n","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\nvar SingleByteCharSetProber = require('./sbcharsetprober');\nvar CharSetGroupProber = require('./charsetgroupprober');\nvar Win1255HebrewModel = require('./langhebrewmodel').Win1255HebrewModel;\nvar HebrewProber = require('./hebrewprober');\nvar cyrillicModels = require('./langcyrillicmodel');\nvar greekModels = require('./langgreekmodel');\nvar TIS620ThaiModel = require('./langthaimodel').TIS620ThaiModel;\nvar hungarianModels = require('./langhungarianmodel');\nvar bulgarianModels = require('./langbulgarianmodel')\n\nfunction SBCSGroupProber() {\n    CharSetGroupProber.apply(this);\n\n    var self = this;\n\n    function init() {\n        self._mProbers = [\n            new SingleByteCharSetProber(cyrillicModels.Win1251CyrillicModel),\n            new SingleByteCharSetProber(cyrillicModels.Koi8rModel),\n            new SingleByteCharSetProber(cyrillicModels.Latin5CyrillicModel),\n            new SingleByteCharSetProber(cyrillicModels.MacCyrillicModel),\n            new SingleByteCharSetProber(cyrillicModels.Ibm866Model),\n            new SingleByteCharSetProber(cyrillicModels.Ibm855Model),\n            new SingleByteCharSetProber(greekModels.Latin7GreekModel),\n            new SingleByteCharSetProber(greekModels.Win1253GreekModel),\n            new SingleByteCharSetProber(bulgarianModels.Latin5BulgarianModel),\n            new SingleByteCharSetProber(bulgarianModels.Win1251BulgarianModel),\n            new SingleByteCharSetProber(hungarianModels.Latin2HungarianModel),\n            new SingleByteCharSetProber(hungarianModels.Win1250HungarianModel),\n            new SingleByteCharSetProber(TIS620ThaiModel)\n        ];\n        var hebrewProber = new HebrewProber();\n        var logicalHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, false, hebrewProber);\n        var visualHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, true, hebrewProber);\n        hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\n        self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\n\n        self.reset();\n    }\n\n    init();\n}\nSBCSGroupProber.prototype = new CharSetGroupProber();\n\nmodule.exports = SBCSGroupProber;\n"],"sourceRoot":""}